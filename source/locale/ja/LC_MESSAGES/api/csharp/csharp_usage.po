# SOME DESCRIPTIVE TITLE.
# Copyright (C) 1998-2024
# This file is distributed under the same license as the GDAL package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2024.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: GDAL \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2024-06-23 04:43+0900\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language: ja\n"
"Language-Team: ja <LL@li.org>\n"
"Plural-Forms: nplurals=1; plural=0;\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.14.0\n"

#: ../../source/api/csharp/csharp_usage.rst:5
msgid "C# Bindings Usage Advice"
msgstr ""

#: ../../source/api/csharp/csharp_usage.rst:8
msgid "Adding reference to the GDAL/OGR assemblies"
msgstr ""

#: ../../source/api/csharp/csharp_usage.rst:10
#: ../../source/api/csharp/csharp_usage.rst:15
msgid "TODO"
msgstr ""

#: ../../source/api/csharp/csharp_usage.rst:13
msgid "Using the interface classes"
msgstr ""

#: ../../source/api/csharp/csharp_usage.rst:19
msgid "Modifying Local Search Path"
msgstr ""

#: ../../source/api/csharp/csharp_usage.rst:22
msgid ""
"If you want to add a folder to PATH during run-time, so you don't have to"
" pollute system PATH permanently, you can do it this way, in C#"
msgstr ""

#: ../../source/api/csharp/csharp_usage.rst:43
msgid "MSDN documentation:"
msgstr ""

#: ../../source/api/csharp/csharp_usage.rst:45
msgid ""
"`http://msdn2.microsoft.com/en-us/library/ms686206.aspx "
"<http://msdn2.microsoft.com/en-us/library/ms686206.aspx>`__"
msgstr ""

#: ../../source/api/csharp/csharp_usage.rst:46
msgid ""
"`http://msdn2.microsoft.com/en-"
"us/library/system.environment.setenvironmentvariable.aspx "
"<http://msdn2.microsoft.com/en-"
"us/library/system.environment.setenvironmentvariable.aspx>`__"
msgstr ""

#: ../../source/api/csharp/csharp_usage.rst:48
msgid ""
"Instead of the P/Invoke call to :program:`SetEnvironmentVariable()`, you "
"can use C# native method :program:`Environment.SetEnvironmentVariable()`."
" Read the doc carefully, because there are two versions of this method. "
"Unlike the Win32 API call accessed through P/Invoke, the method "
":program:`Environment.SetEnvironmentVariable()` has an overload that "
"*may* change environment permanently, across processes."
msgstr ""


# SOME DESCRIPTIVE TITLE.
# Copyright (C) 1998-2024
# This file is distributed under the same license as the GDAL package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2024.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: GDAL \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2024-06-23 04:43+0900\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language: ja\n"
"Language-Team: ja <LL@li.org>\n"
"Plural-Forms: nplurals=1; plural=0;\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.14.0\n"

#: ../../source/development/rfc/rfc67_nullfieldvalues.rst:5
msgid "RFC 67 : Null values in OGR"
msgstr ""

#: ../../source/development/rfc/rfc67_nullfieldvalues.rst:7
msgid "Author: Even Rouault"
msgstr ""

#: ../../source/development/rfc/rfc67_nullfieldvalues.rst:9
msgid "Contact: even.rouault at spatialys.com"
msgstr ""

#: ../../source/development/rfc/rfc67_nullfieldvalues.rst:11
msgid "Status: Adopted, implemented"
msgstr ""

#: ../../source/development/rfc/rfc67_nullfieldvalues.rst:13
msgid "Implementation version: 2.2"
msgstr ""

#: ../../source/development/rfc/rfc67_nullfieldvalues.rst:16
msgid "Summary"
msgstr ""

#: ../../source/development/rfc/rfc67_nullfieldvalues.rst:18
msgid ""
"This RFC implement the concept of null value for the field of a feature, "
"in addition to the existing unset status."
msgstr ""

#: ../../source/development/rfc/rfc67_nullfieldvalues.rst:22
msgid "Rationale"
msgstr ""

#: ../../source/development/rfc/rfc67_nullfieldvalues.rst:24
msgid ""
"Currently, OGR supports one single concept to indicate that a field value"
" is missing : the concept of unset field."
msgstr ""

#: ../../source/development/rfc/rfc67_nullfieldvalues.rst:27
msgid ""
"So assuming a JSon feature collection with 2 features would properties "
"would be { \"foo\": \"bar\" } and { \"foo\": \"bar\", \"other_field\": "
"null }, OGR currently returns that the other_field is unset in both "
"cases."
msgstr ""

#: ../../source/development/rfc/rfc67_nullfieldvalues.rst:31
msgid ""
"What is proposed here is that in the first case where the \"other_field\""
" keyword is totally absent, we use the current unset field concept. And "
"for the other case, we add a new concept of null field."
msgstr ""

#: ../../source/development/rfc/rfc67_nullfieldvalues.rst:35
msgid ""
"This distinction between both concepts apply to all GeoJSON based formats"
" and protocols, so GeoJSON, ElasticSearch, MongoDB, CouchDB, Cloudant."
msgstr ""

#: ../../source/development/rfc/rfc67_nullfieldvalues.rst:39
msgid ""
"This also applies for GML where the semantics of a missing element would "
"be mapped to unset field and an element with a xsi:nil=\"true\" attribute"
" would be mapped to a null field."
msgstr ""

#: ../../source/development/rfc/rfc67_nullfieldvalues.rst:44
msgid "Changes"
msgstr ""

#: ../../source/development/rfc/rfc67_nullfieldvalues.rst:47
msgid "OGRField"
msgstr ""

#: ../../source/development/rfc/rfc67_nullfieldvalues.rst:49
msgid ""
"The Set structure in the \"raw field\" union is modified to add a third "
"marker"
msgstr ""

#: ../../source/development/rfc/rfc67_nullfieldvalues.rst:60
msgid ""
"This is not strictly related to this work but the 3rd marker decreases "
"the likelihood of a genuine value to be misinterpreted as unset / null. "
"This does not increase the size of the structure that is already at least"
" 12 bytes large."
msgstr ""

#: ../../source/development/rfc/rfc67_nullfieldvalues.rst:65
msgid ""
"The current special value of OGRUnsetMarker = -21121 will be set in the 3"
" markers for unset field (currently set to the first 2 markers)."
msgstr ""

#: ../../source/development/rfc/rfc67_nullfieldvalues.rst:68
msgid ""
"Similarly for the new Null state, the new value OGRNullMarker = -21122 "
"will be set to the 3 markers."
msgstr ""

#: ../../source/development/rfc/rfc67_nullfieldvalues.rst:72
msgid "OGRFeature"
msgstr ""

#: ../../source/development/rfc/rfc67_nullfieldvalues.rst:74
msgid ""
"The methods int IsFieldNull( int nFieldIdx ) and void SetNullField ( int "
"nFieldIdx ) are added."
msgstr ""

#: ../../source/development/rfc/rfc67_nullfieldvalues.rst:77
msgid ""
"The accessors GetFieldXXXX() are modified to take into account the null "
"case, in the same way as if they are called on a unset field, so "
"returning 0 for numeric field types, empty string for string fields, "
"FALSE for date time fields and NULL for list-based types."
msgstr ""

#: ../../source/development/rfc/rfc67_nullfieldvalues.rst:82
msgid ""
"A convenience method OGRFeature::IsFieldSetAndNotNull() is added to ease "
"the porting of existing code that used previously IsFieldSet() and "
"doesn't need to distinguish between the unset and null states."
msgstr ""

#: ../../source/development/rfc/rfc67_nullfieldvalues.rst:87
msgid "C API"
msgstr ""

#: ../../source/development/rfc/rfc67_nullfieldvalues.rst:89
msgid "The following functions will be added:"
msgstr ""

#: ../../source/development/rfc/rfc67_nullfieldvalues.rst:99
msgid ""
"Lower-level functions will be added to manipulate directly the raw field "
"union (for use mostly in core and a few drivers), instead of directly "
"testing/ setting the markers :"
msgstr ""

#: ../../source/development/rfc/rfc67_nullfieldvalues.rst:111
msgid "SWIG bindings (Python / Java / C# / Perl) changes"
msgstr ""

#: ../../source/development/rfc/rfc67_nullfieldvalues.rst:113
msgid "The new methods will mapped to SWIG."
msgstr ""

#: ../../source/development/rfc/rfc67_nullfieldvalues.rst:116
msgid "Drivers"
msgstr ""

#: ../../source/development/rfc/rfc67_nullfieldvalues.rst:118
msgid ""
"The following drivers will be modified to take into account the unset and"
" NULL state as distinct states: GeoJSON, ElasticSearch, MongoDB, CouchDB,"
" Cloudant, GML, GMLAS, WFS."
msgstr ""

#: ../../source/development/rfc/rfc67_nullfieldvalues.rst:122
msgid ""
"Note: regarding the GMLAS driver, the previous behavior to have both xxxx"
" and xxxx_nil fields when xxxx is an optional nillable XML elements is "
"preserved by default (can be changed through a configuration setting in "
"the gmlasconf.xml file). The rationale is that the GMLAS driver is mostly"
" used to convert to SQL capable formats that cannot distinguish between "
"the unset and null states, hence the need for the 2 dedicated fields."
msgstr ""

#: ../../source/development/rfc/rfc67_nullfieldvalues.rst:130
msgid ""
"The CSV driver will be modified so that when EMPTY_STRING_AS_NULL open "
"option is specified, the new Null state is used."
msgstr ""

#: ../../source/development/rfc/rfc67_nullfieldvalues.rst:133
msgid ""
"All drivers that in their writing part test if the source feature has a "
"field unset will also test if the field is null."
msgstr ""

#: ../../source/development/rfc/rfc67_nullfieldvalues.rst:136
msgid ""
"For SQL based drivers (PG, PGDump, Carto, MySQL, OCI, SQLite, GPKG), on "
"reading a SQL NULL value will be mapped to the new Null state. On "
"writing, a unset field will not be mentioned in the corresponding INSERT "
"or UPDATE statement. Whereas a Null field will be mentioned and set to "
"NULL. On insertion, there will generally be no difference of behavior, "
"unless a default value is defined on the field, in which case it will be "
"used by the database engine to set the value in the unset case. On "
"update, a unset field will not see its content updated by the database, "
"where as a field set to NULL will be updated to NULL."
msgstr ""

#: ../../source/development/rfc/rfc67_nullfieldvalues.rst:147
msgid "Utilities"
msgstr ""

#: ../../source/development/rfc/rfc67_nullfieldvalues.rst:149
msgid ""
"No direct changes, but as the OGRFeature::DumpReadable() method is "
"modified so that unset fields of features are no longer displayed, the "
"output of ogrinfo will be affected."
msgstr ""

#: ../../source/development/rfc/rfc67_nullfieldvalues.rst:154
msgid "Documentation"
msgstr ""

#: ../../source/development/rfc/rfc67_nullfieldvalues.rst:156
msgid "All new methods/functions are documented."
msgstr ""

#: ../../source/development/rfc/rfc67_nullfieldvalues.rst:159
msgid "Test Suite"
msgstr ""

#: ../../source/development/rfc/rfc67_nullfieldvalues.rst:161
msgid "Core changes and updated drivers will be tested."
msgstr ""

#: ../../source/development/rfc/rfc67_nullfieldvalues.rst:164
msgid "Compatibility Issues"
msgstr ""

#: ../../source/development/rfc/rfc67_nullfieldvalues.rst:166
msgid ""
"All code, in GDAL source code, and in calling external code, that "
"currently uses OGRFeature::IsFieldSet() / OGR_F_IsFieldSet() should also "
"be updated to used IsFieldNull() / OGR_F_IsFieldNull(), either to act "
"exactly as in the unset case, or add a new appropriate behavior. A "
"convenience method and function OGRFeature::IsFieldSetAndNotNull() / "
"OGR_F_IsFieldSetAndNotNull() is added to ease the porting of existing "
"code."
msgstr ""

#: ../../source/development/rfc/rfc67_nullfieldvalues.rst:174
msgid ""
"Failure to do so, the existing code will see 0 for numeric field types, "
"empty string for string fields, FALSE for date time fields and NULL for "
"list-based types."
msgstr ""

#: ../../source/development/rfc/rfc67_nullfieldvalues.rst:178
msgid ""
"On the write side, for the GeoJSON driver, in GDAL 2.1 or before, a unset"
" field was written as field_name: null. Starting with GDAL 2.2, only "
"fields explicitly set as null with OGR_F_SetFieldNull() will be written "
"with a null value. Unset fields of a feature will not be present in the "
"corresponding JSon feature element."
msgstr ""

#: ../../source/development/rfc/rfc67_nullfieldvalues.rst:184
msgid "MIGRATION_GUIDE.TXT is updated to discuss those compatibility issues."
msgstr ""

#: ../../source/development/rfc/rfc67_nullfieldvalues.rst:187
msgid "Related ticket"
msgstr ""

#: ../../source/development/rfc/rfc67_nullfieldvalues.rst:189
msgid "None"
msgstr ""

#: ../../source/development/rfc/rfc67_nullfieldvalues.rst:192
msgid "Implementation"
msgstr ""

#: ../../source/development/rfc/rfc67_nullfieldvalues.rst:194
msgid ""
"The implementation will be done by Even Rouault (Spatialys) and be "
"sponsored by Safe Software."
msgstr ""

#: ../../source/development/rfc/rfc67_nullfieldvalues.rst:197
msgid ""
"The proposed implementation is available in "
"`https://github.com/rouault/gdal2/tree/rfc67 "
"<https://github.com/rouault/gdal2/tree/rfc67>`__"
msgstr ""

#: ../../source/development/rfc/rfc67_nullfieldvalues.rst:201
msgid "Voting history"
msgstr ""

#: ../../source/development/rfc/rfc67_nullfieldvalues.rst:203
msgid "+1 from JukkaR, DanielM, HowardB and EvenR"
msgstr ""

#~ msgid ""
#~ "So assuming a JSon feature collection"
#~ " with 2 features would properties "
#~ "would be { \"foo\": \"bar\" } and"
#~ " { \"foo\": \"bar\", \"other_field\": null"
#~ " }, OGR currently returns that the"
#~ " other_field is unset in both cases."
#~ msgstr ""

#~ msgid ""
#~ "On the write side, for the GeoJSON"
#~ " driver, in GDAL 2.1 or before, "
#~ "a unset field was written as "
#~ "field_name: null. Starting with GDAL "
#~ "2.2, only fields explicitly set as "
#~ "null with OGR_F_SetFieldNull() will be "
#~ "written with a null value. Unset "
#~ "fields of a feature will not be"
#~ " present in the corresponding JSon "
#~ "feature element."
#~ msgstr ""

#~ msgid ""
#~ "So assuming a JSON feature collection"
#~ " with 2 features would properties "
#~ "would be { \"foo\": \"bar\" } and"
#~ " { \"foo\": \"bar\", \"other_field\": null"
#~ " }, OGR currently returns that the"
#~ " other_field is unset in both cases."
#~ msgstr ""

#~ msgid ""
#~ "On the write side, for the GeoJSON"
#~ " driver, in GDAL 2.1 or before, "
#~ "a unset field was written as "
#~ "field_name: null. Starting with GDAL "
#~ "2.2, only fields explicitly set as "
#~ "null with OGR_F_SetFieldNull() will be "
#~ "written with a null value. Unset "
#~ "fields of a feature will not be"
#~ " present in the corresponding JSON "
#~ "feature element."
#~ msgstr ""


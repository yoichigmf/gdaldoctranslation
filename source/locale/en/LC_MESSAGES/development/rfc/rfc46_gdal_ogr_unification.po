# SOME DESCRIPTIVE TITLE.
# Copyright (C) 1998-2024
# This file is distributed under the same license as the GDAL package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2024.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: GDAL \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2024-06-23 04:43+0900\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language: en\n"
"Language-Team: en <LL@li.org>\n"
"Plural-Forms: nplurals=2; plural=(n != 1);\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.14.0\n"

#: ../../source/development/rfc/rfc46_gdal_ogr_unification.rst:5
msgid "RFC 46: GDAL/OGR unification"
msgstr ""

#: ../../source/development/rfc/rfc46_gdal_ogr_unification.rst:7
msgid "Author: Even Rouault"
msgstr ""

#: ../../source/development/rfc/rfc46_gdal_ogr_unification.rst:9
msgid "Contact: even dot rouault at spatialys.com"
msgstr ""

#: ../../source/development/rfc/rfc46_gdal_ogr_unification.rst:11
msgid "Status: Adopted, implemented in GDAL 2.0"
msgstr ""

#: ../../source/development/rfc/rfc46_gdal_ogr_unification.rst:14
msgid "Summary"
msgstr ""

#: ../../source/development/rfc/rfc46_gdal_ogr_unification.rst:16
msgid ""
"In the 1.X series of GDAL/OGR, the GDAL/raster and OGR/vector sides are "
"quite different on some aspects even where there is no strong reason for "
"them to be different, particularly in the structure of drivers. This RFC "
"aims at unifying the OGR driver structure with the GDAL driver structure."
" The main advantages of using the GDAL driver structure are :"
msgstr ""

#: ../../source/development/rfc/rfc46_gdal_ogr_unification.rst:22
msgid ""
"metadata capabilities : description of driver, extensions, creation "
"options, virtual IO capability ..."
msgstr ""

#: ../../source/development/rfc/rfc46_gdal_ogr_unification.rst:24
msgid "efficient driver identification and opening."
msgstr ""

#: ../../source/development/rfc/rfc46_gdal_ogr_unification.rst:26
msgid ""
"Similarly, OGR datasource and layer classes lack the metadata mechanisms "
"offered by the corresponding GDAL dataset and raster band classes."
msgstr ""

#: ../../source/development/rfc/rfc46_gdal_ogr_unification.rst:29
msgid ""
"Another aspect is that the separation between GDAL \"datasets\" and OGR "
"\"datasources\" is sometimes artificial. Various data containers can "
"accept both data types. The list of drivers that have a GDAL side and OGR"
" side is : SDTS, PDS, GRASS, KML, Spatialite/Rasterlite, GeoPackage "
"(raster side not yet implemented), PostGIS/PostGIS Raster, PDF, PCIDSK, "
"FileGDB (raster side not yet implemented). For applications that are "
"interested in both, this currently means to open the file twice with "
"different API. And for update mode, for file-based drivers, the updates "
"must be done sequentially to avoid opening a file twice simultaneously in"
" update mode and making conflicting changes."
msgstr ""

#: ../../source/development/rfc/rfc46_gdal_ogr_unification.rst:41
msgid "Related RFCs"
msgstr ""

#: ../../source/development/rfc/rfc46_gdal_ogr_unification.rst:43
msgid ""
"There are a few related past RFCs that have never been adopted but "
"strongly relate to RFC 46 :"
msgstr ""

#: ../../source/development/rfc/rfc46_gdal_ogr_unification.rst:46
msgid ""
"`RFC 10: OGR Open Parameters <./rfc10_ogropen>`__. All the functionality "
"described in RFC 10 is included in RFC 46, mainly the GDALOpenEx() new "
"API"
msgstr ""

#: ../../source/development/rfc/rfc46_gdal_ogr_unification.rst:49
msgid ""
"`RFC 25: Fast Open <./rfc25_fast_open>`__. RFC 25 mentions avoiding to "
"systematically listing the sibling files to the file being opened. This "
"can now achieved in RFC 46 by lazy loading with "
"GDALOpenInfo::GetSiblingFiles(). At least Identify() should not trigger "
"GetSiblingFiles()."
msgstr ""

#: ../../source/development/rfc/rfc46_gdal_ogr_unification.rst:54
msgid ""
"`RFC 36: Allow specification of intended on GDALOpen "
"<./rfc36_open_by_drivername>`__. The new GDALOpenEx() accepts a list of a"
" subset drivers that must be probed, as suggested by RFC36. The "
"specification of the drivers on the command line of utilities could be "
"easily done through a new option, but that's not in the scope of RFC 46."
msgstr ""

#: ../../source/development/rfc/rfc46_gdal_ogr_unification.rst:60
msgid ""
"`RFC 38: OGR Faster Open <./rfc38_ogr_faster_open>`__ is completely "
"included in RFC 46 through the possibility of using Open(GDALOpenInfo*) "
"in OGR drivers"
msgstr ""

#: ../../source/development/rfc/rfc46_gdal_ogr_unification.rst:65
msgid "Self-assigned development constraints"
msgstr ""

#: ../../source/development/rfc/rfc46_gdal_ogr_unification.rst:67
msgid ""
"The changes should have moderate impact on the existing GDAL/OGR code "
"base, and particularly on most of its code, that lies in drivers. "
"Existing users of the GDAL/OGR API should also be moderately impacted by "
"the changes, if they do not need to use the new offered capabilities."
msgstr ""

#: ../../source/development/rfc/rfc46_gdal_ogr_unification.rst:73
msgid "Core changes: summary"
msgstr ""

#: ../../source/development/rfc/rfc46_gdal_ogr_unification.rst:75
msgid "OGRSFDriver extends GDALDriver."
msgstr ""

#: ../../source/development/rfc/rfc46_gdal_ogr_unification.rst:76
msgid "Vector drivers can be implemented as GDALDriver."
msgstr ""

#: ../../source/development/rfc/rfc46_gdal_ogr_unification.rst:77
msgid ""
"OGRSFDriverRegistrar is a compatibility wrapper around GDALDriverManager "
"for legacy OGRSFDriver."
msgstr ""

#: ../../source/development/rfc/rfc46_gdal_ogr_unification.rst:79
msgid "OGRDataSource extends GDALDataSource."
msgstr ""

#: ../../source/development/rfc/rfc46_gdal_ogr_unification.rst:80
msgid "GDALOpenEx() API is added to be able to open \"mixed\" datasets."
msgstr ""

#: ../../source/development/rfc/rfc46_gdal_ogr_unification.rst:81
msgid "OGRLayer extends GDALMajorObject, thus adding metadata capability."
msgstr ""

#: ../../source/development/rfc/rfc46_gdal_ogr_unification.rst:82
msgid ""
"The methods of OGRDataSource related to layers are moved to GDALDataset, "
"making it both a raster and vector capable container."
msgstr ""

#: ../../source/development/rfc/rfc46_gdal_ogr_unification.rst:84
msgid "Performance improvements in GDALOpenInfo() mechanism."
msgstr ""

#: ../../source/development/rfc/rfc46_gdal_ogr_unification.rst:85
msgid ""
"New driver metadata item to describe open options (i.e. deprecate the use"
" of configuration option)."
msgstr ""

#: ../../source/development/rfc/rfc46_gdal_ogr_unification.rst:87
msgid "New driver metadata item to describe layer creation options."
msgstr ""

#: ../../source/development/rfc/rfc46_gdal_ogr_unification.rst:90
msgid "Core changes: details"
msgstr ""

#: ../../source/development/rfc/rfc46_gdal_ogr_unification.rst:93
msgid "Drivers and driver registration"
msgstr ""

#: ../../source/development/rfc/rfc46_gdal_ogr_unification.rst:95
msgid ""
"The OGRSFDriver now extends GDALDriver and is meant as being a legacy way"
" of implementing a vector driver. It is kept mainbly because, in the "
"current implementation, not all drivers have been migrated to being "
"\"pure\" GDALDriver. The CopyDataSource() virtual method has been removed"
" since no in-tree drivers implement it. The inheritance to GDALDriver "
"make it possible to manage vector drivers by the GDALDriverManager, and "
"to be able to attach metadata to them, to document driver long name, link"
" to documentation, file extension, datasource creation options with the "
"existing GDAL\\_DMD\\_\\* metadata items."
msgstr ""

#: ../../source/development/rfc/rfc46_gdal_ogr_unification.rst:106
msgid ""
"Drivers directly inheriting from GDALDriver (to be opposed to those "
"inheriting from OGRSFDriver) should : - declare SetMetadataItem( "
"GDAL_DCAP_VECTOR, \"YES\" ). - implement pfnOpen() for dataset opening - "
"optionally, implement pfnCreate() for dataset creation. For vector "
"drivers, the nBands parameter of Create() is supposed to be passed to 0. "
"- optionally, implement pfnDelete() for dataset deletion"
msgstr ""

#: ../../source/development/rfc/rfc46_gdal_ogr_unification.rst:113
msgid ""
"The *C* OGR Driver API will still work with drivers that have been "
"converted as \"pure\" GDALDrivers (this is not true of the C++ OGR Driver"
" API). For example OGR_Dr_GetName() calls GDALDriver::GetDescription(), "
"OGR_Dr_CreateDatasource() calls GDALDriver::Create(), etc..."
msgstr ""

#: ../../source/development/rfc/rfc46_gdal_ogr_unification.rst:119
msgid ""
"The C++ definition of GDALDriver is extended with the following function "
"pointers so that it can work with legacy OGRSFDriver."
msgstr ""

#: ../../source/development/rfc/rfc46_gdal_ogr_unification.rst:140
msgid "GDALDriver::Create() can accept nBands == 0 for a vector capable driver."
msgstr ""

#: ../../source/development/rfc/rfc46_gdal_ogr_unification.rst:143
msgid ""
"GDALDriver::DefaultCreateCopy() can accept a dataset with 0 bands for a "
"vector capable driver, and if the output dataset has layer creation "
"capability and the source dataset has layers, it copies the layers from "
"the source dataset into the target dataset."
msgstr ""

#: ../../source/development/rfc/rfc46_gdal_ogr_unification.rst:148
msgid ""
"GDALDriver::Identify() now iterates over all kinds of drivers. It has "
"been modified to do a first pass on drivers that have an implementation "
"of Identify(). If no match is found, it does a second pass on all drivers"
" and use the potentially slower Open() as the identification method."
msgstr ""

#: ../../source/development/rfc/rfc46_gdal_ogr_unification.rst:154
msgid ""
"Related to the above point, the implementations of "
"GDALDriver::pfnIdentify function pointer used to return a boolean value "
"to indicate if the passed GDALOpenInfo was a match for the driver. For "
"some drivers, this was too restrictive so that they were able to "
"implement Identify(). For example where the detection logic can return "
"\"yes, I definitely recognize that file\", \"no, it is not for me\" or "
"\"I have not enough elements in GDALOpenInfo to be able to tell\". That "
"last state can now be advertized with a negative return value."
msgstr ""

#: ../../source/development/rfc/rfc46_gdal_ogr_unification.rst:164
msgid ""
"The OGRSFDriverRegistrar is trimmed down to be mostly a wrapper around "
"GDALDriverManager. In particular, it does not contain any longer a list "
"of drivers. The Open(), OpenShared(), ReleaseDataSource(), "
"DeregisterDriver() and AutoLoadDrivers() methods are removed from the "
"class. This change can have impact on C++ code. A few adaptations in OGR "
"utilities have been done to accommodate for those changes. The "
"RegisterDriver() API has been kept for legacy OGR drivers and it "
"automatically sets SetMetadataItem( GDAL_DCAP_VECTOR, \"YES\" ). The "
"GetDriverCount(), GetDriver() and GetDriverByName() methods delegate to "
"GDALDriverManager and make sure to only take into account drivers that "
"have the GDAL_DCAP_VECTOR capability. In the case a driver has the same "
"name as GDAL and OGR driver, the OGR variant is internally prefixed with "
"OGR\\_, and GetDriverByName() will first try the OGR\\_ variant. The "
"GetOpenDSCount() and GetOpenDS() have now a dummy implementation "
"returning 0/NULL. For reference, neither MapServer nor QGIS use those "
"functions."
msgstr ""

#: ../../source/development/rfc/rfc46_gdal_ogr_unification.rst:181
msgid ""
"OGRRegisterAll() is now an alias of GDALAllRegister(). The past "
"OGRRegisterAll() is now renamed OGRRegisterAllInternal() and called by "
"GDALAllRegister(). So, GDALAllRegister() and OGRRegisterAll() are now "
"equivalent and register all drivers."
msgstr ""

#: ../../source/development/rfc/rfc46_gdal_ogr_unification.rst:186
msgid "GDALDriverManager has received a few changes :"
msgstr ""

#: ../../source/development/rfc/rfc46_gdal_ogr_unification.rst:188
msgid ""
"use of a map from driver name to driver object to speed-up "
"GetDriverByName()"
msgstr ""

#: ../../source/development/rfc/rfc46_gdal_ogr_unification.rst:190
msgid ""
"accept OGR_SKIP and OGR_DRIVER_PATH configuration options for backward "
"compatibility."
msgstr ""

#: ../../source/development/rfc/rfc46_gdal_ogr_unification.rst:192
msgid ""
"The recommended separator for driver names in GDAL_SKIP is now comma "
"instead of space (similarly to what OGR_SKIP does). This is to make it "
"possible to define OGR driver names in GDAL_SKIP that have spaces in "
"their names like \"ESRI Shapefile\" or \"MapInfo File\". If there is no "
"comma in the GDAL_SKIP value, then space separator is assumed (backward "
"compatibility)."
msgstr ""

#: ../../source/development/rfc/rfc46_gdal_ogr_unification.rst:198
msgid ""
"removal of GetHome()/SetHome() methods whose purpose seemed to define an "
"alternate path for the search directory of plugins. Those methods only "
"existed at the C++ level, and are redundant with GDAL_DRIVER_PATH "
"configuration option"
msgstr ""

#: ../../source/development/rfc/rfc46_gdal_ogr_unification.rst:203
msgid ""
"Raster-capable drivers should declare SetMetadataItem( GDAL_DCAP_RASTER, "
"\"YES\" ). All in-tree GDAL drivers have been patched to declare it. But "
"the registration code detects if a driver does not declare any of "
"GDAL_DCAP_RASTER nor GDAL_DCAP_VECTOR, in which case it declares "
"GDAL_DCAP_RASTER on behalf of the un-patched driver, with a debug message"
" inviting to explicitly set it."
msgstr ""

#: ../../source/development/rfc/rfc46_gdal_ogr_unification.rst:210
msgid "New metadata items :"
msgstr ""

#: ../../source/development/rfc/rfc46_gdal_ogr_unification.rst:212
msgid ""
"GDAL_DCAP_RASTER=YES / GDAL_DCAP_VECTOR=YES at driver level. To declare "
"that a driver has raster/vector capabilities. A driver can declare both."
msgstr ""

#: ../../source/development/rfc/rfc46_gdal_ogr_unification.rst:215
msgid ""
"GDAL_DMD_EXTENSIONS (with a final S) at driver level. This is a small "
"evolution of GDAL_DMD_EXTENSION where one can specify several extensions "
"in the value string. The extensions are space-separated. For example "
"\"shp dbf\", \"tab mif mid\", etc... For ease of use, "
"GDALDriver::SetMetadataItem(GDAL_DMD_EXTENSION) also sets the passed "
"value as GDAL_DMD_EXTENSIONS, if it is not already set. So new code can "
"always use GDAL_DMD_EXTENSIONS."
msgstr ""

#: ../../source/development/rfc/rfc46_gdal_ogr_unification.rst:222
msgid ""
"GDAL_DMD_OPENOPTIONLIST at driver level. The value of this item is an XML"
" snippet with a format similar to creation options. GDALOpenEx(), once it"
" has identified with Identify() that a driver accepts the file, will "
"validate the passed open option list with the authorized open option "
"list. Below an example of such an authorized open option list in the S57 "
"driver"
msgstr ""

#: ../../source/development/rfc/rfc46_gdal_ogr_unification.rst:295
msgid "Datasets / Datasources"
msgstr ""

#: ../../source/development/rfc/rfc46_gdal_ogr_unification.rst:297
msgid "The main methods from OGRDataSource have been moved to GDALDataset :"
msgstr ""

#: ../../source/development/rfc/rfc46_gdal_ogr_unification.rst:376
msgid ""
"OGRDataSource::SyncToDisk() has been removed. The equivalent "
"functionality should be implemented in existing FlushCache(). "
"GDALDataset::FlushCache() nows does the job of the previous generic "
"implementation of OGRDataSource::SyncToDisk(), i.e. iterate over all "
"layers and call SyncToDisk() on them."
msgstr ""

#: ../../source/development/rfc/rfc46_gdal_ogr_unification.rst:382
msgid "GDALDataset has now a protected ICreateLayer() method."
msgstr ""

#: ../../source/development/rfc/rfc46_gdal_ogr_unification.rst:402
msgid ""
"GDALOpenEx() is added to be able to open raster-only, vector-only, or "
"raster-vector datasets. It accepts read-only/update mode, shared/non-"
"shared mode. A list of potential candidate drivers can be passed. If "
"NULL, all drivers are probed. A list of open options (NAME=VALUE syntax) "
"can be passed. If the list of sibling files has already been established,"
" it can also be passed. Otherwise GDALOpenInfo will establish it."
msgstr ""

#: ../../source/development/rfc/rfc46_gdal_ogr_unification.rst:457
msgid "GDALOpenInfo class. The following changes are done :"
msgstr ""

#: ../../source/development/rfc/rfc46_gdal_ogr_unification.rst:459
msgid ""
"the second argument of the constructor is now nOpenFlags instead of "
"GDALAccess, with same semantics as GDALOpenEx(). GDALOpenInfo uses the "
"read-only/update bit to \"compute\" the eAccess flag that is heavily used"
" in existing drivers. Drivers with both raster and vector capabilities "
"can use the GDAL_OF_VECTOR/GDAL_OF_RASTER bits to determine the intent of"
" the caller. For example if a caller opens with GDAL_OF_RASTER only and "
"the dataset only contains vector data, the driver might decide to not "
"open the dataset (if it is a read-only driver. If it is a driver with "
"update capability, it should do that only if the opening is done in read-"
"only mode)."
msgstr ""

#: ../../source/development/rfc/rfc46_gdal_ogr_unification.rst:470
msgid ""
"the open options passed to GDALOpenEx() are stored into a "
"papszOpenOptions member of GDALOpenInfo, so that drivers can use them."
msgstr ""

#: ../../source/development/rfc/rfc46_gdal_ogr_unification.rst:473
msgid ""
"the \"FILE\\* fp\" member is transformed into \"VSILFILE\\* fpL\". This "
"change is motivated by the fact that most popular drivers now use the VSI"
" Virtual File API, so they can now directly use the fpL member instead of"
" re-opening again the file. A global pass on all in-tree GDAL drivers "
"that used fp has been made."
msgstr ""

#: ../../source/development/rfc/rfc46_gdal_ogr_unification.rst:478
msgid ""
"A VSIStatExL() was done previously to determine the nature of the file "
"passed. Now, we optimistically begin with a VSIFOpenL(), assuming that in"
" most use cases the passed filename is a file. If the opening fails, "
"VSIStatExL() is done to determine the nature of the filename."
msgstr ""

#: ../../source/development/rfc/rfc46_gdal_ogr_unification.rst:483
msgid ""
"If the requested access mode is update, the opening of the file with "
"VSIFOpenL() is done with \"rb+\" permissions to be directly usable."
msgstr ""

#: ../../source/development/rfc/rfc46_gdal_ogr_unification.rst:486
msgid ""
"The papszSiblingFiles member is now private. It is accessed by a "
"GetSiblingFiles() method that does the ReadDir() on demand. This can "
"speed up the Identify() method that generally does not require to know "
"sibling files."
msgstr ""

#: ../../source/development/rfc/rfc46_gdal_ogr_unification.rst:490
msgid ""
"A new method, TryToIngest(), is added to read more than the first 1024 "
"bytes of a file. This is useful for a few vector drivers, like GML or "
"NAS, that must fetch a bit more bytes to be able to identify the file."
msgstr ""

#: ../../source/development/rfc/rfc46_gdal_ogr_unification.rst:496
msgid "Layer"
msgstr ""

#: ../../source/development/rfc/rfc46_gdal_ogr_unification.rst:498
msgid ""
"OGRLayer extends GDALMajorObject. Drivers can now define layer metadata "
"items that can be retrieved with the usual "
"GetMetadata()/GetMetadateItem() API."
msgstr ""

#: ../../source/development/rfc/rfc46_gdal_ogr_unification.rst:502
msgid ""
"The GetInfo() method has been removed. It has never been implemented in "
"any in-tree drivers and has been deprecated for a long time."
msgstr ""

#: ../../source/development/rfc/rfc46_gdal_ogr_unification.rst:506
msgid "Other"
msgstr ""

#: ../../source/development/rfc/rfc46_gdal_ogr_unification.rst:508
msgid ""
"The deprecated and unused GDALProjDefH and GDALOptionDefinition types "
"have been removed from gdal.h"
msgstr ""

#: ../../source/development/rfc/rfc46_gdal_ogr_unification.rst:511
msgid ""
"GDALGeneralCmdLineProcessor() now interprets the nOptions (combination of"
" GDAL_OF_RASTER and GDAL_OF_RASTER) argument as the type of drivers that "
"should be displayed with the --formats option. If set to 0, "
"GDAL_OF_RASTER is assumed."
msgstr ""

#: ../../source/development/rfc/rfc46_gdal_ogr_unification.rst:516
msgid ""
"the --formats option of GDAL utilities outputs whether drivers have "
"raster and/or vector capabilities"
msgstr ""

#: ../../source/development/rfc/rfc46_gdal_ogr_unification.rst:519
msgid ""
"the --format option of GDAL utilities outputs GDAL_DMD_EXTENSIONS, "
"GDAL_DMD_OPENOPTIONLIST, GDAL_DS_LAYER_CREATIONOPTIONLIST."
msgstr ""

#: ../../source/development/rfc/rfc46_gdal_ogr_unification.rst:522
msgid ""
"OGRGeneralCmdLineProcessor() use GDALGeneralCmdLineProcessor() "
"implementation, restricting --formats to vector capable drivers."
msgstr ""

#: ../../source/development/rfc/rfc46_gdal_ogr_unification.rst:526
msgid "Changes in drivers"
msgstr ""

#: ../../source/development/rfc/rfc46_gdal_ogr_unification.rst:528
msgid "OGR PCIDSK driver has been merged into GDAL PCIDSK driver."
msgstr ""

#: ../../source/development/rfc/rfc46_gdal_ogr_unification.rst:530
msgid "OGR PDF driver has been merged into GDAL PDF driver."
msgstr ""

#: ../../source/development/rfc/rfc46_gdal_ogr_unification.rst:532
msgid ""
"A global pass has been made to in-tree OGR drivers that have to open a "
"file to determine if they recognize it. They have been converted to "
"GDALDriver to accept a GDALOpenInfo argument and they now use its "
"pabyHeader field to examine the first bytes of files. The number of "
"system calls realated to file access (open/stat), in order to determine "
"that a file is not recognized by any OGR driver, has now dropped from 46 "
"in GDAL 1.11 to 1. The converted drivers are : AeronavFAA, ArcGEN, "
"AVCBin, AVCE00, BNA, CSV, DGN, EDIGEO, ESRI Shapefile, GeoJSON, GeoRSS, "
"GML, GPKG, GPSBabel, GPX, GTM, HTF, ILI1, ILI2, KML, LIBKML, MapInfo "
"File, MySQL, NAS, NTF, OpenAIR, OSM, PDS, REC, S57, SDTS, SEGUKOOA, SEGY,"
" SOSI, SQLite, SUA, SVG, TIGER, VFK, VRT, WFS"
msgstr ""

#: ../../source/development/rfc/rfc46_gdal_ogr_unification.rst:545
msgid "Long driver description is set for most OGR drivers."
msgstr ""

#: ../../source/development/rfc/rfc46_gdal_ogr_unification.rst:547
msgid ""
"All classes deriving from OGRLayer have been modified to call "
"SetDescription() with the value of GetName()/poFeatureDefn->GetName(). "
"test_ogrsf tests that it is properly set."
msgstr ""

#: ../../source/development/rfc/rfc46_gdal_ogr_unification.rst:552
msgid ""
"Following drivers are kept as OGRSFDriver, but their Open() method does "
"early extension/prefix testing to avoid datasource object to be "
"instantiated : CartoDB, CouchDB, DXF, EDIGEO, GeoConcept, GFT, GME, "
"IDRISI, OGDI, PCIDSK, PG, XPlane."
msgstr ""

#: ../../source/development/rfc/rfc46_gdal_ogr_unification.rst:557
msgid ""
"Identify() has been implemented for CSV, DGN, DXF, EDIGEO, GeoJSON, GML, "
"KML, LIBKML, MapInfo File, NAS, OpenFileGDB, OSM, S57, Shape, SQLite, "
"VFK, VRT."
msgstr ""

#: ../../source/development/rfc/rfc46_gdal_ogr_unification.rst:561
msgid ""
"GDAL_DMD_EXTENSION/GDAL_DMD_EXTENSIONS set for following drivers: AVCE00,"
" BNA, CSV, DGN, DWG, DXF, EDIGEO, FileGDB, Geoconcept, GeoJSON, Geomedia,"
" GML, GMT, GPKG, GPX, GPSTrackMaker, IDRISI Vector, Interlis 1, Interlis "
"2, KML, LIBKML, MDB, MapInfo File, NAS, ODS, OpenFileGDB, OSM, PGDump, "
"PGeo, REC, S57, ESRI Shapefile, SQLite, SVG, WaSP, XLS, XLSX, XPlane."
msgstr ""

#: ../../source/development/rfc/rfc46_gdal_ogr_unification.rst:568
msgid ""
"Document dataset and layer creation options of BNA, DGN, FileGDB, "
"GeoConccept, GeoJSON, GeoRSS, GML, GPKG, KML, LIBKML, PG, PGDump and ESRI"
" Shapefile drivers as GDAL_DMD_CREATIONOPTIONLIST / "
"GDAL_DS_LAYER_CREATIONOPTIONLIST."
msgstr ""

#: ../../source/development/rfc/rfc46_gdal_ogr_unification.rst:573
msgid "Add open options AAIGRID, PDF, S57 and ESRI Shapefile drivers."
msgstr ""

#: ../../source/development/rfc/rfc46_gdal_ogr_unification.rst:575
msgid "GetFileList() implemented in OpenFileGDB, Shapefile and OGR VRT drivers."
msgstr ""

#: ../../source/development/rfc/rfc46_gdal_ogr_unification.rst:578
msgid ""
"Rename datasource SyncToDisk() as FlushCache() for LIBKML, OCI, ODS, XLSX"
" drivers."
msgstr ""

#: ../../source/development/rfc/rfc46_gdal_ogr_unification.rst:581
msgid ""
"Use poOpenInfo->fpL to avoid useless file re-opening in GTiff, PNG, JPEG,"
" GIF, VRT, NITF, DTED."
msgstr ""

#: ../../source/development/rfc/rfc46_gdal_ogr_unification.rst:584
msgid "HTTP driver: declared as GDAL_DCAP_RASTER and GDAL_DCAP_VECTOR driver."
msgstr ""

#: ../../source/development/rfc/rfc46_gdal_ogr_unification.rst:587
msgid "RIK: implement Identify()"
msgstr ""

#: ../../source/development/rfc/rfc46_gdal_ogr_unification.rst:589
msgid ""
"Note: the compilation and good working of the following OGR drivers "
"(mostly proprietary) could not be tested: ArcObjects, DWG, DODS, SDE, "
"FME, GRASS, IDB, OCI, MSSQLSpatial(compilation OK, but not runtime "
"tested)"
msgstr ""

#: ../../source/development/rfc/rfc46_gdal_ogr_unification.rst:595
msgid "Changes in utilities"
msgstr ""

#: ../../source/development/rfc/rfc46_gdal_ogr_unification.rst:597
msgid "gdalinfo accepts a -oo option to define open options"
msgstr ""

#: ../../source/development/rfc/rfc46_gdal_ogr_unification.rst:598
msgid "ogrinfo accepts a -oo option to define open options"
msgstr ""

#: ../../source/development/rfc/rfc46_gdal_ogr_unification.rst:599
msgid ""
"ogr2ogr accepts a -oo option to define input dataset open options, and "
"-doo to define destination dataset open options"
msgstr ""

#: ../../source/development/rfc/rfc46_gdal_ogr_unification.rst:603
msgid "Changes in SWIG bindings"
msgstr ""

#: ../../source/development/rfc/rfc46_gdal_ogr_unification.rst:605
msgid "Python and Java bindings:"
msgstr ""

#: ../../source/development/rfc/rfc46_gdal_ogr_unification.rst:607
msgid ""
"add new GDALDataset methods taken from OGRDataSource : CreateLayer(), "
"CopyLayer(), DeleteLayer(), GetLayerCount(), GetLayerByIndex(), "
"GetLayerByName(), TestCapability(), ExecuteSQL(), ReleaseResultSet(), "
"GetStyleTable() and SetStyleTable()."
msgstr ""

#: ../../source/development/rfc/rfc46_gdal_ogr_unification.rst:612
msgid "make OGR Driver, DataSource and Layer objects derive from MajorObject"
msgstr ""

#: ../../source/development/rfc/rfc46_gdal_ogr_unification.rst:615
msgid ""
"Perl and CSharp: make sure that it still compiles but some work would "
"have to be done by their mainteners to be able to use the new "
"capabilities"
msgstr ""

#: ../../source/development/rfc/rfc46_gdal_ogr_unification.rst:620
msgid "Potential changes that are *NOT* included in this RFC"
msgstr ""

#: ../../source/development/rfc/rfc46_gdal_ogr_unification.rst:622
msgid "\"Natural\" evolutions of current RFC :"
msgstr ""

#: ../../source/development/rfc/rfc46_gdal_ogr_unification.rst:624
msgid "Unifying the GDAL MEM and OGR Memory drivers."
msgstr ""

#: ../../source/development/rfc/rfc46_gdal_ogr_unification.rst:625
msgid "Unifying the GDAL VRT and OGR VRT drivers."
msgstr ""

#: ../../source/development/rfc/rfc46_gdal_ogr_unification.rst:627
msgid "Further unification steps :"
msgstr ""

#: ../../source/development/rfc/rfc46_gdal_ogr_unification.rst:629
msgid ""
"Source tree changes to move OGR drivers from ogr/ogrsf_frmts/ to frmts/ ,"
" to move ogr/ogrsf_frmts/generic/\\* to gcore/\\*, etc..."
msgstr ""

#: ../../source/development/rfc/rfc46_gdal_ogr_unification.rst:631
msgid "Documentation unification (pages with list of drivers, etc...)"
msgstr ""

#: ../../source/development/rfc/rfc46_gdal_ogr_unification.rst:632
msgid "Renaming to remove traces of OGR namespace : OGRLayer -> GDALLayer, etc..."
msgstr ""

#: ../../source/development/rfc/rfc46_gdal_ogr_unification.rst:634
msgid ""
"Kill --without-ogr compilation option ? It has been preserved in a "
"working state even if it embeds now ogr/ogrsf_frmts/generic and "
"ogr/ogrsf_frmts/mitab for conveniency."
msgstr ""

#: ../../source/development/rfc/rfc46_gdal_ogr_unification.rst:637
msgid ""
"Unification of some utilities : \"gdal info XXX\", \"gdal convert XXX\" "
"that would work on all kind of datasets."
msgstr ""

#: ../../source/development/rfc/rfc46_gdal_ogr_unification.rst:641
msgid "Backward compatibility"
msgstr ""

#: ../../source/development/rfc/rfc46_gdal_ogr_unification.rst:643
msgid ""
"GDALDriverManager::GetDriverCount(), GetDriver() now returns OGR drivers,"
" as well as GDAL drivers"
msgstr ""

#: ../../source/development/rfc/rfc46_gdal_ogr_unification.rst:646
msgid ""
"The reference counting in GDAL datasets and GDAL 1.X OGR datasources was "
"a bit different. It starts at 1 for GDAL datasets, and started at 0 for "
"OGR datasources. Now that OGRDataSource is basically a GDALDataset, it "
"starts at 1 for both cases. Hopefully there are very few users of the "
"OGR_DS_GetRefCount() API. If it was deemed necessary we could restore the"
" previous behavior at the C API, but that would not be possible at the "
"C++ level. For reference, neither MapServer nor QGIS use "
"OGR_DS_GetRefCount()."
msgstr ""

#: ../../source/development/rfc/rfc46_gdal_ogr_unification.rst:656
msgid "Documentation"
msgstr ""

#: ../../source/development/rfc/rfc46_gdal_ogr_unification.rst:658
msgid ""
"A pass should be made on the documentation to check that all new methods "
"are properly documented. The OGR general documentation (especially C++ "
"API Read/Write tutorial, Driver implementation tutorial and OGR "
"architecture) should be updated to reflect the changes."
msgstr ""

#: ../../source/development/rfc/rfc46_gdal_ogr_unification.rst:664
msgid "Testing"
msgstr ""

#: ../../source/development/rfc/rfc46_gdal_ogr_unification.rst:666
msgid ""
"Very few changes have been made so that the existing autotest suite still"
" passes. Additions have been made to test the GDALOpenEx() API and the "
"methods \"imported\" from OGRDataSource into GDALDataset."
msgstr ""

#: ../../source/development/rfc/rfc46_gdal_ogr_unification.rst:671
msgid "Version numbering"
msgstr ""

#: ../../source/development/rfc/rfc46_gdal_ogr_unification.rst:673
msgid ""
"Although the above describes changes should have very few impact on "
"existing applications of the C API, some behavior changes, C++ level "
"changes and the conceptual changes are thought to deserve a 2.0 version "
"number."
msgstr ""

#: ../../source/development/rfc/rfc46_gdal_ogr_unification.rst:679
msgid "Implementation"
msgstr ""

#: ../../source/development/rfc/rfc46_gdal_ogr_unification.rst:681
msgid "Implementation will be done by Even Rouault."
msgstr ""

#: ../../source/development/rfc/rfc46_gdal_ogr_unification.rst:683
msgid ""
"The proposed implementation lies in the \"unification\" branch of the "
"`https://github.com/rouault/gdal2/tree/unification "
"<https://github.com/rouault/gdal2/tree/unification>`__ repository."
msgstr ""

#: ../../source/development/rfc/rfc46_gdal_ogr_unification.rst:687
msgid ""
"The list of changes : "
"`https://github.com/rouault/gdal2/compare/unification "
"<https://github.com/rouault/gdal2/compare/unification>`__"
msgstr ""

#: ../../source/development/rfc/rfc46_gdal_ogr_unification.rst:691
msgid "Voting history"
msgstr ""

#: ../../source/development/rfc/rfc46_gdal_ogr_unification.rst:693
msgid "+1 from JukkaR, FrankW, DanielM, TamasS and EvenR."
msgstr ""


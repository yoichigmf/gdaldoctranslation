# SOME DESCRIPTIVE TITLE.
# Copyright (C) 1998-2024
# This file is distributed under the same license as the GDAL package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2024.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: GDAL \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2024-06-23 04:43+0900\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language: en\n"
"Language-Team: en <LL@li.org>\n"
"Plural-Forms: nplurals=2; plural=(n != 1);\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.14.0\n"

#: ../../source/development/rfc/rfc11_fastidentify.rst:5
msgid "RFC 11: Fast Format Identification"
msgstr ""

#: ../../source/development/rfc/rfc11_fastidentify.rst:7
msgid "Author: Frank Warmerdam"
msgstr ""

#: ../../source/development/rfc/rfc11_fastidentify.rst:9
msgid "Contact: warmerdam@pobox.com"
msgstr ""

#: ../../source/development/rfc/rfc11_fastidentify.rst:11
msgid "Status: Adopted (and Implemented)"
msgstr ""

#: ../../source/development/rfc/rfc11_fastidentify.rst:14
msgid "Summary"
msgstr ""

#: ../../source/development/rfc/rfc11_fastidentify.rst:16
msgid ""
"This RFC aims to add the ability for applications to quickly identify "
"what files in the file system are GDAL supported file formats without "
"necessarily opening any of them. It is mainly intended to allow GUI file "
"browsers based on file types."
msgstr ""

#: ../../source/development/rfc/rfc11_fastidentify.rst:21
msgid ""
"This is accomplished by extending the GDALOpenInfo structure to hold more"
" directory context, and by adding an Identify() method on the GDALDriver "
"which a driver can implement to quickly identify that a file is of a "
"given format without doing a more expensive Open() operation."
msgstr ""

#: ../../source/development/rfc/rfc11_fastidentify.rst:27
msgid "GDALOpenInfo"
msgstr ""

#: ../../source/development/rfc/rfc11_fastidentify.rst:29
msgid ""
"The Open() (or Identify()) methods of many drivers need to probe for "
"files associated with the target file in order to open or identify a file"
" as being of a particular format. For instance, in order to open an ESRI "
"BIL file (EHDR driver) it is necessary to probe for a driver with the "
"same basename as the target file, but the extension .hdr. Currently this "
"is typically accomplished with VSIFStatL() calls or similar which can be "
"fairly expensive."
msgstr ""

#: ../../source/development/rfc/rfc11_fastidentify.rst:37
msgid ""
"In order to reduce the need for such searches touch the operating system "
"file system machinery, the GDALOpenInfo structure will be extended to "
"hold an optional list of files. This is the list of all files at the same"
" level in the file system as the target file, including the target file. "
"The filenames will *not* include any path components, are an essentially "
"just the output of CPLReadDir() on the parent directory. If the target "
"object does not have filesystem semantics then the file list should be "
"NULL."
msgstr ""

#: ../../source/development/rfc/rfc11_fastidentify.rst:46
msgid "The following is added to GDALOpenInfo:"
msgstr ""

#: ../../source/development/rfc/rfc11_fastidentify.rst:53
msgid ""
"The new constructor allows the file list to be passed in to populate the "
"papszSiblingFiles member (the argument will be copied). The existing "
"default constructor will use CPLGetDirname() to get the directory of the "
"passed pszFile, and CPLReadDir() to read the corresponding file list. The"
" new constructor is primarily aimed at efficient implementation of the "
"later GDALIdentifyDriver() function, avoiding re-reading the file list "
"for each file to be tested."
msgstr ""

#: ../../source/development/rfc/rfc11_fastidentify.rst:62
msgid "Identify()"
msgstr ""

#: ../../source/development/rfc/rfc11_fastidentify.rst:64
msgid "The GDALDriver class will be extended with the following function:"
msgstr ""

#: ../../source/development/rfc/rfc11_fastidentify.rst:70
msgid ""
"When implemented by a driver, the function is intended to return TRUE "
"(non-zero) if the driver determines that the file passed in via "
"GDALOpenInfo appears to be of the format the driver is implemented for. "
"To call this applications should call the new function:"
msgstr ""

#: ../../source/development/rfc/rfc11_fastidentify.rst:79
msgid "Internally GDALIdentifyDriver() will do the following"
msgstr ""

#: ../../source/development/rfc/rfc11_fastidentify.rst:81
msgid ""
"A GDALOpenInfo structure will be initialized based on pszDatasource and "
"papszDirFiles."
msgstr ""

#: ../../source/development/rfc/rfc11_fastidentify.rst:83
msgid ""
"It will iterate over all drivers similarly to GDALOpen(). For each driver"
" it will use the pfnIdentify function if available, otherwise it will use"
" the pfnOpen() method to establish if the driver supports the file."
msgstr ""

#: ../../source/development/rfc/rfc11_fastidentify.rst:87
msgid ""
"It will return the driver handle for the first driver to respond "
"positively or NULL if none accept it."
msgstr ""

#: ../../source/development/rfc/rfc11_fastidentify.rst:91
msgid "Driver Changes"
msgstr ""

#: ../../source/development/rfc/rfc11_fastidentify.rst:93
msgid ""
"In theory it is not necessary for any drivers to be modified, since "
"GDALIdentifyDriver() will fallback to using the pfnOpen function to test."
" But in practice, no optimization is achieved unless at least some "
"drivers (hopefully those for which Open can be very expensive) are "
"updated. Part of the ongoing effort then is to implement identify "
"functions for GDAL drivers."
msgstr ""

#: ../../source/development/rfc/rfc11_fastidentify.rst:100
msgid ""
"Generally speaking it should be easy to craft an identify function from "
"the initial test logic in the open function. For instance, the GeoTIFF "
"driver might be changed like this:"
msgstr ""

#: ../../source/development/rfc/rfc11_fastidentify.rst:139
msgid ""
"The open might then be modified to use the identify function to avoid "
"duplicating the test logic."
msgstr ""

#: ../../source/development/rfc/rfc11_fastidentify.rst:162
msgid ""
"Drivers which require header files such as the EHdr driver might "
"implement Identify() like this:"
msgstr ""

#: ../../source/development/rfc/rfc11_fastidentify.rst:192
msgid ""
"During the initial implementation a variety of drivers will be updated, "
"including the following. As well some performance and file system "
"activity logging will be done to identify drivers that are currently "
"expensive."
msgstr ""

#: ../../source/development/rfc/rfc11_fastidentify.rst:197
msgid "HFA"
msgstr ""

#: ../../source/development/rfc/rfc11_fastidentify.rst:198
msgid "GTiff"
msgstr ""

#: ../../source/development/rfc/rfc11_fastidentify.rst:199
msgid "JPEG"
msgstr ""

#: ../../source/development/rfc/rfc11_fastidentify.rst:200
msgid "PNG"
msgstr ""

#: ../../source/development/rfc/rfc11_fastidentify.rst:201
msgid "GIF"
msgstr ""

#: ../../source/development/rfc/rfc11_fastidentify.rst:202
msgid "HDF4"
msgstr ""

#: ../../source/development/rfc/rfc11_fastidentify.rst:203
msgid "DTED"
msgstr ""

#: ../../source/development/rfc/rfc11_fastidentify.rst:204
msgid "USGS DEM"
msgstr ""

#: ../../source/development/rfc/rfc11_fastidentify.rst:205
msgid "MrSID"
msgstr ""

#: ../../source/development/rfc/rfc11_fastidentify.rst:206
msgid "JP2KAK"
msgstr ""

#: ../../source/development/rfc/rfc11_fastidentify.rst:207
msgid "ECW"
msgstr ""

#: ../../source/development/rfc/rfc11_fastidentify.rst:208
msgid "EHdr"
msgstr ""

#: ../../source/development/rfc/rfc11_fastidentify.rst:209
msgid "RST"
msgstr ""

#: ../../source/development/rfc/rfc11_fastidentify.rst:212
msgid "CPLReadDir()"
msgstr ""

#: ../../source/development/rfc/rfc11_fastidentify.rst:214
msgid ""
"Currently the VSIMemFilesystemHandler implemented in cpl_vsi_mem.cpp "
"which provides \"filesystem like\" access to objects in memory does not "
"implement directory reading services. In order to properly populate the "
"directory listing this will need to be added."
msgstr ""

#: ../../source/development/rfc/rfc11_fastidentify.rst:219
msgid ""
"To do this the CPLReadDir() function will also need to be reimplemented "
"to use VSIFilesystemHandler::ReadDir() instead of direct implementation "
"in cpl_dir.cpp. The win32 and unix/posix implementations of "
"VSIFilesystemHandler::ReadDir() already exist. This should essentially "
"complete the virtualization of filesystem access services."
msgstr ""

#: ../../source/development/rfc/rfc11_fastidentify.rst:225
msgid ""
"CPLReadDir() will also be renamed VSIReadDir() but with a stub under the "
"old name available for backward compatibility."
msgstr ""

#: ../../source/development/rfc/rfc11_fastidentify.rst:229
msgid "Compatibility"
msgstr ""

#: ../../source/development/rfc/rfc11_fastidentify.rst:231
msgid ""
"There are no anticipated backward compatibility problems. However forward"
" compatibility will be affected, in that drivers updated in trunk with "
"the Identify function will not be able to be ported back into 1.4 builds "
"and used their. Unmodified drivers, and externally maintained drivers "
"should not be impacted by this development."
msgstr ""

#: ../../source/development/rfc/rfc11_fastidentify.rst:238
msgid "SWIG Implications"
msgstr ""

#: ../../source/development/rfc/rfc11_fastidentify.rst:240
msgid ""
"The GDALIdentifyDriver() and VSIReadDir() functions will need to be "
"exposed via SWIG."
msgstr ""

#: ../../source/development/rfc/rfc11_fastidentify.rst:244
msgid "Regression Testing"
msgstr ""

#: ../../source/development/rfc/rfc11_fastidentify.rst:246
msgid ""
"A test script for the Identify() function will be added to the "
"autotest/gcore directory. It will include testing of identify in a "
"/vsimem memory collection."
msgstr ""

#: ../../source/development/rfc/rfc11_fastidentify.rst:251
msgid "Implementation Plan"
msgstr ""

#: ../../source/development/rfc/rfc11_fastidentify.rst:253
msgid ""
"The new features will be implemented by Frank Warmerdam in *trunk* for "
"the GDAL/OGR 1.5.0 release."
msgstr ""

#: ../../source/development/rfc/rfc11_fastidentify.rst:257
msgid "Performance Tests"
msgstr ""

#: ../../source/development/rfc/rfc11_fastidentify.rst:259
msgid ""
"A very quick test introducing the Identify without actually opening "
"changed the time to identify all files in a directory with 70 TIFF files "
"(on an NFS share) from 2 seconds to 0.5 seconds. So saving the overhead "
"of actually opening files can be significant for some formats, including "
"very common ones like GeoTIFF."
msgstr ""


# SOME DESCRIPTIVE TITLE.
# Copyright (C) 1998-2024
# This file is distributed under the same license as the GDAL package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2024.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: GDAL \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2024-06-23 04:43+0900\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language: ja\n"
"Language-Team: ja <LL@li.org>\n"
"Plural-Forms: nplurals=1; plural=0;\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.14.0\n"

#: ../../source/user/coordinate_epoch.rst:5
msgid "Coordinate epoch support"
msgstr ""

#: ../../source/user/coordinate_epoch.rst:10
msgid "Dynamic CRS and coordinate epoch"
msgstr ""

#: ../../source/user/coordinate_epoch.rst:12
msgid ""
"This document is intended to document the support for coordinate epoch, "
"linked to dynamic CRS."
msgstr ""

#: ../../source/user/coordinate_epoch.rst:15
msgid ""
"In a dynamic CRS, coordinates of a point on the surface of the Earth may "
"change with time. To be unambiguous the coordinates must always be "
"qualified with the epoch at which they are valid. The coordinate epoch is"
" not necessarily the epoch at which the observation was collected."
msgstr ""

#: ../../source/user/coordinate_epoch.rst:20
msgid ""
"Examples of dynamic CRS are ``WGS 84 (G1762)``, ``ITRF2014``, "
"``ATRF2014``."
msgstr ""

#: ../../source/user/coordinate_epoch.rst:22
msgid ""
"The generic EPSG:4326 WGS 84 CRS is also considered dynamic, although it "
"is not recommended to use it due to being based on a datum ensemble whose"
" positional accuracy is 2 meters, but prefer one of its realizations, "
"such as WGS 84 (G1762)"
msgstr ""

#: ../../source/user/coordinate_epoch.rst:26
msgid ""
"The :cpp:func:`OGRSpatialReference::IsDynamic` method can be used to test"
" if a CRS is a dynamic one."
msgstr ""

#: ../../source/user/coordinate_epoch.rst:29
msgid ""
"The :cpp:func:`OGRSpatialReference::SetCoordinateEpoch` and "
":cpp:func:`OGRSpatialReference::GetCoordinateEpoch` methods can be used "
"to set/retrieve a coordinate epoch associated with a CRS. The coordinate "
"epoch is expressed as a decimal year (e.g. 2021.3 for April 21, 2021)."
msgstr ""

#: ../../source/user/coordinate_epoch.rst:34
msgid ""
"Formally, the coordinate epoch of an observation belongs to the "
"observation. However, almost all formats do not allow for storing per-"
"observation epoch, and typical usage is a set of observations with the "
"same epoch. Therefore we store the epoch as property of the CRS, and "
"assume that it is valid for every observation. This choice eases "
"processing, storage and format complexity for most usage. For now, this "
"means that a dataset containing observations or points with different "
"epochs cannot be handled."
msgstr ""

#: ../../source/user/coordinate_epoch.rst:42
msgid ""
"For vector formats, per-geometry coordinate epoch could also make sense, "
"but as most formats only support a per-layer CRS, we also for now limit "
"support of coordinate epoch at the layer level. The underlying coordinate"
" transformation mechanics can support per-vertex coordinate epoch."
msgstr ""

#: ../../source/user/coordinate_epoch.rst:48
msgid "Support in raster and vector formats"
msgstr ""

#: ../../source/user/coordinate_epoch.rst:50
msgid ""
"At time of writing, no formats handled by GDAL/OGR have a standardized "
"way of encoding a coordinate epoch. We consequently have made choices how"
" to encode it, with the aim of being as much as possible backward "
"compatible with existing readers. Those encodings might change if "
"corresponding official specifications evolve to take this concept into "
"account. The coordinate epoch is only written when attached to the SRS of"
" the layer/dataset that is created."
msgstr ""

#: ../../source/user/coordinate_epoch.rst:59
msgid "FlatGeoBuf"
msgstr ""

#: ../../source/user/coordinate_epoch.rst:61
msgid ""
"The coordinate epoch is encoded as a WKT:2019 string using the ``EPOCH`` "
"subnode of the `COORDINATEMETADATA "
"<http://docs.opengeospatial.org/is/18-010r7/18-010r7.html#130>`__ "
"construct, set in the ``Crs.wkt`` header field of the FlatGeoBuf file."
msgstr ""

#: ../../source/user/coordinate_epoch.rst:82
msgid ""
"Such construct will not be understood by GDAL < 3.4, but if the CRS has "
"an associated EPSG code, this will not cause issues in those older GDAL "
"versions."
msgstr ""

#: ../../source/user/coordinate_epoch.rst:87
msgid "GeoPackage vector/raster"
msgstr ""

#: ../../source/user/coordinate_epoch.rst:89
msgid ""
"Each vector/raster table which has an associated coordinate epoch encodes"
" it in the ``epoch`` column of the ``gpkg_spatial_ref_sys`` table, using "
"an extended version of the CRS WKT extension "
"(https://github.com/opengeospatial/geopackage/pull/600)."
msgstr ""

#: ../../source/user/coordinate_epoch.rst:94
msgid "GeoTIFF"
msgstr ""

#: ../../source/user/coordinate_epoch.rst:96
msgid ""
"The coordinate epoch is encoded as a new GeoTIFF GeoKey, "
"``CoordinateEpochGeoKey`` of code 5120 and type DOUBLE."
msgstr ""

#: ../../source/user/coordinate_epoch.rst:125
msgid "JPEG2000"
msgstr ""

#: ../../source/user/coordinate_epoch.rst:127
msgid "GeoJP2 boxes use the above mentioned GeoTIFF encoding."
msgstr ""

#: ../../source/user/coordinate_epoch.rst:131
msgid "Persistent Auxiliary Metadata (.aux.xml)"
msgstr ""

#: ../../source/user/coordinate_epoch.rst:133
#: ../../source/user/coordinate_epoch.rst:146
msgid ""
"The coordinate epoch is encoded as ``coordinateEpoch`` attribute of the "
"``SRS`` element."
msgstr ""

#: ../../source/user/coordinate_epoch.rst:144
msgid "GDAL VRT"
msgstr ""

#: ../../source/user/coordinate_epoch.rst:159
msgid "Support in utilities"
msgstr ""

#: ../../source/user/coordinate_epoch.rst:161
msgid ""
":program:`gdalinfo` and :program:`ogrinfo` report the coordinate epoch, "
"when attached to a dataset/layer SRS."
msgstr ""

#: ../../source/user/coordinate_epoch.rst:164
msgid ""
":program:`gdal_edit.py` has a ``-a_coord_epoch`` option to define the "
"epoch of a dataset in place."
msgstr ""

#: ../../source/user/coordinate_epoch.rst:166
msgid ""
":program:`gdal_translate` and :program:`ogr2ogr` have a "
"``-a_coord_epoch`` option to be used together with ``-a_srs``, and "
"otherwise preserve the coordinate epoch in the output SRS from the source"
" SRS when no SRS related options are specified."
msgstr ""

#: ../../source/user/coordinate_epoch.rst:170
msgid ""
":program:`gdalwarp` and :program:`ogr2ogr` have a ``-s_coord_epoch`` "
"option to be used together with ``-s_srs`` (resp. ``-t_coord_epoch`` "
"option to be used together with ``-t_srs``) to override/set the "
"coordinate epoch of the source (resp. target) CRS. ``-s_coord_epoch`` and"
" ``-t_coord_epoch`` are currently mutually exclusive, due to lack of "
"support for transformations between two dynamic CRS."
msgstr ""

#: ../../source/user/coordinate_epoch.rst:176
msgid ""
":program:`gdalwarp` preserves the coordinate epoch in the output SRS when"
" appropriate."
msgstr ""

#: ../../source/user/coordinate_epoch.rst:180
msgid "Support in coordinate transformation"
msgstr ""

#: ../../source/user/coordinate_epoch.rst:182
msgid ""
"The :cpp:class:`OGRCoordinateTransformation` class can perform time-"
"dependent transformations between a static and dynamic CRS based on the "
"coordinate epoch passed per vertex."
msgstr ""

#: ../../source/user/coordinate_epoch.rst:186
msgid ""
"It can also take into account the coordinate epoch associated with a "
"dynamic CRS, when doing time-dependent transformations between a static "
"and dynamic CRS. The :config:`OGR_CT_USE_SRS_COORDINATE_EPOCH` "
"configuration option can be set to ``NO`` to disable using the coordinate"
" epoch associated with the source or target CRS."
msgstr ""

#: ../../source/user/coordinate_epoch.rst:192
msgid ""
"If a per-vertex time is specified, it overrides the one associated with "
"the CRS."
msgstr ""

#~ msgid ""
#~ ":program:`gdalwarp` and :program:`ogr2ogr` have "
#~ "a ``-s_coord_epoch`` option to be used"
#~ " together with ``-s_srs`` (resp. "
#~ "``-t_coord_epoch`` option to be used "
#~ "together with ``-t_srs``) to override/set "
#~ "the coordinate epoch of the source "
#~ "(resp. target) CRS. ``-s_coord_epoch`` and "
#~ "``-t_coord_epoch`` are currently mutually "
#~ "exclusive, due to lack of support "
#~ "for transformations between two dynamic "
#~ "CRS."
#~ msgstr ""

#~ msgid ""
#~ ":program:`gdalwarp` and :program:`ogr2ogr` have "
#~ "a ``-s_coord_epoch`` option to be used"
#~ " together with ``-s_srs`` (resp. "
#~ "``-t_coord_epoch`` option to be used "
#~ "together with ``-t_srs``) to override/set "
#~ "the coordinate epoch of the source "
#~ "(resp. target) CRS."
#~ msgstr ""

#~ msgid ""
#~ "Before PROJ 9.4, ``-s_coord_epoch`` and "
#~ "``-t_coord_epoch`` were mutually exclusive, "
#~ "due to lack of support for "
#~ "transformations between two dynamic CRS."
#~ msgstr ""


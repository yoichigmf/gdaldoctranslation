# SOME DESCRIPTIVE TITLE.
# Copyright (C) 1998-2024
# This file is distributed under the same license as the GDAL package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2024.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: GDAL \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2024-06-26 18:20+0900\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language: ja\n"
"Language-Team: ja <LL@li.org>\n"
"Plural-Forms: nplurals=1; plural=0;\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.14.0\n"

#: ../../source/drivers/raster/gpkg.rst:5
msgid "GPKG -- GeoPackage raster"
msgstr ""

#: ../../source/drivers/raster/gpkg.rst:-1
msgid "Driver short name"
msgstr ""

#: ../../source/drivers/raster/gpkg.rst:7
msgid "GPKG"
msgstr ""

#: ../../source/drivers/raster/gpkg.rst:-1
msgid "Build dependencies"
msgstr ""

#: ../../source/drivers/raster/gpkg.rst:9
msgid "libsqlite3 (and any or all of PNG, JPEG, WEBP drivers)"
msgstr ""

#: ../../source/drivers/raster/gpkg.rst:11
msgid ""
"This driver implements full read/creation/update of tables containing "
"raster tiles in the `OGC GeoPackage format standard "
"<http://www.geopackage.org/spec/>`__. The GeoPackage standard uses a "
"SQLite database file as a generic container, and the standard defines:"
msgstr ""

#: ../../source/drivers/raster/gpkg.rst:17
msgid ""
"Expected metadata tables (``gpkg_contents``, ``gpkg_spatial_ref_sys``, "
"``gpkg_tile_matrix``, ``gpkg_tile_matrix_set``, ...)"
msgstr ""

#: ../../source/drivers/raster/gpkg.rst:20
msgid ""
"Tile format encoding (PNG and JPEG for base specification, WebP as "
"extension) and tiling conventions"
msgstr ""

#: ../../source/drivers/raster/gpkg.rst:22
msgid "Naming and conventions for extensions"
msgstr ""

#: ../../source/drivers/raster/gpkg.rst:24
msgid ""
"This driver reads and writes SQLite files from the file system, so it "
"must be run by a user with read/write access to the files it is working "
"with."
msgstr ""

#: ../../source/drivers/raster/gpkg.rst:28
msgid ""
"The driver can also handle GeoPackage vectors. See :ref:`GeoPackage "
"vector <vector.gpkg>` documentation page"
msgstr ""

#: ../../source/drivers/raster/gpkg.rst:31
msgid "Various kind of input datasets can be converted to GeoPackage raster :"
msgstr ""

#: ../../source/drivers/raster/gpkg.rst:33
msgid "Single band grey level"
msgstr ""

#: ../../source/drivers/raster/gpkg.rst:34
msgid "Single band with R,G,B or R,G,B,A color table"
msgstr ""

#: ../../source/drivers/raster/gpkg.rst:35
msgid "Two bands: first band with grey level, second band with alpha channel"
msgstr ""

#: ../../source/drivers/raster/gpkg.rst:36
msgid "Three bands: Red, Green, Blue"
msgstr ""

#: ../../source/drivers/raster/gpkg.rst:37
msgid "Four band: Red, Green, Blue, Alpha"
msgstr ""

#: ../../source/drivers/raster/gpkg.rst:39
msgid "GeoPackage rasters only support Byte data type."
msgstr ""

#: ../../source/drivers/raster/gpkg.rst:41
msgid ""
"All raster extensions standardized by the GeoPackage specification are "
"supported in read and creation :"
msgstr ""

#: ../../source/drivers/raster/gpkg.rst:44
msgid ""
"*gpkg_webp*: when storing WebP tiles, provided that GDAL is compiled "
"against libwebp."
msgstr ""

#: ../../source/drivers/raster/gpkg.rst:46
msgid ""
"*gpkg_zoom_other*: when resolution of consecutive zoom levels does not "
"vary with a factor of 2."
msgstr ""

#: ../../source/drivers/raster/gpkg.rst:50
msgid "Driver capabilities"
msgstr ""

#: ../../source/drivers/raster/gpkg.rst:61
msgid "Opening options"
msgstr ""

#: ../../source/drivers/raster/gpkg.rst:63
msgid ""
"By default, the driver will expose a GeoPackage dataset as a four band "
"(Red,Green, Blue,Alpha) dataset, which gives the maximum compatibility "
"with the various encodings of tiles that can be stored. It is possible to"
" specify an explicit number of bands with the BAND_COUNT opening option. "
"Starting with GDAL 3.6, a special metadata item is written when creating "
"a GeoPackage raster with GDAL (when using the default CUSTOM tiling "
"scheme), and it is used on reading as the default number of bands."
msgstr ""

#: ../../source/drivers/raster/gpkg.rst:72
msgid ""
"The driver will use the geographic/projected extent indicated in the "
"`gpkg_contents <http://www.geopackage.org/spec/#_contents>`__ table, and "
"do necessary clipping, if needed, to respect that extent. However that "
"information being optional, if omitted, the driver will use the extent "
"provided by the `gpkg_tile_matrix_set "
"<http://www.geopackage.org/spec/#_tile_matrix_set>`__, which covers the "
"extent at all zoom levels. The user can also specify the "
"USE_TILE_EXTENT=YES open option to use the actual extent of tiles at the "
"maximum zoom level. Or it can specify any of MINX/MINY/MAXX/MAXY to have "
"a custom extent."
msgstr ""

#: ../../source/drivers/raster/gpkg.rst:83
msgid "|about-open-options| The following open options are available:"
msgstr ""

#: ../../source/drivers/raster/gpkg.rst:169
msgid ""
"Note: open options are typically specified with \"-oo name=value\" syntax"
" in most GDAL utilities, or with the GDALOpenEx() API call."
msgstr ""

#: ../../source/drivers/raster/gpkg.rst:173
msgid "Creation issues"
msgstr ""

#: ../../source/drivers/raster/gpkg.rst:175
msgid ""
"Depending of the number of bands of the input dataset and the tile format"
" selected, the driver will do the necessary conversions to be compatible "
"with the tile format."
msgstr ""

#: ../../source/drivers/raster/gpkg.rst:179
msgid ""
"To add several tile tables to a GeoPackage dataset (seen as GDAL "
"subdatasets), or to add a tile table to an existing vector-only "
"GeoPackage, the generic APPEND_SUBDATASET=YES creation option must be "
"provided."
msgstr ""

#: ../../source/drivers/raster/gpkg.rst:184
msgid ""
"Fully transparent tiles will not be written to the database, as allowed "
"by the format."
msgstr ""

#: ../../source/drivers/raster/gpkg.rst:187
msgid ""
"The driver implements the Create() and IWriteBlock() methods, so that "
"arbitrary writing of raster blocks is possible, enabling the direct use "
"of GeoPackage as the output dataset of utilities such as gdalwarp."
msgstr ""

#: ../../source/drivers/raster/gpkg.rst:191
msgid ""
"On creation, raster blocks can be written only if the geotransformation "
"matrix has been set with SetGeoTransform() This is effectively needed to "
"determine the zoom level of the full resolution dataset based on the "
"pixel resolution, dataset and tile dimensions."
msgstr ""

#: ../../source/drivers/raster/gpkg.rst:196
msgid ""
"Technical/implementation note: when a dataset is opened with a non-"
"default area of interest (i.e. use of MINX,MINY,MAXX,MAXY or "
"USE_TILE_EXTENT open option), or when creating/ opening a dataset with a "
"non-custom tiling scheme, it is possible that GDAL blocks do not exactly "
"match a single GeoPackage tile. In which case, each GDAL block will "
"overlap four GeoPackage tiles. This is easily handled on the read side, "
"but on creation/update side, such configuration could cause numerous "
"decompression/ recompression of tiles to be done, which might cause "
"unnecessary quality loss when using lossy compression (JPEG, WebP). To "
"avoid that, the driver will create a temporary database next to the main "
"GeoPackage file to store partial GeoPackage tiles in a lossless (and "
"uncompressed) way. Once a tile has received data for its four quadrants "
"and for all the bands (or the dataset is closed or explicitly flushed "
"with FlushCache()), those uncompressed tiles are definitely transferred "
"to the GeoPackage file with the appropriate compression. All of this is "
"transparent to the user of GDAL API/utilities"
msgstr ""

#: ../../source/drivers/raster/gpkg.rst:213
msgid ""
"The driver updates the GeoPackage ``last_change`` timestamp when the file"
" is created or modified. If consistent binary output is required for "
"reproducibility, the timestamp can be forced to a specific value by "
"setting the :config:`OGR_CURRENT_DATE` global configuration option. When "
"setting the option, take care to meet the specific time format "
"requirement of the GeoPackage standard, e.g. `for version 1.2 "
"<https://www.geopackage.org/spec120/#r15>`__."
msgstr ""

#: ../../source/drivers/raster/gpkg.rst:225
msgid "Tile formats"
msgstr ""

#: ../../source/drivers/raster/gpkg.rst:228
msgid "Tiled rasters"
msgstr ""

#: ../../source/drivers/raster/gpkg.rst:230
msgid "This section only applies for raster of Byte data type."
msgstr ""

#: ../../source/drivers/raster/gpkg.rst:232
msgid ""
"GeoPackage can store tiles in different formats, PNG and/or JPEG for the "
"baseline specification, and WebP for extended GeoPackage. Support for "
"those tile formats depend if the underlying drivers are available in "
"GDAL, which is generally the case for PNG and JPEG, but not necessarily "
"for WebP since it requires GDAL to be compiled against the optional "
"libwebp."
msgstr ""

#: ../../source/drivers/raster/gpkg.rst:239
msgid ""
"By default, GDAL will use a mix of PNG and JPEG tiles (PNG_JPEG tile "
"format, or AUTO). PNG tiles will be used to store tiles that are not "
"completely opaque, either because input dataset has an alpha channel with"
" non fully opaque content, or because tiles are partial due to clipping "
"at the right or bottom edges of the raster, or when a dataset is opened "
"with a non-default area of interest, or with a non-custom tiling scheme. "
"On the contrary, for fully opaque tiles, JPEG format will be used. "
"Starting with GDAL 3.6, if the raster has only one band, the default is "
"PNG."
msgstr ""

#: ../../source/drivers/raster/gpkg.rst:249
msgid ""
"It is possible to select one unique tile format by setting the "
"creation/open option TILE_FORMAT to one of PNG, JPEG or WEBP. When using "
"JPEG, the alpha channel will not be stored. When using WebP, the "
"`gpkg_webp <http://www.geopackage.org/spec/#extension_tiles_webp>`__ "
"extension will be registered. The lossy compression of WebP is used. Note"
" that a recent enough libwebp (>=0.1.4) must be used to support alpha "
"channel in WebP tiles."
msgstr ""

#: ../../source/drivers/raster/gpkg.rst:257
msgid ""
"PNG8 can be selected to use 8-bit PNG with a color table up to 256 "
"colors. On creation, an optimized color table is computed for each tile. "
"The DITHER option can be set to YES to use Floyd/Steinberg dithering "
"algorithm, which spreads the quantization error on neighbouring pixels "
"for better rendering (note however than when zooming in, this can cause "
"non desirable visual artifacts). Setting it to YES will generally cause "
"less effective compression. Note that at that time, such an 8-bit PNG "
"formulation is only used for fully opaque tiles, as the median-cut "
"algorithm currently implemented to compute the optimal color table does "
"not support alpha channel (even if PNG8 format would potentially allow "
"color table with transparency). So when selecting PNG8, non fully opaque "
"tiles will be stored as 32-bit PNG."
msgstr ""

#: ../../source/drivers/raster/gpkg.rst:271
msgid "Tiled gridded coverage data"
msgstr ""

#: ../../source/drivers/raster/gpkg.rst:273
msgid ""
"Since GDAL 2.3, `tiled gridded coverage data "
"<http://docs.opengeospatial.org/is/17-066r1/17-066r1.html#27>`__ can be "
"stored using PNG unsigned 16bit tiles (with potential offset and scaling "
"so as to be able to represent floating point data) or TIFF 32-bit "
"floating-point LZW compressed tiles."
msgstr ""

#: ../../source/drivers/raster/gpkg.rst:279
msgid ""
"When converting a GDAL Int16 or UInt16 dataset, PNG tiles will be used. "
"When converting a GDAL Float32 dataset, TIFF tiles will be used by "
"default, unless PNG is explicitly selected, in which case scaling and "
"offsetting will be automatically computed for each tile."
msgstr ""

#: ../../source/drivers/raster/gpkg.rst:286
msgid ""
"The `tiled gridded extension "
"<http://www.geopackage.org/spec/#extension_tiled_gridded_elevation_data>`__"
" initially implemented in GDAL 2.2 was not officially adopted and had "
"been later reworked by OGC. The adopted `tiled gridded coverage data "
"<http://docs.opengeospatial.org/is/17-066r1/17-066r1.html#27>`__ has a "
"few differences that will make GDAL 2.2 datasets not be compliant with "
"the final extension. GDAL 2.3 can open those GDAL 2.2-generated files."
msgstr ""

#: ../../source/drivers/raster/gpkg.rst:298
msgid "Tiling schemes"
msgstr ""

#: ../../source/drivers/raster/gpkg.rst:300
msgid ""
"By default, conversion to GeoPackage will create a custom tiling scheme, "
"such that the input dataset can be losslessly converted, both at the "
"pixel and georeferencing level (if using a lossless tile format such as "
"PNG). That tiling scheme is such that its origin (*min_x*, *max_y*) in "
"the `gpkg_tile_matrix_set "
"<http://www.geopackage.org/spec/#_tile_matrix_set>`__ table perfectly "
"matches the top left corner of the dataset, and the selected resolution "
"(*pixel_x_size*, *pixel_y_size*) at the computed maximum zoom_level of "
"the `gpkg_tile_matrix <http://www.geopackage.org/spec/#_tile_matrix>`__ "
"table will match the pixel width and height of the raster."
msgstr ""

#: ../../source/drivers/raster/gpkg.rst:312
msgid ""
"However to ease interoperability with other implementations, and enable "
"use of GeoPackage with tile servicing software, it is possible to select "
"a predefined tiling scheme that has world coverage. The available tiling "
"schemes are :"
msgstr ""

#: ../../source/drivers/raster/gpkg.rst:317
msgid ""
"*GoogleMapsCompatible*, as described in WMTS 1.0 specification, Annex "
"E.4. That tiling schemes consists of a single 256x256 tile at its zoom "
"level 0, in EPSG:3857 CRS, with extent in easting and northing in the "
"range [-20037508.34,20037508.34]."
msgstr ""

#: ../../source/drivers/raster/gpkg.rst:321
msgid ""
"*InspireCRS84Quad*, as described in `Inspire View Services "
"<http://inspire.ec.europa.eu/documents/Network_Services/TechnicalGuidance_ViewServices_v3.0.pdf>`__."
" That tiling schemes consists of two 256x256 tiles at its zoom level 0, "
"in EPSG:4326 CRS, with extent in longitude in the range [-180,180] and in"
" latitude in the range [-90,90]."
msgstr ""

#: ../../source/drivers/raster/gpkg.rst:326
msgid ""
"*PseudoTMS_GlobalGeodetic*, based on the `global-geodetic "
"<http://wiki.osgeo.org/wiki/Tile_Map_Service_Specification#global-"
"geodetic>`__ profile of OSGeo TMS (Tile Map Service) specification. This "
"has exactly the same definition as *InspireCRS84Quad* tiling scheme. Note"
" however that full interoperability with TMS is not possible due to the "
"origin of numbering of tiles being the top left corner in GeoPackage "
"(consistently with WMTS convention), whereas TMS uses the bottom left "
"corner as origin."
msgstr ""

#: ../../source/drivers/raster/gpkg.rst:334
msgid ""
"*PseudoTMS_GlobalMercator*, based on the `global-mercator "
"<http://wiki.osgeo.org/wiki/Tile_Map_Service_Specification#global-"
"mercator>`__ profile of OSGeo TMS (Tile Map Service) specification. That "
"tiling schemes consists of four 256x256 tiles at its zoom level 0, in "
"EPSG:3857 CRS, with extent extent in easting and northing in the range "
"[-20037508.34,20037508.34]. The same remark as with "
"PseudoTMS_GlobalGeodetic applies regarding interoperability with TMS."
msgstr ""

#: ../../source/drivers/raster/gpkg.rst:341
msgid ""
"*GoogleCRS84Quad*, as described in `OGC 07-057r7 WMTS 1.0 "
"<http://portal.opengeospatial.org/files/?artifact_id=35326>`__ "
"specification, Annex E.3. That tiling schemes consists of a single "
"256x256 tile at its zoom level 0, in EPSG:4326 CRS, with extent in "
"longitude and latitude in the range [-180,180]. Consequently, at zoom "
"level 0, 64 lines are unused at the top and bottom of that tile. This may"
" cause issues with some implementations of the specification, and there "
"are some ambiguities about the exact definition of this tiling scheme. "
"Using InspireCRS84Quad/PseudoTMS_GlobalGeodetic instead is therefore "
"recommended. NOTE: `OGC WMTS Simple Profile 13-082r2 "
"<http://docs.opengeospatial.org/is/13-082r2/13-082r2.html#30>`__ changed "
"the definition of GoogleCRS84Quad (so not implemented by the driver). The"
" new definition includes a -1 level (that cannot be modeled in GeoPackage"
" given constraints on zoom_level being positive or 0), with a single tile"
" at origin -180,90 and whose bottom 128 lines are empty. Levels 0 or "
"greater are identical to the InspireCRS84Quad tiling scheme. So for "
"practical purposes, InspireCRS84Quad in GeoPackage is conformant to the "
"new GoogleCRS84Quad definition."
msgstr ""

#: ../../source/drivers/raster/gpkg.rst:362
msgid ""
"In all the above tiling schemes, consecutive zoom levels defer by a "
"resolution of a factor of two."
msgstr ""

#: ../../source/drivers/raster/gpkg.rst:365
msgid ""
"Starting with GDAL 3.2, it is also possible to use a Tile Matrix Set "
"definition, encoded as a JSON file, according to the `OGC Two Dimensional"
" Tile Matrix Set standard`_ Examples of such files can be found at "
"http://schemas.opengis.net/tms/1.0/json/examples/ The GDAL data directory"
" also contains files prefixed with ``tms_`` and with a ``.json`` "
"extension. If there is a ``tms_FOO.json`` file, then ``FOO`` can be used "
"as the value of the TILING_SCHEME creation option. There are restrictions"
" on the types of tile matrix set supported:"
msgstr ""

#: ../../source/drivers/raster/gpkg.rst:373
msgid "all zoom levels must have the same origin"
msgstr ""

#: ../../source/drivers/raster/gpkg.rst:374
msgid "consecutive zoom levels defer by a resolution of a factor of two."
msgstr ""

#: ../../source/drivers/raster/gpkg.rst:375
msgid "all zoom levels must have the same tile dimension"
msgstr ""

#: ../../source/drivers/raster/gpkg.rst:376
msgid "variable matrix width tile set are not supported."
msgstr ""

#: ../../source/drivers/raster/gpkg.rst:381
msgid "Nodata value"
msgstr ""

#: ../../source/drivers/raster/gpkg.rst:383
msgid ""
"The concept of the nodata value is only supported for tiled gridded "
"elevation datasets. For regular tiled rasters, the alpha band must rather"
" be used."
msgstr ""

#: ../../source/drivers/raster/gpkg.rst:387
msgid ""
"For Float32 datasets with TIFF tiles, the concepts of nodata in GDAL and "
"null_value in the GeoPackage internals perfectly match."
msgstr ""

#: ../../source/drivers/raster/gpkg.rst:390
msgid ""
"For Int16, UInt16 or Float32 with PNG tiles, GDAL will generally remap "
"the input nodata value to another value."
msgstr ""

#: ../../source/drivers/raster/gpkg.rst:393
msgid "On writing, for PNG tiles, the behavior is the following one:"
msgstr ""

#: ../../source/drivers/raster/gpkg.rst:396
#: ../../source/drivers/raster/gpkg.rst:405
#: ../../source/drivers/raster/gpkg.rst:415
msgid "GDAL data type"
msgstr ""

#: ../../source/drivers/raster/gpkg.rst:396
msgid "Input GDAL nodata value"
msgstr ""

#: ../../source/drivers/raster/gpkg.rst:396
#: ../../source/drivers/raster/gpkg.rst:405
#: ../../source/drivers/raster/gpkg.rst:415
msgid "null_value in GPKG gpkg_2d_gridded_coverage_ancillary"
msgstr ""

#: ../../source/drivers/raster/gpkg.rst:397
#: ../../source/drivers/raster/gpkg.rst:406
#: ../../source/drivers/raster/gpkg.rst:407
#: ../../source/drivers/raster/gpkg.rst:416
msgid "Int16"
msgstr ""

#: ../../source/drivers/raster/gpkg.rst:397
#: ../../source/drivers/raster/gpkg.rst:399
msgid "Any"
msgstr ""

#: ../../source/drivers/raster/gpkg.rst:397
#: ../../source/drivers/raster/gpkg.rst:399
#: ../../source/drivers/raster/gpkg.rst:416
#: ../../source/drivers/raster/gpkg.rst:418
msgid "65535"
msgstr ""

#: ../../source/drivers/raster/gpkg.rst:398
#: ../../source/drivers/raster/gpkg.rst:408
#: ../../source/drivers/raster/gpkg.rst:417
msgid "UInt16"
msgstr ""

#: ../../source/drivers/raster/gpkg.rst:398
#: ../../source/drivers/raster/gpkg.rst:417
msgid "X (if coverage offset == 0 and coverage scale == 1)"
msgstr ""

#: ../../source/drivers/raster/gpkg.rst:398
#: ../../source/drivers/raster/gpkg.rst:407
#: ../../source/drivers/raster/gpkg.rst:408
#: ../../source/drivers/raster/gpkg.rst:409
#: ../../source/drivers/raster/gpkg.rst:417
msgid "X"
msgstr ""

#: ../../source/drivers/raster/gpkg.rst:399
#: ../../source/drivers/raster/gpkg.rst:409
#: ../../source/drivers/raster/gpkg.rst:418
msgid "Float32"
msgstr ""

#: ../../source/drivers/raster/gpkg.rst:402
msgid "On reading, for PNG tiles, the behavior is the following one:"
msgstr ""

#: ../../source/drivers/raster/gpkg.rst:405
msgid "Exposed GDAL nodata value"
msgstr ""

#: ../../source/drivers/raster/gpkg.rst:406
msgid ">= 32768"
msgstr ""

#: ../../source/drivers/raster/gpkg.rst:406
#: ../../source/drivers/raster/gpkg.rst:416
msgid "-32768"
msgstr ""

#: ../../source/drivers/raster/gpkg.rst:407
msgid "X <= 32767"
msgstr ""

#: ../../source/drivers/raster/gpkg.rst:412
msgid "Thus, perfect roundtripping is achieved in the following cases:"
msgstr ""

#: ../../source/drivers/raster/gpkg.rst:415
msgid "GDAL nodata value"
msgstr ""

#: ../../source/drivers/raster/gpkg.rst:422
msgid "Creation options"
msgstr ""

#: ../../source/drivers/raster/gpkg.rst:424
msgid "|about-creation-options| The following creation options are available:"
msgstr ""

#: ../../source/drivers/raster/gpkg.rst:502
msgid ""
"Starting with GDAL 3.2, the value of TILING_SCHEME can also be the "
"filename of a JSON file according to the `OGC Two Dimensional Tile Matrix"
" Set standard`_, a URL to such file, the radical of a definition file in "
"the GDAL data directory (e.g. ``FOO`` for a file named ``tms_FOO.json``) "
"or the inline JSON definition. Note: the TILING_SCHEME option with a non-"
"CUSTOM value is best used with the gdal_translate utility / CreateCopy() "
"API operation. If used with gdalwarp, it requires setting the -tr switch "
"to the exact value expected by one zoom level of the tiling scheme."
msgstr ""

#: ../../source/drivers/raster/gpkg.rst:511
msgid ""
"In non-CUSTOM mode, the actual resolution can be controlled with the "
":co:`ZOOM_LEVEL` or :co:`ZOOM_LEVEL_STRATEGY` options."
msgstr ""

#: ../../source/drivers/raster/gpkg.rst:623
msgid "Overviews"
msgstr ""

#: ../../source/drivers/raster/gpkg.rst:625
msgid ""
"gdaladdo / BuildOverviews() can be used to compute overviews. Power-of-"
"two overview factors (2,4,8,16,...) should be favored to be conformant "
"with the baseline GeoPackage specification. Use of other overview factors"
" will work with the GDAL driver, and cause the `gpkg_zoom_other "
"<http://www.geopackage.org/spec/#extension_zoom_other_intervals>`__ "
"extension to be registered, but that could potentially cause "
"interoperability problems with other implementations that do not support "
"that extension."
msgstr ""

#: ../../source/drivers/raster/gpkg.rst:634
msgid ""
"Overviews can also be cleared with the -clean option of gdaladdo (or "
"BuildOverviews() with nOverviews=0)"
msgstr ""

#: ../../source/drivers/raster/gpkg.rst:638
msgid "Metadata"
msgstr ""

#: ../../source/drivers/raster/gpkg.rst:640
msgid ""
"GDAL uses the standardized `gpkg_metadata "
"<http://www.geopackage.org/spec/#_metadata_table>`__ and "
"`gpkg_metadata_reference "
"<http://www.geopackage.org/spec/#_metadata_reference_table>`__ tables to "
"read and write metadata."
msgstr ""

#: ../../source/drivers/raster/gpkg.rst:646
msgid ""
"GDAL metadata, from the default metadata domain and possibly other "
"metadata domains, is serialized in a single XML document, conformant with"
" the format used in GDAL PAM (Persistent Auxiliary Metadata) .aux.xml "
"files, and registered with md_scope=dataset and "
"md_standard_uri=http://gdal.org in gpkg_metadata. In "
"gpkg_metadata_reference, this entry is referenced with a "
"reference_scope=table and table_name={name of the raster table}"
msgstr ""

#: ../../source/drivers/raster/gpkg.rst:654
msgid ""
"It is possible to read and write metadata that applies to the global "
"GeoPackage, and not only to the raster table, by using the *GEOPACKAGE* "
"metadata domain."
msgstr ""

#: ../../source/drivers/raster/gpkg.rst:658
msgid ""
"Metadata not originating from GDAL can be read by the driver and will be "
"exposed as metadata items with keys of the form GPKG_METADATA_ITEM_XXX "
"and values the content of the *metadata* columns of the gpkg_metadata "
"table. Update of such metadata is not currently supported through GDAL "
"interfaces ( although it can be through direct SQL commands)."
msgstr ""

#: ../../source/drivers/raster/gpkg.rst:664
msgid ""
"The specific DESCRIPTION and IDENTIFIER metadata item of the default "
"metadata domain can be used in read/write to read from/update the "
"corresponding columns of the gpkg_contents table."
msgstr ""

#: ../../source/drivers/raster/gpkg.rst:668
msgid ""
"You can set the CREATE_METADATA_TABLES configuration option to NO to "
"avoid creating and filling the metadata tables."
msgstr ""

#: ../../source/drivers/raster/gpkg.rst:672
msgid "IMAGE_STRUCTURE metadata item"
msgstr ""

#: ../../source/drivers/raster/gpkg.rst:676
msgid ""
"Implementation details, normally transparent to GDAL users, but useful "
"for other implementations."
msgstr ""

#: ../../source/drivers/raster/gpkg.rst:679
msgid ""
"Starting with GDAL 3.6.1, the following optional metadata items can be "
"read and write into the ``IMAGE_STRUCTURE`` metadata domain, in the "
"``<GDALMultiDomainMetadata>`` XML element:"
msgstr ""

#: ../../source/drivers/raster/gpkg.rst:683
msgid ""
"BAND_COUNT=1, 2, 3 or 4. Applies only for Byte data. Set when creating a "
"dataset so that GDAL knows the number of bands when reopening it."
msgstr ""

#: ../../source/drivers/raster/gpkg.rst:686
msgid ""
"COLOR_TABLE={{r0,g0,b0,a0},...{r255,g255,b255,a255}}. Applies only for "
"Byte data and a single band dataset. Set when creating a dataset from a "
"source dataset that has a color table."
msgstr ""

#: ../../source/drivers/raster/gpkg.rst:690
msgid ""
"TILE_FORMAT=PNG/PNG8/PNG_JPEG/JPEG/WEBP. Set when creating a dataset so "
"that GDAL knows the tile format when reopening it, for updates."
msgstr ""

#: ../../source/drivers/raster/gpkg.rst:693
msgid "NODATA_VALUE=integer between 0 and 255. Applies only for Byte data."
msgstr ""

#: ../../source/drivers/raster/gpkg.rst:696
msgid "Example:"
msgstr ""

#: ../../source/drivers/raster/gpkg.rst:712
msgid "Level of support of GeoPackage Extensions"
msgstr ""

#: ../../source/drivers/raster/gpkg.rst:714
msgid "(Restricted to those have a raster scope)"
msgstr ""

#: ../../source/drivers/raster/gpkg.rst:716
msgid "Extensions"
msgstr ""

#: ../../source/drivers/raster/gpkg.rst:719
msgid "Extension name"
msgstr ""

#: ../../source/drivers/raster/gpkg.rst:720
msgid "OGC adopted extension ?"
msgstr ""

#: ../../source/drivers/raster/gpkg.rst:721
msgid "Supported by GDAL?"
msgstr ""

#: ../../source/drivers/raster/gpkg.rst:722
msgid ""
"`Zoom Other intervals "
"<http://www.geopackage.org/guidance/extensions/zoom_other_intervals.html>`__"
msgstr ""

#: ../../source/drivers/raster/gpkg.rst:723
#: ../../source/drivers/raster/gpkg.rst:724
#: ../../source/drivers/raster/gpkg.rst:726
#: ../../source/drivers/raster/gpkg.rst:727
#: ../../source/drivers/raster/gpkg.rst:729
#: ../../source/drivers/raster/gpkg.rst:730
#: ../../source/drivers/raster/gpkg.rst:732
#: ../../source/drivers/raster/gpkg.rst:735
msgid "Yes"
msgstr ""

#: ../../source/drivers/raster/gpkg.rst:725
msgid ""
"`Tiles Encoding WebP "
"<http://www.geopackage.org/guidance/extensions/tiles_encoding_webp.html>`__"
msgstr ""

#: ../../source/drivers/raster/gpkg.rst:728
msgid "`Metadata <http://www.geopackage.org/guidance/extensions/metadata.html>`__"
msgstr ""

#: ../../source/drivers/raster/gpkg.rst:731
msgid ""
"`WKT for Coordinate Reference Systems "
"<http://www.geopackage.org/guidance/extensions/wkt_for_crs.md>`__ (WKT "
"v2)"
msgstr ""

#: ../../source/drivers/raster/gpkg.rst:733
msgid ""
"Partially, since GDAL 2.2. GDAL can read databases using this extension. "
"GDAL 3.0 brings support for the WKT v2 entry."
msgstr ""

#: ../../source/drivers/raster/gpkg.rst:734
msgid ""
"`Tiled Gridded Coverage Data "
"<http://www.geopackage.org/guidance/extensions/tiled_gridded_coverage_data.html>`__"
msgstr ""

#: ../../source/drivers/raster/gpkg.rst:736
msgid ""
"Yes, since GDAL 2.3 (GDAL 2.2 supported a preliminary version of this "
"extension)"
msgstr ""

#: ../../source/drivers/raster/gpkg.rst:739
msgid "Examples"
msgstr ""

#: ../../source/drivers/raster/gpkg.rst:741
msgid ""
"Simple translation of a GeoTIFF into GeoPackage. The table 'byte' will be"
" created with the tiles."
msgstr ""

#: ../../source/drivers/raster/gpkg.rst:748
msgid "Translation of a GeoTIFF into GeoPackage using WebP tiles"
msgstr ""

#: ../../source/drivers/raster/gpkg.rst:754
msgid ""
"Translation of a GeoTIFF into GeoPackage using GoogleMapsCompatible "
"tiling scheme (with reprojection and resampling if needed)"
msgstr ""

#: ../../source/drivers/raster/gpkg.rst:761
msgid "Building of overviews of an existing GeoPackage, and forcing JPEG tiles"
msgstr ""

#: ../../source/drivers/raster/gpkg.rst:768
msgid ""
"Addition of a new subdataset to an existing GeoPackage, and choose a non "
"default name for the raster table."
msgstr ""

#: ../../source/drivers/raster/gpkg.rst:775
msgid "Reprojection of an input dataset to GeoPackage"
msgstr ""

#: ../../source/drivers/raster/gpkg.rst:781
msgid "Open a specific raster table in a GeoPackage"
msgstr ""

#: ../../source/drivers/raster/gpkg.rst:790
msgid "Raster SQL functions"
msgstr ""

#: ../../source/drivers/raster/gpkg.rst:792
msgid ""
"The raster SQL functions mentioned at "
":ref:`sql_sqlite_dialect_raster_functions` are also available."
msgstr ""

#: ../../source/drivers/raster/gpkg.rst:795
msgid ""
"The ``gdal_get_layer_pixel_value()`` function (added in GDAL 3.7), "
"variant of the generic ``gdal_get_pixel_value()``, can be used to extract"
" the value of a pixel in a raster layer of the current dataset."
msgstr ""

#: ../../source/drivers/raster/gpkg.rst:799
msgid "It takes 5 arguments:"
msgstr ""

#: ../../source/drivers/raster/gpkg.rst:801
msgid "a string with the layer/table name"
msgstr ""

#: ../../source/drivers/raster/gpkg.rst:802
msgid "a band number (numbering starting at 1)"
msgstr ""

#: ../../source/drivers/raster/gpkg.rst:803
msgid ""
"a string being \"georef\" to indicate that subsequent values will be "
"georeferenced coordinates, or \"pixel\" to indicate that subsequent "
"values will be in column, line pixel space"
msgstr ""

#: ../../source/drivers/raster/gpkg.rst:806
msgid "georeferenced X value or column number"
msgstr ""

#: ../../source/drivers/raster/gpkg.rst:807
msgid "georeferenced Y value or line number"
msgstr ""

#: ../../source/drivers/raster/gpkg.rst:815
msgid "See Also"
msgstr ""

#: ../../source/drivers/raster/gpkg.rst:817
msgid ":ref:`GeoPackage vector <vector.gpkg>` documentation page"
msgstr ""

#: ../../source/drivers/raster/gpkg.rst:818
msgid ""
"`Getting Started With GeoPackage <http://www.geopackage.org/guidance"
"/getting-started.html>`__"
msgstr ""

#: ../../source/drivers/raster/gpkg.rst:820
msgid ""
"`OGC GeoPackage format standard <http://www.geopackage.org/spec/>`__ "
"specification, HTML format (current/development version of the standard)"
msgstr ""

#: ../../source/drivers/raster/gpkg.rst:823
msgid ""
"`OGC GeoPackage Encoding Standard "
"<http://www.opengeospatial.org/standards/geopackage>`__ page"
msgstr ""

#: ../../source/drivers/raster/gpkg.rst:825
msgid "`SQLite <http://sqlite.org/>`__"
msgstr ""

#: ../../source/drivers/raster/gpkg.rst:826
msgid ":ref:`PNG driver <raster.png>` documentation page"
msgstr ""

#: ../../source/drivers/raster/gpkg.rst:827
msgid ":ref:`JPEG driver <raster.jpeg>` documentation page"
msgstr ""

#: ../../source/drivers/raster/gpkg.rst:828
msgid ":ref:`WEBP driver <raster.webp>` documentation page"
msgstr ""

#: ../../source/drivers/raster/gpkg.rst:829
msgid ""
"`OGC 07-057r7 WMTS 1.0 "
"<http://portal.opengeospatial.org/files/?artifact_id=35326>`__ "
"specification"
msgstr ""

#: ../../source/drivers/raster/gpkg.rst:832
msgid ""
"`OSGeo TMS (Tile Map Service) "
"<http://wiki.osgeo.org/wiki/Tile_Map_Service_Specification>`__ "
"specification"
msgstr ""

#: ../../source/drivers/raster/gpkg.rst:837
msgid "Other notes"
msgstr ""

#: ../../source/drivers/raster/gpkg.rst:839
msgid ""
"Development of raster support in the GeoPackage driver was financially "
"supported by `Safe Software <http://www.safe.com>`__."
msgstr ""

#~ msgid "Driver short name"
#~ msgstr ""

#~ msgid "GPKG"
#~ msgstr ""

#~ msgid "Build dependencies"
#~ msgstr ""

#~ msgid "libsqlite3 (and any or all of PNG, JPEG, WEBP drivers)"
#~ msgstr ""

#~ msgid ""
#~ "Starting with GDAL 3.2, the value "
#~ "of TILING_SCHEME can also be the "
#~ "filename of a JSON file according "
#~ "to the `OGC Two Dimensional Tile "
#~ "Matrix Set standard`_, a URL to "
#~ "such file, the radical of a "
#~ "definition file in the GDAL data "
#~ "directory (e.g. ``FOO`` for a file "
#~ "named ``tms_FOO.json``) or the inline "
#~ "JSON definition. Note: the TILING_SCHEME "
#~ "option with a non-CUSTOM value is"
#~ " best used with the gdal_translate "
#~ "utility / CreateCopy() API operation. If"
#~ " used with gdalwarp, it requires "
#~ "setting the -tr switch to the "
#~ "exact value expected by one zoom "
#~ "level of the tiling scheme."
#~ msgstr ""

#~ msgid ""
#~ "In non-CUSTOM mode, the actual "
#~ "resolution can be controlled with the"
#~ " :co:`ZOOM_LEVEL` or :co:`ZOOM_LEVEL_STRATEGY` "
#~ "options."
#~ msgstr ""

#~ msgid "The following open options are available:"
#~ msgstr ""

#~ msgid ""
#~ "Starting with GDAL 3.2, it is also"
#~ " possible to use a Tile Matrix "
#~ "Set definition, encoded as a JSon "
#~ "file, according to the `OGC Two "
#~ "Dimensional Tile Matrix Set standard`_ "
#~ "Examples of such files can be "
#~ "found at http://schemas.opengis.net/tms/1.0/json/examples/"
#~ " The GDAL data directory also "
#~ "contains files prefixed with ``tms_`` "
#~ "and with a ``.json`` extension. If "
#~ "there is a ``tms_FOO.json`` file, then"
#~ " ``FOO`` can be used as the "
#~ "value of the TILING_SCHEME creation "
#~ "option. There are restrictions on the"
#~ " types of tile matrix set supported:"
#~ msgstr ""

#~ msgid "The following creation options are available:"
#~ msgstr ""


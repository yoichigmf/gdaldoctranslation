# SOME DESCRIPTIVE TITLE.
# Copyright (C) 1998-2024
# This file is distributed under the same license as the GDAL package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2024.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: GDAL \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2024-06-23 04:43+0900\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language: en\n"
"Language-Team: en <LL@li.org>\n"
"Plural-Forms: nplurals=2; plural=(n != 1);\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.14.0\n"

#: ../../source/drivers/raster/zarr.rst:5
#: ../../source/drivers/raster/zarr.rst:9
msgid "Zarr"
msgstr ""

#: ../../source/drivers/raster/zarr.rst:-1
msgid "Driver short name"
msgstr ""

#: ../../source/drivers/raster/zarr.rst:-1
msgid "Build dependencies"
msgstr ""

#: ../../source/drivers/raster/zarr.rst:11
msgid ""
"Built-in by default, but liblz4, libxz (lzma), libzstd and libblosc "
"strongly recommended to get all compressors"
msgstr ""

#: ../../source/drivers/raster/zarr.rst:14
msgid ""
"Zarr is a format for the storage of chunked, compressed, N-dimensional "
"arrays. This format is supported for read and write access, and using the"
" traditional 2D raster API or the newer multidimensional API"
msgstr ""

#: ../../source/drivers/raster/zarr.rst:18
msgid ""
"The driver supports the Zarr V2 specification, and has experimental "
"support for the in-progress Zarr V3 specification."
msgstr ""

#: ../../source/drivers/raster/zarr.rst:23
msgid ""
"The current implementation of Zarr V3 before GDAL 3.8 is incompatible "
"with the latest evolutions of the Zarr V3 specification. GDAL 3.8 is "
"compatible with the Zarr V3 specification at date 2023-May-7, and is not "
"interoperable with Zarr V3 datasets produced by earlier GDAL versions."
msgstr ""

#: ../../source/drivers/raster/zarr.rst:29
msgid ""
"Local and cloud storage (see :ref:`virtual_file_systems`) are supported "
"in read and write."
msgstr ""

#: ../../source/drivers/raster/zarr.rst:32
msgid "Driver capabilities"
msgstr ""

#: ../../source/drivers/raster/zarr.rst:43
msgid "Concepts"
msgstr ""

#: ../../source/drivers/raster/zarr.rst:45
msgid ""
"A Zarr dataset is made of a hierarchy of nodes, with intermediate nodes "
"being groups (:cpp:class:`GDALGroup`), and leafs being arrays "
"(:cpp:class:`GDALMDArray`)."
msgstr ""

#: ../../source/drivers/raster/zarr.rst:49
msgid "Dataset name"
msgstr ""

#: ../../source/drivers/raster/zarr.rst:51
msgid ""
"For Zarr V2, the dataset name recognized by the Open() method of the "
"driver is a directory that contains a :file:`.zgroup` file, a "
":file:`.zarray` file or a :file:`.zmetadata` file (consolidated "
"metadata). For faster exploration, the driver will use consolidated "
"metadata by default when found."
msgstr ""

#: ../../source/drivers/raster/zarr.rst:56
msgid ""
"For Zarr V3, the dataset name recognized by the Open() method of the "
"driver is a directory that contains a :file:`zarr.json` file (root of the"
" dataset)."
msgstr ""

#: ../../source/drivers/raster/zarr.rst:59
msgid ""
"For datasets on file systems where file listing is not reliable, as often"
" with /vsicurl/, it is also possible to prefix the directory name with "
"``ZARR:``, and it is necessary to surround the /vsicurl/-prefixed URL "
"with double quotes. e.g `ZARR:\"/vsicurl/https://example.org/foo.zarr\"`."
" Note that when passing such string in a command line shell, extra "
"quoting might be necessary to preserve the double-quoting."
msgstr ""

#: ../../source/drivers/raster/zarr.rst:66
msgid ""
"For example with a Bash shell, the whole connection string needs to be "
"surrounded with single-quote characters:"
msgstr ""

#: ../../source/drivers/raster/zarr.rst:75
msgid "Compression methods"
msgstr ""

#: ../../source/drivers/raster/zarr.rst:77
msgid ""
"Compression methods available depend on how GDAL is built, and `libblosc "
"<https://github.com/Blosc/c-blosc>`__ too."
msgstr ""

#: ../../source/drivers/raster/zarr.rst:80
msgid "A full-feature build will show:"
msgstr ""

#: ../../source/drivers/raster/zarr.rst:92
msgid ""
"For specific uses, it is also possible to register at run-time extra "
"compressors and decompressors with :cpp:func:`CPLRegisterCompressor` and "
":cpp:func:`CPLRegisterDecompressor`."
msgstr ""

#: ../../source/drivers/raster/zarr.rst:96
msgid "XArray _ARRAY_DIMENSIONS"
msgstr ""

#: ../../source/drivers/raster/zarr.rst:98
msgid ""
"The driver support the ``_ARRAY_DIMENSIONS`` special attribute used by "
"`XArray "
"<http://xarray.pydata.org/en/stable/generated/xarray.open_zarr.html>`__ "
"to store the dimension names of an array."
msgstr ""

#: ../../source/drivers/raster/zarr.rst:103
msgid "NCZarr extensions"
msgstr ""

#: ../../source/drivers/raster/zarr.rst:105
msgid ""
"The driver support the `NCZarr v2 "
"<https://www.unidata.ucar.edu/software/netcdf/documentation/NUG/nczarr_head.html>`__"
" extensions of storing the dimension names of an array (read-only)"
msgstr ""

#: ../../source/drivers/raster/zarr.rst:110
msgid "SRS encoding"
msgstr ""

#: ../../source/drivers/raster/zarr.rst:112
msgid ""
"The Zarr specification has no provision for spatial reference system "
"encoding. GDAL uses a ``_CRS`` attribute that is a dictionary that may "
"contain one or several of the following keys: ``url`` (using a OGC CRS "
"URL), ``wkt`` (WKT:2019 used by default on writing, WKT1 also supported "
"on reading.), ``projjson``. On reading, it will use ``url`` by default, "
"if not found will fallback to ``wkt`` and then ``projjson``."
msgstr ""

#: ../../source/drivers/raster/zarr.rst:247
msgid "Particularities of the classic raster API"
msgstr ""

#: ../../source/drivers/raster/zarr.rst:249
msgid ""
"If the Zarr dataset contains one single array with 2 dimensions, it will "
"be exposed as a regular GDALDataset when using the classic raster API. If"
" the dataset contains more than one such single array, or arrays with 3 "
"or more dimensions, the driver will list subdatasets to access each array"
" and/or 2D slices within arrays with 3 or more dimensions."
msgstr ""

#: ../../source/drivers/raster/zarr.rst:256
msgid "Open options"
msgstr ""

#: ../../source/drivers/raster/zarr.rst:258
msgid "The following dataset open options are available:"
msgstr ""

#: ../../source/drivers/raster/zarr.rst:320
msgid "Multi-threaded caching"
msgstr ""

#: ../../source/drivers/raster/zarr.rst:322
msgid ""
"The driver implements the :cpp:func:`GDALMDArray::AdviseRead` method. "
"This proceed to multi-threaded decoding of the tiles that intersect the "
"area of interest specified. A sufficient cache size must be specified. "
"The call is blocking."
msgstr ""

#: ../../source/drivers/raster/zarr.rst:327
msgid "The options that can be passed to the methods are:"
msgstr ""

#: ../../source/drivers/raster/zarr.rst:329
msgid ""
"**CACHE_SIZE=value_in_byte**: Maximum RAM to use, expressed in number of "
"bytes. If not specified, half of the remaining GDAL block cache size will"
" be used. Note: the caching mechanism of Zarr array will not update this "
"remaining block cache size."
msgstr ""

#: ../../source/drivers/raster/zarr.rst:334
msgid ""
"**NUM_THREADS=integer or ALL_CPUS**: Number of threads to use in "
"parallel. If not specified, the :config:`GDAL_NUM_THREADS` configuration "
"option will be taken into account."
msgstr ""

#: ../../source/drivers/raster/zarr.rst:339
msgid "Creation options"
msgstr ""

#: ../../source/drivers/raster/zarr.rst:341
msgid ""
"The following options are creation options of the classic raster API, or "
"array-level creation options for the multidimensional API (must be "
"prefixed with ``ARRAY:`` using :program:`gdalmdimtranslate`):"
msgstr ""

#: ../../source/drivers/raster/zarr.rst:465
msgid ""
"The following options are creation options of the classic raster API, or "
"dataset-level creation options for the multidimensional API :"
msgstr ""

#: ../../source/drivers/raster/zarr.rst:479
msgid "The following options are creation options of the classic raster API only:"
msgstr ""

#: ../../source/drivers/raster/zarr.rst:511
msgid "Examples"
msgstr ""

#: ../../source/drivers/raster/zarr.rst:513
msgid "Get information on the dataset using the multidimensional tools:"
msgstr ""

#: ../../source/drivers/raster/zarr.rst:520
msgid "Convert a netCDF file to ZARR using the multidimensional tools:"
msgstr ""

#: ../../source/drivers/raster/zarr.rst:527
msgid ""
"Convert a 2D slice (the one at index 0 of the non-2D dimension) of a 3D "
"array to GeoTIFF:"
msgstr ""

#: ../../source/drivers/raster/zarr.rst:535
msgid ""
"The single quoting around the connection string is specific to the Bash "
"shell to make sure that the double quoting is preserved."
msgstr ""

#: ../../source/drivers/raster/zarr.rst:540
msgid "See Also:"
msgstr ""

#: ../../source/drivers/raster/zarr.rst:542
msgid ""
"`Zarr format and its Python implementation "
"<https://zarr.readthedocs.io/en/stable/>`__"
msgstr ""

#: ../../source/drivers/raster/zarr.rst:543
msgid ""
"`(In progress) Zarr V3 specification <https://zarr-"
"specs.readthedocs.io/en/core-protocol-v3.0-dev/>`__"
msgstr ""

#~ msgid "Driver short name"
#~ msgstr ""

#~ msgid "Build dependencies"
#~ msgstr ""

#~ msgid ""
#~ "Built-in by default, but liblz4, "
#~ "libxz (lzma), libzstd and libblosc "
#~ "strongly recommended to get all "
#~ "compressors"
#~ msgstr ""


# SOME DESCRIPTIVE TITLE.
# Copyright (C) 1998-2024
# This file is distributed under the same license as the GDAL package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2024.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: GDAL \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2024-06-23 04:43+0900\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language: en\n"
"Language-Team: en <LL@li.org>\n"
"Plural-Forms: nplurals=2; plural=(n != 1);\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.14.0\n"

#: ../../source/development/rfc/rfc72_pytest.rst:5
msgid "RFC 72: Update autotest suite to use pytest"
msgstr ""

#: ../../source/development/rfc/rfc72_pytest.rst:8
msgid "Author:"
msgstr ""

#: ../../source/development/rfc/rfc72_pytest.rst:8
msgid "Craig de Stigter"
msgstr ""

#: ../../source/development/rfc/rfc72_pytest.rst:9
msgid "Contact:"
msgstr ""

#: ../../source/development/rfc/rfc72_pytest.rst:9
msgid "craig.destigter@koordinates.com"
msgstr ""

#: ../../source/development/rfc/rfc72_pytest.rst:10
msgid "Started:"
msgstr ""

#: ../../source/development/rfc/rfc72_pytest.rst:10
msgid "2018-Sep-27"
msgstr ""

#: ../../source/development/rfc/rfc72_pytest.rst:11
msgid "Status:"
msgstr ""

#: ../../source/development/rfc/rfc72_pytest.rst:11
msgid "*Implemented in GDAL 2.4*"
msgstr ""

#: ../../source/development/rfc/rfc72_pytest.rst:15
msgid "Summary"
msgstr ""

#: ../../source/development/rfc/rfc72_pytest.rst:17
msgid ""
"The document proposes and describes conversion of the existing Python "
"autotest suite to use the `pytest framework "
"<https://docs.pytest.org/en/latest/>`__."
msgstr ""

#: ../../source/development/rfc/rfc72_pytest.rst:21
msgid ""
"Using pytest provides significant productivity gains for writing, reading"
" and debugging python tests, compared with the current home-grown "
"approach."
msgstr ""

#: ../../source/development/rfc/rfc72_pytest.rst:26
msgid "Motivation"
msgstr ""

#: ../../source/development/rfc/rfc72_pytest.rst:28
msgid ""
"The current autotest framework dates back to 2007 (at least), and while "
"reasonably comprehensive (and 186,000 lines of Python) is difficult for "
"developers to use and extend."
msgstr ""

#: ../../source/development/rfc/rfc72_pytest.rst:32
msgid ""
"As a homegrown framework it'll never get any better than the effort GDAL "
"developers put in. For example: reporting, test coverage, "
"parallelisation, resumption, log/output handling, parameterisation."
msgstr ""

#: ../../source/development/rfc/rfc72_pytest.rst:35
msgid ""
"Test failures are typically only as descriptive as \"fail\", determining "
"the cause requires editing the tests."
msgstr ""

#: ../../source/development/rfc/rfc72_pytest.rst:37
msgid "It is difficult to run/rerun individual tests"
msgstr ""

#: ../../source/development/rfc/rfc72_pytest.rst:38
msgid ""
"The tests often assume a set of compile options that may not be valid for"
" the local build."
msgstr ""

#: ../../source/development/rfc/rfc72_pytest.rst:40
msgid ""
"Tests are patched/disabled in various CI environments by scripts outside "
"the test tree. This is opaque to developers working locally."
msgstr ""

#: ../../source/development/rfc/rfc72_pytest.rst:42
msgid ""
"Some tests depend on each other and a specific execution order, making it"
" difficult to debug and extend."
msgstr ""

#: ../../source/development/rfc/rfc72_pytest.rst:44
msgid "Shared functionality is repeated across tests and modules"
msgstr ""

#: ../../source/development/rfc/rfc72_pytest.rst:45
msgid ""
"Tests are typically only written for new functionality, not regressions. "
"(Crudely, from the 2663 commits in the last year only 725 touched the "
"autotest tree)"
msgstr ""

#: ../../source/development/rfc/rfc72_pytest.rst:49
msgid ""
"By adopting an OSS test framework in widespread use we can leverage the "
"ecosystem to provide GDAL with benefits and improvements going forward. "
"The utility of automated testing has been proven for GDAL, and we need to"
" make test writing as easy as possible."
msgstr ""

#: ../../source/development/rfc/rfc72_pytest.rst:55
msgid "Proposal"
msgstr ""

#: ../../source/development/rfc/rfc72_pytest.rst:57
msgid ""
"Port the existing Python autotest suite to use the `pytest framework "
"<https://docs.pytest.org/en/latest/>`__. Why pytest? It's in widespread "
"use, has a wide set of features, is extensible via plugins, and focuses "
"on making writing and debugging tests as easy as possible - minimising "
"boilerplate code and maximising reuse. `This presentation "
"<http://thesoftjaguar.com/pres_pytest.html>`__ (despite dating back to "
"2014) gives a brief overview of the key benefits."
msgstr ""

#: ../../source/development/rfc/rfc72_pytest.rst:65
msgid ""
"Do the bulk of this port using automated code refactoring tools so the "
"autotest suite matches the preferred pytest approach. While pytest does "
"support all sorts of custom test collection and execution methods, in "
"order to increase the benefits to developers going forward we should do a"
" proper conversion. Initial goal is to get the tests ported, remove as "
"much boilerplate as feasible, all while keeping the existing CI green. "
"Future goals are to continue to reduce boilerplate code and increase "
"isolation between tests."
msgstr ""

#: ../../source/development/rfc/rfc72_pytest.rst:74
msgid "At a minimum we still need to preserve the existing ability to:"
msgstr ""

#: ../../source/development/rfc/rfc72_pytest.rst:76
msgid ""
"Run all existing CI tests in all environments using the existing "
"configuration"
msgstr ""

#: ../../source/development/rfc/rfc72_pytest.rst:78
msgid "Run individual test modules"
msgstr ""

#: ../../source/development/rfc/rfc72_pytest.rst:79
msgid "Support existing subprocess/multiprocess tests"
msgstr ""

#: ../../source/development/rfc/rfc72_pytest.rst:80
msgid "Support testing under Python 2.7 & Python 3"
msgstr ""

#: ../../source/development/rfc/rfc72_pytest.rst:81
msgid "Stacktraces for assertion failures"
msgstr ""

#: ../../source/development/rfc/rfc72_pytest.rst:83
msgid ""
"The new test suite will be in place for the GDAL 2.4.0 release in "
"December 2018. Changes will not be backported to the 2.3.x or earlier "
"release branches."
msgstr ""

#: ../../source/development/rfc/rfc72_pytest.rst:87
msgid "References:"
msgstr ""

#: ../../source/development/rfc/rfc72_pytest.rst:89
msgid "`issue #949 <https://github.com/OSGeo/gdal/issues/949>`__."
msgstr ""

#: ../../source/development/rfc/rfc72_pytest.rst:90
msgid ""
"`gdal-dev post <https://lists.osgeo.org/pipermail/gdal-"
"dev/2018-October/049081.html>`__, Oct 2018"
msgstr ""

#: ../../source/development/rfc/rfc72_pytest.rst:95
msgid "Example"
msgstr ""

#: ../../source/development/rfc/rfc72_pytest.rst:97
msgid "A typical existing GDAL python unit test:"
msgstr ""

#: ../../source/development/rfc/rfc72_pytest.rst:124
msgid "Could *eventually* become something like this"
msgstr ""

#: ../../source/development/rfc/rfc72_pytest.rst:135
msgid ""
"It's a lot clearer what it is actually testing, and all support "
"functionality is handled by shared-use fixtures (``gdaladdo`` & "
"``require_files``), including cleanup and conditional-skipping."
msgstr ""

#: ../../source/development/rfc/rfc72_pytest.rst:140
msgid "Test output"
msgstr ""

#: ../../source/development/rfc/rfc72_pytest.rst:142
msgid ""
"Pytest out-of-the-box produces readable output, and is augmented by the "
"``pytest-sugar`` plugin which makes it even nicer:"
msgstr ""

#: ../../source/development/rfc/rfc72_pytest.rst:145
msgid ""
"Successful tests don't produce much output (a single ``.`` or ``âœ“`` per "
"test, by default)"
msgstr ""

#: ../../source/development/rfc/rfc72_pytest.rst:147
msgid ""
"Failed tests produce a traceback. Any logs, stdout and stderr produced by"
" the failing tests are printed too. This is a great start for debugging "
"the cause of the failure."
msgstr ""

#: ../../source/development/rfc/rfc72_pytest.rst:150
msgid "Any expressions used in failing asserts are printed."
msgstr ""

#: ../../source/development/rfc/rfc72_pytest.rst:151
msgid "Test output is clearly colourised (red/green) if the terminal supports it."
msgstr ""

#: ../../source/development/rfc/rfc72_pytest.rst:154
msgid "![](pytest-output-example.png, 626px, center)"
msgstr ""

#: ../../source/development/rfc/rfc72_pytest.rst:157
msgid "Plan Phase 1"
msgstr ""

#: ../../source/development/rfc/rfc72_pytest.rst:159
msgid "Progress at `pull request 963 <https://github.com/OSGeo/gdal/pull/963>`__."
msgstr ""

#: ../../source/development/rfc/rfc72_pytest.rst:162
msgid ""
"Using code automation, convert the existing Python autotest suite to use "
"pytest-style assertions."
msgstr ""

#: ../../source/development/rfc/rfc72_pytest.rst:165
msgid ""
"rename all tests to ``test_*()``. Pytest finds tests by matching names "
"against a regex and this is the default regex."
msgstr ""

#: ../../source/development/rfc/rfc72_pytest.rst:168
msgid ""
"generate assertions from ``post_reason()``/``return 'fail'`` calls where "
"possible"
msgstr ""

#: ../../source/development/rfc/rfc72_pytest.rst:171
msgid "replace all ``skip``/``fail``/``success`` return values"
msgstr ""

#: ../../source/development/rfc/rfc72_pytest.rst:173
msgid ""
"remove extra ``../pymod`` entries from ``sys.path``. All tests now run in"
" a single process"
msgstr ""

#: ../../source/development/rfc/rfc72_pytest.rst:176
msgid "remove ``__main__`` block and ``gdaltest_list`` from test files"
msgstr ""

#: ../../source/development/rfc/rfc72_pytest.rst:178
msgid ""
"these collectively achieve better test collection/selection, output "
"capturing, and improved assertions and reporting"
msgstr ""

#: ../../source/development/rfc/rfc72_pytest.rst:181
msgid ""
"Manually convert the dynamically-generated tests to use `parametrization "
"<https://docs.pytest.org/en/latest/parametrize.html>`__"
msgstr ""

#: ../../source/development/rfc/rfc72_pytest.rst:184
msgid ""
"Ensure the slow/internet tests are still marked as such and skipped by "
"default."
msgstr ""

#: ../../source/development/rfc/rfc72_pytest.rst:187
msgid ""
"Use `pytest-sugar <https://pivotfinland.com/pytest-sugar/>`__ to make "
"test output pretty. Disable it in CI since it doesn't work well with "
"travis CI's output buffering."
msgstr ""

#: ../../source/development/rfc/rfc72_pytest.rst:191
msgid ""
"Move environment-specific test-skipping from CI to the test suite, "
"possibly with additional tag/marks."
msgstr ""

#: ../../source/development/rfc/rfc72_pytest.rst:194
msgid "Ensure the existing CI tests pass & debug any failures"
msgstr ""

#: ../../source/development/rfc/rfc72_pytest.rst:196
msgid "Add documentation and a straightforward install process for pytest itself"
msgstr ""

#: ../../source/development/rfc/rfc72_pytest.rst:200
msgid "Notable changes and their implications"
msgstr ""

#: ../../source/development/rfc/rfc72_pytest.rst:202
msgid ""
"tests are now run with ``cd autotest ; pytest``. (The first time you may "
"need to ``pip install -r requirements.txt`` to install pytest)"
msgstr ""

#: ../../source/development/rfc/rfc72_pytest.rst:204
msgid ""
"All tests now run in a single process (they were previously forked for "
"each test module). This means that:"
msgstr ""

#: ../../source/development/rfc/rfc72_pytest.rst:207
msgid ""
"errors during test collection are now loud, and immediately fail the "
"entire test run with a traceback. Previously things like syntax errors in"
" files and errors at module level were easy to miss."
msgstr ""

#: ../../source/development/rfc/rfc72_pytest.rst:211
msgid "a single segfault will kill the entire test run dead."
msgstr ""

#: ../../source/development/rfc/rfc72_pytest.rst:213
msgid ""
"It's now possible to run individual tests, instead of just entire files. "
"However, tests are *not yet independent of each other*. So that might "
"cause the tests to behave differently than if you ran the whole module."
msgstr ""

#: ../../source/development/rfc/rfc72_pytest.rst:217
msgid ""
"``test_py_scripts.run_py_script`` was modified to always run the script "
"as a subprocess. The stdout capturing of the original method did strange "
"things with pytest. This change broke some tests that relied on passing "
"files in the ``/vsimem/`` root to scripts, so those have been changed to "
"use the ``tmp/`` root instead."
msgstr ""

#: ../../source/development/rfc/rfc72_pytest.rst:222
msgid "no test suite support for Python <2.7"
msgstr ""

#: ../../source/development/rfc/rfc72_pytest.rst:227
msgid "Plan Phase 2 / Future Work"
msgstr ""

#: ../../source/development/rfc/rfc72_pytest.rst:229
msgid ""
"Improving test isolation, so running an entire module at a time isn't "
"required."
msgstr ""

#: ../../source/development/rfc/rfc72_pytest.rst:231
msgid ""
"Removing the global ``gdaltest.<drivername>_drv`` variables and replace "
"them with pytest fixtures."
msgstr ""

#: ../../source/development/rfc/rfc72_pytest.rst:233
msgid "Use fixtures for temporary file handling and cleanup"
msgstr ""

#: ../../source/development/rfc/rfc72_pytest.rst:234
msgid "More automated test skipping based on what's actually compiled."
msgstr ""

#: ../../source/development/rfc/rfc72_pytest.rst:235
msgid "Automated style cleanup using `Black <https://github.com/ambv/black>`__."
msgstr ""

#: ../../source/development/rfc/rfc72_pytest.rst:237
msgid ""
"Consider parallelising test runs by default (there are several `plugins "
"available <https://github.com/pytest-dev/pytest-xdist>`__ for this)"
msgstr ""

#: ../../source/development/rfc/rfc72_pytest.rst:242
msgid "Voting history"
msgstr ""

#: ../../source/development/rfc/rfc72_pytest.rst:244
msgid "Adopted with the following votes from PSC members:"
msgstr ""

#: ../../source/development/rfc/rfc72_pytest.rst:246
msgid "+1 from EvenR, DanielM, HowardB and KurtS"
msgstr ""

#: ../../source/development/rfc/rfc72_pytest.rst:247
msgid "+0 from JukkaR"
msgstr ""


# SOME DESCRIPTIVE TITLE.
# Copyright (C) 1998-2024
# This file is distributed under the same license as the GDAL package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2024.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: GDAL \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2024-06-23 04:43+0900\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language: en\n"
"Language-Team: en <LL@li.org>\n"
"Plural-Forms: nplurals=2; plural=(n != 1);\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.14.0\n"

#: ../../source/development/rfc/rfc51_rasterio_resampling_progress.rst:5
msgid "RFC 51: RasterIO() improvements : resampling and progress callback"
msgstr ""

#: ../../source/development/rfc/rfc51_rasterio_resampling_progress.rst:7
msgid "Author: Even Rouault"
msgstr ""

#: ../../source/development/rfc/rfc51_rasterio_resampling_progress.rst:9
msgid "Contact: even dot rouault at spatialys dot com"
msgstr ""

#: ../../source/development/rfc/rfc51_rasterio_resampling_progress.rst:11
msgid "Status: Adopted, implemented in GDAL 2.0"
msgstr ""

#: ../../source/development/rfc/rfc51_rasterio_resampling_progress.rst:14
msgid "Summary"
msgstr ""

#: ../../source/development/rfc/rfc51_rasterio_resampling_progress.rst:16
msgid ""
"This RFC aims at extending the RasterIO() API to allow specifying a "
"resampling algorithm when doing requests involving subsampling or "
"oversampling. A progress callback can also be specified to be notified of"
" progression and allow the user to interrupt the operation."
msgstr ""

#: ../../source/development/rfc/rfc51_rasterio_resampling_progress.rst:22
msgid "Core changes"
msgstr ""

#: ../../source/development/rfc/rfc51_rasterio_resampling_progress.rst:25
msgid "Addition of GDALRasterIOExtraArg structure"
msgstr ""

#: ../../source/development/rfc/rfc51_rasterio_resampling_progress.rst:27
msgid "A new structure GDALRasterIOExtraArg is added to contain the new options."
msgstr ""

#: ../../source/development/rfc/rfc51_rasterio_resampling_progress.rst:75
msgid ""
"There are several reasons to prefer a structure rather than new "
"parameters to the RasterIO() methods :"
msgstr ""

#: ../../source/development/rfc/rfc51_rasterio_resampling_progress.rst:78
msgid "code readability (GDALDataset::IRasterIO() has already 14 parameters...)"
msgstr ""

#: ../../source/development/rfc/rfc51_rasterio_resampling_progress.rst:80
msgid "allow future extensions without changing the prototype in all drivers"
msgstr ""

#: ../../source/development/rfc/rfc51_rasterio_resampling_progress.rst:81
msgid ""
"to a lesser extent, efficiency: it is common for RasterIO() calls to be "
"chained between generic/specific and/or dataset/rasterband "
"implementations. Passing just the pointer is more efficient."
msgstr ""

#: ../../source/development/rfc/rfc51_rasterio_resampling_progress.rst:85
msgid ""
"The structure is versioned. In the future if further options are added, "
"the new members will be added at the end of the structure and the version"
" number will be incremented. Code in GDAL core&drivers can check the "
"version number to determine which options are available."
msgstr ""

#: ../../source/development/rfc/rfc51_rasterio_resampling_progress.rst:91
msgid "Addition of GDALRIOResampleAlg structure"
msgstr ""

#: ../../source/development/rfc/rfc51_rasterio_resampling_progress.rst:93
msgid "The following resampling algorithms are available :"
msgstr ""

#: ../../source/development/rfc/rfc51_rasterio_resampling_progress.rst:113
msgid ""
"Those new resampling methods can be used by the "
"GDALRasterBand::IRasterIO() default implementation when the size of the "
"buffer (nBufXSize x nBufYSize) is different from the size of the area of "
"interest (nXSize x nYSize). The code heavily relies on the algorithms "
"used for overview computation, with adjustments to be also able to deal "
"with oversampling. Bilinear, CubicSpline and Lanczos are now available in"
" overview computation as well, and rely on the generic infrastructure for"
" convolution computation introduced lately for improved cubic overviews. "
"Some algorithms are not available on raster bands with color palette. A "
"warning will be emitted if an attempt of doing so is done, and nearest "
"neighbour will be used as a fallback."
msgstr ""

#: ../../source/development/rfc/rfc51_rasterio_resampling_progress.rst:125
msgid ""
"The GDAL_RASTERIO_RESAMPLING configuration option can be set as an "
"alternate way of specifying the resampling algorithm. Mainly useful for "
"tests with applications that do not yet use the new API."
msgstr ""

#: ../../source/development/rfc/rfc51_rasterio_resampling_progress.rst:129
msgid ""
"Currently, the new resampling methods are only available for GF_Read "
"operations. The use case for GF_Write operations isn't obvious, but could"
" be added without API changes if needed."
msgstr ""

#: ../../source/development/rfc/rfc51_rasterio_resampling_progress.rst:134
msgid "C++ changes"
msgstr ""

#: ../../source/development/rfc/rfc51_rasterio_resampling_progress.rst:136
msgid ""
"GDALDataset and GDALRasterBand (non virtual) RasterIO() and (virtual) "
"IRasterIO() methods have a new final argument psExtraArg of type "
"GDALRasterIOExtraArg*. This extra argument defaults to NULL for code "
"using GDAL, but is required for all in-tree code, so as to avoid that in-"
"tree code forgets to forwards psExtraArg it might have returned from a "
"caller."
msgstr ""

#: ../../source/development/rfc/rfc51_rasterio_resampling_progress.rst:143
msgid ""
"GDALDataset::RasterIO() and GDALRasterBand::RasterIO() can accept a NULL "
"pointer for that argument in which case they will instantiate a default "
"GDALRasterIOExtraArg structure to be passed to IRasterIO(). Any other "
"code that calls IRasterIO() directly (a few IReadBlock() implementations)"
" should make sure of doing so, so that IRasterIO() can assume that its "
"psExtraArg is not NULL."
msgstr ""

#: ../../source/development/rfc/rfc51_rasterio_resampling_progress.rst:150
msgid ""
"As a provision to be able to deal with very large requests with buffers "
"larger than several gigabytes, the nPixelSpace, nLineSpace and nBandSpace"
" parameters have been promoted from the int datatype to the new GSpacing "
"datatype, which is an alias of a signed 64 bit integer."
msgstr ""

#: ../../source/development/rfc/rfc51_rasterio_resampling_progress.rst:155
msgid ""
"GDALRasterBand::IRasterIO() and GDALDataset::BlockBasedRasterIO() now use"
" the progress callback when available."
msgstr ""

#: ../../source/development/rfc/rfc51_rasterio_resampling_progress.rst:159
msgid "C API changes"
msgstr ""

#: ../../source/development/rfc/rfc51_rasterio_resampling_progress.rst:161
msgid "Only additions :"
msgstr ""

#: ../../source/development/rfc/rfc51_rasterio_resampling_progress.rst:180
msgid ""
"Those are the same as the existing functions with a final "
"GDALRasterIOExtraArg\\* psExtraArg argument, and the spacing parameters "
"promoted to GSpacing."
msgstr ""

#: ../../source/development/rfc/rfc51_rasterio_resampling_progress.rst:185
msgid "Changes in drivers"
msgstr ""

#: ../../source/development/rfc/rfc51_rasterio_resampling_progress.rst:187
msgid ""
"All in-tree drivers that implemented or used RasterIO have been edited to"
" accept the GDALRasterIOExtraArg\\* psExtraArg parameter, and forward it "
"when needed. Those who had a custom RasterIO() implementation now use the"
" progress callback when available."
msgstr ""

#: ../../source/development/rfc/rfc51_rasterio_resampling_progress.rst:191
msgid ""
"VRT: the and elements can accept a 'resampling' attribute. The VRT driver"
" will also set the dfXOff, dfYOff, dfXSize and dfYSize fields of "
"GDALRasterIOExtraArg\\* to have source sub-pixel accuracy, so that "
"GDALRasterBand::IRasterIO() leads to consistent results when operating on"
" a small area of interest or the whole raster. If that was not done, "
"chunking done in GDALDatasetCopyWholeRaster() or other algorithms could "
"lead to repeated lines due to integer rounding issues."
msgstr ""

#: ../../source/development/rfc/rfc51_rasterio_resampling_progress.rst:201
msgid "Changes in utilities"
msgstr ""

#: ../../source/development/rfc/rfc51_rasterio_resampling_progress.rst:203
msgid ""
"gdal_translate: accept a -r parameter to specify the resampling "
"algorithm. Defaults to NEAR. Can be set to bilinear, cubic, cubicspline, "
"lanczos, average or mode. (Under the hood, this sets the new resampling "
"property at the VRT source level.)"
msgstr ""

#: ../../source/development/rfc/rfc51_rasterio_resampling_progress.rst:207
msgid ""
"gdaladdo: -r parameter now accepts bilinear, cubicspline and lanczos as "
"additional algorithms to the existing ones."
msgstr ""

#: ../../source/development/rfc/rfc51_rasterio_resampling_progress.rst:211
msgid "Changes in SWIG bindings"
msgstr ""

#: ../../source/development/rfc/rfc51_rasterio_resampling_progress.rst:213
msgid ""
"For Python and Perl bindings: Band.ReadRaster(), Dataset.ReadRaster() now"
" accept optional resample_alg, callback and callback_data arguments. "
"(untested for Perl, but the existing tests pass)"
msgstr ""

#: ../../source/development/rfc/rfc51_rasterio_resampling_progress.rst:216
msgid ""
"For Python bindings, Band.ReadAsArray() and Dataset.ReadAsArray() now "
"accept optional resample_alg, callback and callback_data arguments."
msgstr ""

#: ../../source/development/rfc/rfc51_rasterio_resampling_progress.rst:220
msgid "Compatibility"
msgstr ""

#: ../../source/development/rfc/rfc51_rasterio_resampling_progress.rst:222
msgid "C API/ABI preserved."
msgstr ""

#: ../../source/development/rfc/rfc51_rasterio_resampling_progress.rst:224
msgid ""
"C++ users of the GDALRasterBand::RasterIO() and GDALDataset::RasterIO() "
"API do not need to change their code, since the new "
"GDALRasterIOExtraArg\\* psExtraArg argument is optional for out-of-tree "
"code."
msgstr ""

#: ../../source/development/rfc/rfc51_rasterio_resampling_progress.rst:229
msgid ""
"Out-of-tree drivers that implement IRasterIO() must be changed to accept "
"the new GDALRasterIOExtraArg\\* psExtraArg argument. Note: failing to do "
"so will be undetected at compile time (due to how C++ virtual method "
"overloading work)."
msgstr ""

#: ../../source/development/rfc/rfc51_rasterio_resampling_progress.rst:234
msgid "Both issues will be mentioned in MIGRATION_GUIDE.TXT"
msgstr ""

#: ../../source/development/rfc/rfc51_rasterio_resampling_progress.rst:237
msgid "Documentation"
msgstr ""

#: ../../source/development/rfc/rfc51_rasterio_resampling_progress.rst:239
msgid "All new methods are documented."
msgstr ""

#: ../../source/development/rfc/rfc51_rasterio_resampling_progress.rst:242
msgid "Testing"
msgstr ""

#: ../../source/development/rfc/rfc51_rasterio_resampling_progress.rst:244
msgid "The various aspects of this RFC are tested in the Python bindings:"
msgstr ""

#: ../../source/development/rfc/rfc51_rasterio_resampling_progress.rst:246
msgid ""
"use of the new options of Band.ReadRaster(), Dataset.ReadRaster(), "
"Band.ReadAsArray() and Dataset.ReadAsArray()."
msgstr ""

#: ../../source/development/rfc/rfc51_rasterio_resampling_progress.rst:248
msgid "resampling algorithms in subsampling and oversampling RasterIO() requests."
msgstr ""

#: ../../source/development/rfc/rfc51_rasterio_resampling_progress.rst:250
msgid "\"-r\" option of gdal_translate"
msgstr ""

#: ../../source/development/rfc/rfc51_rasterio_resampling_progress.rst:253
msgid "Implementation"
msgstr ""

#: ../../source/development/rfc/rfc51_rasterio_resampling_progress.rst:255
msgid ""
"Implementation will be done by Even Rouault (`Spatialys "
"<http://spatialys.com>`__), and sponsored by `R3 GIS "
"<http://r3-gis.com>`__."
msgstr ""

#: ../../source/development/rfc/rfc51_rasterio_resampling_progress.rst:259
msgid ""
"The proposed implementation lies in the \"rasterio\" branch of the "
"`https://github.com/rouault/gdal2/tree/rasterio "
"<https://github.com/rouault/gdal2/tree/rasterio>`__ repository."
msgstr ""

#: ../../source/development/rfc/rfc51_rasterio_resampling_progress.rst:263
msgid ""
"The list of changes : `https://github.com/rouault/gdal2/compare/rasterio "
"<https://github.com/rouault/gdal2/compare/rasterio>`__"
msgstr ""

#: ../../source/development/rfc/rfc51_rasterio_resampling_progress.rst:267
msgid "Voting history"
msgstr ""

#: ../../source/development/rfc/rfc51_rasterio_resampling_progress.rst:269
msgid "+1 from FrankW, JukkaR, HowardB, DanielM, TamasS and EvenR"
msgstr ""


# SOME DESCRIPTIVE TITLE.
# Copyright (C) 1998-2024
# This file is distributed under the same license as the GDAL package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2024.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: GDAL \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2024-06-23 04:43+0900\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language: ja\n"
"Language-Team: ja <LL@li.org>\n"
"Plural-Forms: nplurals=1; plural=0;\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.14.0\n"

#: ../../source/user/multidim_raster_data_model.rst:5
msgid "Multidimensional Raster Data Model"
msgstr ""

#: ../../source/user/multidim_raster_data_model.rst:7
msgid ""
"This document attempts to describe the GDAL multidimensional data model, "
"that has been added in GDAL 3.1. That is the types of information that a "
"GDAL multidimensional dataset can contain, and their semantics."
msgstr ""

#: ../../source/user/multidim_raster_data_model.rst:11
msgid ""
"The multidimensional raster API is a generalization of the traditional "
":ref:`raster_data_model`, to address 3D, 4D or higher dimension datasets."
" Currently, it is limited to basic read/write API, and is not that much "
"plugged into other higher level utilities."
msgstr ""

#: ../../source/user/multidim_raster_data_model.rst:17
msgid ""
"It is strongly inspired from the netCDF and HDF5 API and data models. See"
" `HDF5 format and data model "
"<https://portal.opengeospatial.org/files/81716>`_."
msgstr ""

#: ../../source/user/multidim_raster_data_model.rst:20
msgid ""
"A :cpp:class:`GDALDataset` with multidimensional content contains a root "
":cpp:class:`GDALGroup`."
msgstr ""

#: ../../source/user/multidim_raster_data_model.rst:24
msgid "Group"
msgstr ""

#: ../../source/user/multidim_raster_data_model.rst:26
msgid ""
"A :cpp:class:`GDALGroup` (modelling a `HDF5 Group "
"<https://portal.opengeospatial.org/files/81716#_hdf5_group>`_) is a named"
" container of GDALAttribute, GDALMDArray or other GDALGroup. Hence "
"GDALGroup can describe a hierarchy of objects."
msgstr ""

#: ../../source/user/multidim_raster_data_model.rst:31
msgid "Attribute"
msgstr ""

#: ../../source/user/multidim_raster_data_model.rst:33
msgid ""
"A :cpp:class:`GDALAttribute` (modelling a `HDF5 Attribute "
"<https://portal.opengeospatial.org/files/81716#_hdf5_attribute>`_) has a "
"name and a value, and is typically used to describe a metadata item. The "
"value can be (for the HDF5 format) in the general case a multidimensional"
" array of \"any\" type (in most cases, this will be a single value of "
"string or numeric type)"
msgstr ""

#: ../../source/user/multidim_raster_data_model.rst:39
msgid "Multidimensional array"
msgstr ""

#: ../../source/user/multidim_raster_data_model.rst:41
msgid ""
"A :cpp:class:`GDALMDArray` (modelling a `HDF5 Dataset "
"<https://portal.opengeospatial.org/files/81716#_hdf5_dataset>`_) has a "
"name, a multidimensional array, references a number of GDALDimension, and"
" has a list of GDALAttribute."
msgstr ""

#: ../../source/user/multidim_raster_data_model.rst:45
msgid ""
"Most drivers use the row-major convention for dimensions: that is, when "
"considering that the array elements are stored consecutively in memory, "
"the first dimension is the slowest varying one (in a 2D image, the row), "
"and the last dimension the fastest varying one (in a 2D image, the "
"column). That convention is the default convention used for NumPy arrays,"
" the MEM driver and the HDF5 and netCDF APIs. The GDAL API is mostly "
"agnostic about that convention, except when passing a NULL array as the "
"*stride* parameter for the :cpp:func:`GDALAbstractMDArray::Read` and  "
":cpp:func:`GDALAbstractMDArray::Write` methods. You can refer to `NumPy "
"documentation about multidimensional array indexing order issues "
"<https://docs.scipy.org/doc/numpy/reference/internals.html"
"#multidimensional-array-indexing-order-issues>`_"
msgstr ""

#: ../../source/user/multidim_raster_data_model.rst:55
msgid "a GDALMDArray has also optional properties:"
msgstr ""

#: ../../source/user/multidim_raster_data_model.rst:57
msgid "Coordinate reference system: :cpp:class:`OGRSpatialReference`"
msgstr ""

#: ../../source/user/multidim_raster_data_model.rst:58
msgid "No data value:"
msgstr ""

#: ../../source/user/multidim_raster_data_model.rst:59
msgid "Unit"
msgstr ""

#: ../../source/user/multidim_raster_data_model.rst:60
msgid "Offset, such that unscaled_value = offset + scale * raw_value"
msgstr ""

#: ../../source/user/multidim_raster_data_model.rst:61
msgid "Scale, such that unscaled_value = offset + scale * raw_value"
msgstr ""

#: ../../source/user/multidim_raster_data_model.rst:63
msgid ""
"Number of operations can be applied on an array to get modified views of "
"it: :cpp:func:`GDALMDArray::Transpose()`, "
":cpp:func:`GDALMDArray::GetView()`, etc."
msgstr ""

#: ../../source/user/multidim_raster_data_model.rst:66
msgid ""
"The :cpp:func:`GDALMDArray::Cache()` method can be used to cache the "
"value of a view array into a sidecar file."
msgstr ""

#: ../../source/user/multidim_raster_data_model.rst:70
msgid "Dimension"
msgstr ""

#: ../../source/user/multidim_raster_data_model.rst:72
msgid ""
"A :cpp:class:`GDALDimension` describes a dimension / axis used to index "
"multidimensional arrays. It has the following properties:"
msgstr ""

#: ../../source/user/multidim_raster_data_model.rst:75
msgid "a name"
msgstr ""

#: ../../source/user/multidim_raster_data_model.rst:76
msgid ""
"a size, that is the number of values that can be indexed along the "
"dimension"
msgstr ""

#: ../../source/user/multidim_raster_data_model.rst:78
msgid ""
"a type, which is a string giving the nature of the dimension. Predefined "
"values are: HORIZONTAL_X, HORIZONTAL_Y, VERTICAL, TEMPORAL, PARAMETRIC "
"Other values might be used. Empty value means unknown."
msgstr ""

#: ../../source/user/multidim_raster_data_model.rst:81
msgid ""
"a direction. Predefined values are: EAST, WEST, SOUTH, NORTH, UP, DOWN, "
"FUTURE, PAST Other values might be used. Empty value means unknown."
msgstr ""

#: ../../source/user/multidim_raster_data_model.rst:84
msgid ""
"a reference to a GDALMDArray variable, typically one-dimensional, "
"describing the values taken by the dimension. For a georeferenced "
"GDALMDArray and its X dimension, this will be typically the values of the"
" easting/longitude for each grid point."
msgstr ""

#: ../../source/user/multidim_raster_data_model.rst:90
msgid "Data Type"
msgstr ""

#: ../../source/user/multidim_raster_data_model.rst:92
msgid ""
"A :cpp:class:`GDALExtendedDataType` (modelling a `HDF5 datatype "
"<https://portal.opengeospatial.org/files/81716#_hdf5_datatype>`_) "
"describes the type taken by an individual value of a GDALAttribute or "
"GDALMDArray. Its class can be NUMERIC, STRING or COMPOUND. For NUMERIC, "
"the existing :cpp:enum:`GDALDataType` enumerated values are supported. "
"For COMPOUND, the data type is a list of members, each member being "
"described by a name, a offset in byte in the compound structure and a "
"GDALExtendedDataType."
msgstr ""

#: ../../source/user/multidim_raster_data_model.rst:103
msgid "The HDF5 modelisation allows for more complex datatypes."
msgstr ""

#: ../../source/user/multidim_raster_data_model.rst:107
msgid ""
"HDF5 does not have native data types for complex values whereas "
"GDALDataType does. So a driver may decide to expose a GDT\\_Cxxxx "
"datatype from a HDF5 Compound data type representing a complex value."
msgstr ""

#: ../../source/user/multidim_raster_data_model.rst:112
msgid "Differences with the GDAL 2D raster data model"
msgstr ""

#: ../../source/user/multidim_raster_data_model.rst:114
msgid ""
"The concept of GDALRasterBand is no longer used for multidimensional. "
"This can be modelled as either different GDALMDArray, or using a compound"
" data type."
msgstr ""

#: ../../source/user/multidim_raster_data_model.rst:119
msgid ""
"Bridges between GDAL 2D classic raster data model and multidimensional "
"data model"
msgstr ""

#: ../../source/user/multidim_raster_data_model.rst:121
msgid ""
"The :cpp:func:`GDALRasterBand::AsMDArray` and "
":cpp:func:`GDALMDArray::AsClassicDataset` can be used to respectively "
"convert a raster band to a MD array or a 2D dataset to a MD array."
msgstr ""

#: ../../source/user/multidim_raster_data_model.rst:126
msgid "Applications"
msgstr ""

#: ../../source/user/multidim_raster_data_model.rst:128
msgid ""
"The following applications can be used to inspect and manipulate "
"multidimensional datasets:"
msgstr ""

#: ../../source/user/multidim_raster_data_model.rst:131
msgid ":ref:`gdalmdiminfo`"
msgstr ""

#: ../../source/user/multidim_raster_data_model.rst:132
msgid ":ref:`gdalmdimtranslate`"
msgstr ""


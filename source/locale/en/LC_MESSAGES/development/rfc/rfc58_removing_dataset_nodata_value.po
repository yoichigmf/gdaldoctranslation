# SOME DESCRIPTIVE TITLE.
# Copyright (C) 1998-2024
# This file is distributed under the same license as the GDAL package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2024.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: GDAL \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2024-06-23 04:43+0900\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language: en\n"
"Language-Team: en <LL@li.org>\n"
"Plural-Forms: nplurals=2; plural=(n != 1);\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.14.0\n"

#: ../../source/development/rfc/rfc58_removing_dataset_nodata_value.rst:5
msgid "RFC 58: Removing Dataset Nodata Value"
msgstr ""

#: ../../source/development/rfc/rfc58_removing_dataset_nodata_value.rst:7
msgid "Authors: Sean Gillies"
msgstr ""

#: ../../source/development/rfc/rfc58_removing_dataset_nodata_value.rst:9
msgid "Contact: sean at mapbox.com"
msgstr ""

#: ../../source/development/rfc/rfc58_removing_dataset_nodata_value.rst:11
msgid "Status: Adopted, implemented"
msgstr ""

#: ../../source/development/rfc/rfc58_removing_dataset_nodata_value.rst:13
msgid "Implementation version: 2.1"
msgstr ""

#: ../../source/development/rfc/rfc58_removing_dataset_nodata_value.rst:16
msgid "Summary"
msgstr ""

#: ../../source/development/rfc/rfc58_removing_dataset_nodata_value.rst:18
msgid ""
"This RFC concerns addition of a ``DeleteNoDataValue()`` function to the "
"C++ GDALRasterBand API. This function removes the nodata value of a "
"raster band. When it succeeds, the raster band will have no nodata value."
" When it fails, the nodata value will be unchanged."
msgstr ""

#: ../../source/development/rfc/rfc58_removing_dataset_nodata_value.rst:24
msgid "Rationale"
msgstr ""

#: ../../source/development/rfc/rfc58_removing_dataset_nodata_value.rst:26
msgid ""
"The nodata value has accessors ``GetNoDataValue()`` and "
"``SetNoDataValue()``. For GeoTIFFs, the value is stored in a "
"TIFFTAG_GDAL_NODATA TIFF tag. Newly created GeoTIFF files can have no "
"nodata value (no tag), but once a nodata value is set and stored it can "
"only be given new values, it can not be removed. Nor can it be set to a "
"value outside the range of the data type; for 8-bit data passing ``nan``,"
" ``-inf``, or ``256`` to ``GDALSetNoDataValue()`` has the same effect as "
"passing 0."
msgstr ""

#: ../../source/development/rfc/rfc58_removing_dataset_nodata_value.rst:35
msgid "The problem with un-removable nodata values is this:"
msgstr ""

#: ../../source/development/rfc/rfc58_removing_dataset_nodata_value.rst:37
msgid ""
"Nodata masks (see GDAL RFC 15) can cover up a nodata value but if the "
".msk file gets lost (and this is ever the problem with sidecar files), "
"the nodata value you were hiding is exposed again."
msgstr ""

#: ../../source/development/rfc/rfc58_removing_dataset_nodata_value.rst:40
msgid ""
"Nodata masks are not available everywhere in GDAL, nodata values are the "
"only definition of valid data in some parts of GDAL."
msgstr ""

#: ../../source/development/rfc/rfc58_removing_dataset_nodata_value.rst:43
msgid ""
"The current recommended practice for removing a nodata value is to copy "
"the GeoTIFF using gdal_translate, specifying that the nodata tag not be "
"copied over along with the data. By making the nodata value fully "
"editable and removable we could avoid copying unnecessarily."
msgstr ""

#: ../../source/development/rfc/rfc58_removing_dataset_nodata_value.rst:49
msgid "Changes"
msgstr ""

#: ../../source/development/rfc/rfc58_removing_dataset_nodata_value.rst:51
msgid ""
"The ``virtual CPLErr DeleteNoDataValue()`` method will be added to the "
"GDALRasterBand method in gdal_priv.h (C++ API), and ``CPLErr "
"GDALDeleteRasterNoDataValue()`` to gdal.h (C API)"
msgstr ""

#: ../../source/development/rfc/rfc58_removing_dataset_nodata_value.rst:56
msgid "Updated drivers"
msgstr ""

#: ../../source/development/rfc/rfc58_removing_dataset_nodata_value.rst:58
msgid "The following drivers will be updated: GTiff, MEM, VRT and KEA."
msgstr ""

#: ../../source/development/rfc/rfc58_removing_dataset_nodata_value.rst:60
msgid ""
"For GTiff, the TIFFTAG_GDAL_NODATA TIFF tag is unset if GDAL is built "
"against libtiff 4.X, which is the appropriate behavior. For libtiff 3.X "
"where TIFFUnsetField() does not exist, the tag is set to the empty string"
" : GDAL 2.0 will detect that as the absence of a nodata value, older "
"versions will parse it as 0."
msgstr ""

#: ../../source/development/rfc/rfc58_removing_dataset_nodata_value.rst:66
msgid ""
"The ``GDALPamRasterBand`` class will also be updated (for drivers that "
"have no built-in mechanism nodata mechanism and rely on .aux.xml "
"sidecars). Note that this only removes the tag from the .aux.xml, so in "
"the situation where a driver would have a internal way of storing nodata,"
" but would be opened in read-only mode (so defaulting to PAM), "
"DeleteNoData() would have no effect."
msgstr ""

#: ../../source/development/rfc/rfc58_removing_dataset_nodata_value.rst:74
msgid "SWIG bindings (Python / Java / C# / Perl) changes"
msgstr ""

#: ../../source/development/rfc/rfc58_removing_dataset_nodata_value.rst:76
msgid "The DeleteNoDataValue() method is added to the RasterBand object."
msgstr ""

#: ../../source/development/rfc/rfc58_removing_dataset_nodata_value.rst:79
msgid "Utilities"
msgstr ""

#: ../../source/development/rfc/rfc58_removing_dataset_nodata_value.rst:81
msgid "The gdal_edit.py script is enhanced with a -unsetnodata option."
msgstr ""

#: ../../source/development/rfc/rfc58_removing_dataset_nodata_value.rst:84
msgid "Documentation"
msgstr ""

#: ../../source/development/rfc/rfc58_removing_dataset_nodata_value.rst:86
msgid "The new method and function are documented."
msgstr ""

#: ../../source/development/rfc/rfc58_removing_dataset_nodata_value.rst:89
msgid "Test Suite"
msgstr ""

#: ../../source/development/rfc/rfc58_removing_dataset_nodata_value.rst:91
msgid "The tests of the updated drivers test the effect of the new method."
msgstr ""

#: ../../source/development/rfc/rfc58_removing_dataset_nodata_value.rst:94
msgid "Compatibility Issues"
msgstr ""

#: ../../source/development/rfc/rfc58_removing_dataset_nodata_value.rst:96
msgid ""
"None for the C API. ABI change for the C++ API because of introduction of"
" a new virtual method."
msgstr ""

#: ../../source/development/rfc/rfc58_removing_dataset_nodata_value.rst:100
msgid "Related ticket"
msgstr ""

#: ../../source/development/rfc/rfc58_removing_dataset_nodata_value.rst:102
msgid "#2020 mentions the issue."
msgstr ""

#: ../../source/development/rfc/rfc58_removing_dataset_nodata_value.rst:105
msgid "Implementation"
msgstr ""

#: ../../source/development/rfc/rfc58_removing_dataset_nodata_value.rst:107
msgid "Implementation will be done by Even Rouault and be sponsored by Mapbox."
msgstr ""

#: ../../source/development/rfc/rfc58_removing_dataset_nodata_value.rst:109
msgid ""
"A proposed implementation is available in "
"`https://github.com/OSGeo/gdal/compare/trunk...rouault:rfc58_removing_nodata_value"
" "
"<https://github.com/OSGeo/gdal/compare/trunk...rouault:rfc58_removing_nodata_value>`__"
msgstr ""

#: ../../source/development/rfc/rfc58_removing_dataset_nodata_value.rst:113
msgid "Voting history"
msgstr ""

#: ../../source/development/rfc/rfc58_removing_dataset_nodata_value.rst:115
msgid "+1 from EvenR, HowardB, DanielM and JukkaR"
msgstr ""


# SOME DESCRIPTIVE TITLE.
# Copyright (C) 1998-2024
# This file is distributed under the same license as the GDAL package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2024.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: GDAL \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2024-06-26 18:20+0900\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language: ja\n"
"Language-Team: ja <LL@li.org>\n"
"Plural-Forms: nplurals=1; plural=0;\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.14.0\n"

#: ../../source/programs/gdalcompare.rst:5
msgid "gdalcompare"
msgstr ""

#: ../../source/programs/gdalcompare.rst:9
msgid "Compare two images."
msgstr ""

#: ../../source/programs/gdalcompare.rst:14
msgid "Synopsis"
msgstr ""

#: ../../source/programs/gdalcompare.rst:26
msgid "Description"
msgstr ""

#: ../../source/programs/gdalcompare.rst:28
msgid ""
":program:`gdalcompare` compares two GDAL supported datasets and reports "
"the differences. In addition to reporting differences to the standard "
"output the script will also return the difference count in its exit "
"value."
msgstr ""

#: ../../source/programs/gdalcompare.rst:33
msgid ""
"Image pixels, and various metadata are checked. There is also a byte by "
"byte comparison done which will count as one difference. So if it is only"
" important that the GDAL visible data is identical a difference count of "
"1 (the binary difference) should be considered acceptable."
msgstr ""

#: ../../source/programs/gdalcompare.rst:40
msgid ""
"gdalcompare is a Python utility, and is only available if GDAL Python "
"bindings are available."
msgstr ""

#: ../../source/programs/options/help.rst:3
msgid "Show this help message and exit"
msgstr ""

#: ../../source/programs/options/help_general.rst:3
msgid ""
"Gives a brief usage message for the generic GDAL commandline options and "
"exit."
msgstr ""

#: ../../source/programs/gdalcompare.rst:50
msgid ""
"Whether to output the difference in pixel content in a TIFF file in the "
"current directory."
msgstr ""

#: ../../source/programs/gdalcompare.rst:57
msgid "Whether to skip exact comparison of binary content."
msgstr ""

#: ../../source/programs/gdalcompare.rst:63
msgid "Whether to skip comparison of overviews."
msgstr ""

#: ../../source/programs/gdalcompare.rst:69
msgid "Whether to skip comparison of GEOLOCATION metadata domain."
msgstr ""

#: ../../source/programs/gdalcompare.rst:75
msgid "Whether to skip comparison of geotransform matrix."
msgstr ""

#: ../../source/programs/gdalcompare.rst:81
msgid "Whether to skip comparison of metadata"
msgstr ""

#: ../../source/programs/gdalcompare.rst:87
msgid ""
"Whether to skip comparison of Rational Polynomial Coefficients (RPC) "
"metadata domain."
msgstr ""

#: ../../source/programs/gdalcompare.rst:93
msgid "Whether to skip comparison of spatial reference systems (SRS)."
msgstr ""

#: ../../source/programs/gdalcompare.rst:97
msgid ""
"If this flag is passed the script will compare all subdatasets that are "
"part of the dataset, otherwise subdatasets are ignored."
msgstr ""

#: ../../source/programs/gdalcompare.rst:102
msgid "The file that is considered correct, referred to as the golden file."
msgstr ""

#: ../../source/programs/gdalcompare.rst:106
msgid "The file being compared to the golden file, referred to as the new file."
msgstr ""

#: ../../source/programs/gdalcompare.rst:109
msgid ""
"Note that the :program:`gdalcompare` script (like all the other scripts) "
"can also be called as a library from python code: `from osgeo_utils "
"import gdalcompare`. The primary entry point is "
"`gdalcompare.compare_db()` which takes a golden `gdal.Dataset` and a new "
"`gdal.Dataset` as arguments and returns a difference count (excluding the"
" binary comparison). The `gdalcompare.compare_sds()` entry point can be "
"used to compare subdatasets."
msgstr ""

#: ../../source/programs/gdalcompare.rst:118
msgid "Examples"
msgstr ""

#~ msgid "gdalcompare.py"
#~ msgstr ""

#~ msgid ""
#~ "The :program:`gdalcompare.py` script compares "
#~ "two GDAL supported datasets and reports"
#~ " the differences. In addition to "
#~ "reporting differences to the standard "
#~ "output the script will also return "
#~ "the difference count in its exit "
#~ "value."
#~ msgstr ""

#~ msgid ""
#~ "Note that the :program:`gdalcompare.py` script"
#~ " (like all the other scripts) can "
#~ "also be called as a library from"
#~ " python code: `from osgeo_utils import "
#~ "gdalcompare`. The primary entry point is"
#~ " `gdalcompare.compare_db()` which takes a "
#~ "golden `gdal.Dataset` and a new "
#~ "`gdal.Dataset` as arguments and returns "
#~ "a difference count (excluding the binary"
#~ " comparison). The `gdalcompare.compare_sds()` "
#~ "entry point can be used to compare"
#~ " subdatasets."
#~ msgstr ""


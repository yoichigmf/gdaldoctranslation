# SOME DESCRIPTIVE TITLE.
# Copyright (C) 1998-2024
# This file is distributed under the same license as the GDAL package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2024.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: GDAL \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2024-06-29 04:11+0900\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language: ja\n"
"Language-Team: ja <LL@li.org>\n"
"Plural-Forms: nplurals=1; plural=0;\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.14.0\n"

#: ../../source/user/configoptions.rst:5
msgid "Configuration options"
msgstr "構成オプション"

#: ../../source/user/configoptions.rst:7
msgid ""
"This page discusses runtime configuration options for GDAL. These are "
"distinct from options to the build-time configure script. Runtime "
"configuration options apply on all platforms, and are evaluated at "
"runtime. They can be set programmatically, by commandline switches or in "
"the environment by the user."
msgstr ""

#: ../../source/user/configoptions.rst:12
msgid ""
"Configuration options are normally used to alter the default behavior of "
"GDAL/OGR drivers and in some cases the GDAL/OGR core. They are "
"essentially global variables the user can set."
msgstr ""

#: ../../source/user/configoptions.rst:17
msgid "How to set configuration options?"
msgstr "どのように構成オプションを設定できますか?"

#: ../../source/user/configoptions.rst:19
msgid ""
"One example of a configuration option is the :config:`GDAL_CACHEMAX` "
"option. It controls the size of the GDAL block cache, in megabytes. It "
"can be set in the environment on Unix (bash/bourne) shell like this:"
msgstr ""

#: ../../source/user/configoptions.rst:29
msgid "In a DOS/Windows command shell it is done like this:"
msgstr ""

#: ../../source/user/configoptions.rst:35
msgid ""
"It can also be set on the commandline for most GDAL and OGR utilities "
"with the ``--config`` switch, though in a few cases these switches are "
"not evaluated in time to affect behavior."
msgstr ""

#: ../../source/user/configoptions.rst:43
msgid ""
"Since GDAL 3.9, it is also possible to set a config option in a more "
"conventional way by using a single ``<NAME>``=``<VALUE>`` command line "
"string instead of having ``<NAME>`` and ``<VALUE>`` as two space-"
"separated strings."
msgstr ""

#: ../../source/user/configoptions.rst:51
msgid ""
"In C/C++ configuration switches can be set programmatically with "
":cpp:func:`CPLSetConfigOption`:"
msgstr ""

#: ../../source/user/configoptions.rst:60
msgid ""
"Normally a configuration option applies to all threads active in a "
"program, but they can be limited to only the current thread with "
":cpp:func:`CPLSetThreadLocalConfigOption`"
msgstr ""

#: ../../source/user/configoptions.rst:68
msgid ""
"For boolean options, the values YES, TRUE or ON can be used to turn the "
"option on; NO, FALSE or OFF to turn it off."
msgstr ""

#: ../../source/user/configoptions.rst:75
msgid "GDAL configuration file"
msgstr ""

#: ../../source/user/configoptions.rst:79
msgid ""
"On driver registration, loading of configuration is attempted from a set "
"of predefined files."
msgstr ""

#: ../../source/user/configoptions.rst:82
msgid ""
"The following locations are tried by "
":cpp:func:`CPLLoadConfigOptionsFromPredefinedFiles`:"
msgstr ""

#: ../../source/user/configoptions.rst:84
msgid ""
"the location pointed by the environment variable (or configuration "
"option) :config:`GDAL_CONFIG_FILE` is attempted first. If it is set, the "
"next steps are not attempted"
msgstr ""

#: ../../source/user/configoptions.rst:88
msgid ""
"for Unix builds, the location pointed by ${sysconfdir}/gdal/gdalrc is "
"first attempted (where ${sysconfdir} evaluates to ${prefix}/etc, unless "
"the ``--sysconfdir`` switch of ./configure has been invoked). Then  "
"$(HOME)/.gdal/gdalrc is tried, potentially overriding what was loaded "
"with the sysconfdir"
msgstr ""

#: ../../source/user/configoptions.rst:93
msgid ""
"for Windows builds, the location pointed by $(USERPROFILE)/.gdal/gdalrc "
"is attempted."
msgstr ""

#: ../../source/user/configoptions.rst:96
msgid ""
"A configuration file is a text file in a .ini style format. Lines "
"starting with `#` are comment lines."
msgstr ""

#: ../../source/user/configoptions.rst:99
msgid ""
"The file may contain a ``[configoptions]`` section, that lists "
"configuration options and their values."
msgstr ""

#: ../../source/user/configoptions.rst:102
#: ../../source/user/configoptions.rst:136
#: ../../source/user/virtual_file_systems.rst:14
msgid "Example:"
msgstr ""

#: ../../source/user/configoptions.rst:111
msgid ""
"Configuration options set in the configuration file can later be "
"overridden by calls to :cpp:func:`CPLSetConfigOption` or  "
":cpp:func:`CPLSetThreadLocalConfigOption`, or through the ``--config`` "
"command line switch."
msgstr ""

#: ../../source/user/configoptions.rst:115
msgid ""
"The value of environment variables set before GDAL starts will be used "
"instead of the value set in the configuration files, unless, starting "
"with GDAL 3.6, the configuration file starts with a ``[directives]`` "
"section that contains a ``ignore-env-variables=yes`` entry."
msgstr ""

#: ../../source/user/configoptions.rst:129
msgid ""
"Starting with GDAL 3.5, a configuration file can also contain credentials"
" (or more generally options related to a virtual file system) for a given"
" path prefix, that can also be set with "
":cpp:func:`VSISetPathSpecificOption`. Credentials should be put under a "
"``[credentials]`` section, and for each path prefix, under a relative "
"subsection whose name starts with \"[.\" (e.g. "
"\"[.some_arbitrary_name]\"), and whose first key is \"path\"."
msgstr ""

#: ../../source/user/configoptions.rst:154
msgid "Global configuration options"
msgstr ""

#: ../../source/user/configoptions.rst:157
msgid "Logging"
msgstr ""

#: ../../source/user/configoptions.rst:175
msgid ""
"At the commandline this can also be set with --debug <value> as well as "
"with --config CPL_DEBUG <value>."
msgstr ""

#: ../../source/user/configoptions.rst:202
msgid "Performance and caching"
msgstr ""

#: ../../source/user/configoptions.rst:257
msgid ""
"Number of datasets that can be opened simultaneously by the GDALProxyPool"
" mechanism (used by VRT for example). Can be increased to get better "
"random I/O performance with VRT mosaics made of numerous underlying "
"raster files. Be careful: on Linux systems, the number of file handles "
"that can be opened by a process is generally limited to 1024. This is "
"currently clamped between 2 and 1000."
msgstr ""

#: ../../source/user/configoptions.rst:269
#, python-format
msgid ""
"The value can also be suffixed with ``MB`` or ``GB`` to respectively "
"express it in megabytes or gigabytes. The default value is 25% of the "
"usable physical RAM minus the :config:`GDAL_CACHEMAX` value."
msgstr ""

#: ../../source/user/configoptions.rst:278
msgid ""
"Size of the swath when copying raster data from one dataset to another "
"one (in bytes). Should not be smaller than :config:`GDAL_CACHEMAX`."
msgstr ""

#: ../../source/user/configoptions.rst:292
msgid ""
"If set to EMPTY_DIR, only the file that is being opened will be seen when"
" a GDAL driver will request sibling files, so this is a way to disable "
"loading side-car/auxiliary files."
msgstr ""

#: ../../source/user/configoptions.rst:312
msgid ""
"When enabled, this cache is used for most I/O in GDAL, including local "
"files."
msgstr ""

#: ../../source/user/configoptions.rst:323
msgid "Driver management"
msgstr ""

#: ../../source/user/configoptions.rst:330
msgid ""
"This option can be used to unregister one or several GDAL drivers. This "
"can be useful when a driver tries to open a dataset that it should not "
"recognize, or when several drivers are built-in that can open the same "
"datasets (for example JP2MrSID, JP2ECW, JPEG2000 and JP2KAK for JPEG2000 "
"datasets). The value of this option must be a space delimited list of the"
" short name of the GDAL drivers to unregister."
msgstr ""

#: ../../source/user/configoptions.rst:337
msgid ""
"This option must be set before calling :cpp:func:`GDALAllRegister`, or an"
" explicit call to :cpp:func:`GDALDriverManager::AutoSkipDrivers` will be "
"required."
msgstr ""

#: ../../source/user/configoptions.rst:354
msgid ""
"This function will automatically load drivers from shared libraries. It "
"searches the \"driver path\" for .so (or .dll) files that start with the "
"prefix \"gdal_X.so\". It then tries to load them and then tries to call a"
" function within them called GDALRegister_X() where the 'X' is the same "
"as the remainder of the shared library basename ('X' is case sensitive), "
"or failing that to call GDALRegisterMe()."
msgstr ""

#: ../../source/user/configoptions.rst:361
msgid ""
"There are a few rules for the driver path. If the ``GDAL_DRIVER_PATH`` "
"environment variable it set, it is taken to be a list of directories to "
"search separated by colons on UNIX, or semi-colons on Windows. Otherwise "
"the /usr/local/lib/gdalplugins directory, and (if known) the "
"lib/gdalplugins subdirectory of the gdal home directory are searched on "
"UNIX and $(BINDIR)\\gdalplugins on Windows."
msgstr ""

#: ../../source/user/configoptions.rst:368
msgid ""
"Auto loading can be completely disabled by setting the "
"``GDAL_DRIVER_PATH`` config option to \"disable\"."
msgstr ""

#: ../../source/user/configoptions.rst:371
msgid ""
"This option must be set before calling :cpp:func:`GDALAllRegister`, or an"
" explicit call to :cpp:func:`GDALDriverManager::AutoLoadDrivers` will be "
"required."
msgstr ""

#: ../../source/user/configoptions.rst:381
msgid "General options"
msgstr ""

#: ../../source/user/configoptions.rst:389
msgid ""
"This option is read by the GDAL and OGR driver registration functions. It"
" is used to expand EPSG codes into their description in the OSR model "
"(WKT based)."
msgstr ""

#: ../../source/user/configoptions.rst:393
msgid ""
"On some builds (Unix), the value can be hard-coded at compilation time to"
" point to the path after installation (/usr/share/gdal/data for example)."
" On Windows platform, this option must be generally declared."
msgstr ""

#: ../../source/user/configoptions.rst:487
msgid ""
"Can be set to YES to use Erdas Imagine format (.aux) as overview format. "
"See :program:`gdaladdo` documentation."
msgstr ""

#: ../../source/user/configoptions.rst:498
msgid "Vector related options"
msgstr ""

#: ../../source/user/configoptions.rst:508
msgid ""
"The approximation of arcs as linestrings is done by splitting the arcs "
"into subarcs of no more than the angle specified by this option."
msgstr ""

#: ../../source/user/configoptions.rst:533
msgid ""
"``DEFAULT``: perform a full analysis of the topological relationships "
"between all rings, classifying them as shells or holes and associating "
"them according to the OGC Simple Features convention. If the topological "
"analysis determines that a valid geometry cannot be constructed, the "
"result will be the same as with :config:`OGR_ORGANIZE_POLYGONS=SKIP`."
msgstr ""

#: ../../source/user/configoptions.rst:539
msgid ""
"``ONLY_CCW``: assume that rings with clockwise orientation represent "
"shells and rings with counterclockwise orientation represent holes. "
"Perform a limited topological analysis to determine which shell contains "
"each hole. The Shapefile driver defaults to this method."
msgstr ""

#: ../../source/user/configoptions.rst:544
msgid ""
"``CCW_INNER_JUST_AFTER_CW_OUTER``: assume that rings with clockwise "
"orientation represent shells and rings with counterclockwise orientation "
"represent holes and immediately follow the outer ring with which they are"
" associated."
msgstr ""

#: ../../source/user/configoptions.rst:549
msgid ""
"``SKIP``: avoid attempting to classify rings as shells or holes. A single"
" geometry (Polygon/MultiPolygon/CurvePolygon/MultiSurface) will be "
"returned with all polygons as top-level polygons. If non-polygonal "
"elements are present, a GeometryCollection will be returned."
msgstr ""

#: ../../source/user/configoptions.rst:569
msgid ""
"Those XML based drivers should write UTF8 content. If they are provided "
"with non UTF8 content, they will replace each non-ASCII character by '?' "
"when OGR_FORCE_ASCII=YES."
msgstr ""

#: ../../source/user/configoptions.rst:573
msgid ""
"Set to NO to preserve the content, but beware that the resulting XML file"
" will not be valid and will require manual edition of the encoding in the"
" XML header."
msgstr ""

#: ../../source/user/configoptions.rst:592
msgid "Networking options"
msgstr ""

#: ../../source/user/configoptions.rst:601
msgid "For example:"
msgstr ""

#: ../../source/user/configoptions.rst:870
msgid ""
"When using NTLM, you can set the domain by prepending it to the user name"
" and separating the domain and name with a forward (/) or backward slash "
"(\\). Like this: \"domain/user:password\" or \"domain\\user:password\". "
"Some HTTP servers (on Windows) support this style even for Basic "
"authentication."
msgstr ""

#: ../../source/user/configoptions.rst:897
msgid ""
"GDAL respects the environment variables http_proxy, ftp_proxy, all_proxy "
"etc, if any of those are set. GDAL_HTTP_PROXY option does however "
"override any possibly set environment variables."
msgstr ""

#: ../../source/user/configoptions.rst:943
msgid "Persistent Auxiliary Metadata (PAM) options"
msgstr ""

#: ../../source/user/configoptions.rst:963
msgid "PROJ options"
msgstr ""

#: ../../source/user/configoptions.rst:972
msgid ""
"This option can be used to control the behavior of gdalwarp when warping "
"global datasets or when transforming from/to polar projections, which "
"causes coordinate discontinuities. See "
"http://trac.osgeo.org/gdal/ticket/2305."
msgstr ""

#: ../../source/user/configoptions.rst:976
msgid ""
"The background is that PROJ does not guarantee that converting from "
"src_srs to dst_srs and then from dst_srs to src_srs will yield to the "
"initial coordinates. This can lead to errors in the computation of the "
"target bounding box of gdalwarp, or to visual artifacts."
msgstr ""

#: ../../source/user/configoptions.rst:981
msgid ""
"If CHECK_WITH_INVERT_PROJ option is not set, gdalwarp will check that the"
" the computed coordinates of the edges of the target image are in the "
"validity area of the target projection. If they are not, it will retry "
"computing them by setting :config:`CHECK_WITH_INVERT_PROJ=TRUE` that "
"forces ogrct.cpp to check the consistency of each requested projection "
"result with the invert projection."
msgstr ""

#: ../../source/user/configoptions.rst:987
msgid "If set to NO, gdalwarp will not attempt to use the invert projection."
msgstr ""

#: ../../source/user/configoptions.rst:994
msgid ""
"Used in combination with :config:`CHECK_WITH_INVERT_PROJ=TRUE`. Define "
"the acceptable threshold used to check if the roundtrip from src_srs to "
"dst_srs and from dst_srs to srs_srs yield to the initial coordinates. The"
" value must be expressed in the units of the source SRS (typically "
"degrees for a geographic SRS, meters for a projected SRS)"
msgstr ""

#: ../../source/user/configoptions.rst:1007
msgid ""
"Can be set to YES to remove points that cannot be reprojected. This can "
"for example help reproject lines that have an extremity at a pole, when "
"the reprojection does not support coordinates at poles."
msgstr ""

#: ../../source/user/configoptions.rst:1071
msgid "List of configuration options and where they are documented"
msgstr ""

#: ../../source/user/coordinate_epoch.rst:5
msgid "Coordinate epoch support"
msgstr ""

#: ../../source/user/coordinate_epoch.rst:10
msgid "Dynamic CRS and coordinate epoch"
msgstr ""

#: ../../source/user/coordinate_epoch.rst:12
msgid ""
"This document is intended to document the support for coordinate epoch, "
"linked to dynamic CRS."
msgstr ""

#: ../../source/user/coordinate_epoch.rst:15
msgid ""
"In a dynamic CRS, coordinates of a point on the surface of the Earth may "
"change with time. To be unambiguous the coordinates must always be "
"qualified with the epoch at which they are valid. The coordinate epoch is"
" not necessarily the epoch at which the observation was collected."
msgstr ""

#: ../../source/user/coordinate_epoch.rst:20
msgid ""
"Examples of dynamic CRS are ``WGS 84 (G1762)``, ``ITRF2014``, "
"``ATRF2014``."
msgstr ""

#: ../../source/user/coordinate_epoch.rst:22
msgid ""
"The generic EPSG:4326 WGS 84 CRS is also considered dynamic, although it "
"is not recommended to use it due to being based on a datum ensemble whose"
" positional accuracy is 2 meters, but prefer one of its realizations, "
"such as WGS 84 (G1762)"
msgstr ""

#: ../../source/user/coordinate_epoch.rst:26
msgid ""
"The :cpp:func:`OGRSpatialReference::IsDynamic` method can be used to test"
" if a CRS is a dynamic one."
msgstr ""

#: ../../source/user/coordinate_epoch.rst:29
msgid ""
"The :cpp:func:`OGRSpatialReference::SetCoordinateEpoch` and "
":cpp:func:`OGRSpatialReference::GetCoordinateEpoch` methods can be used "
"to set/retrieve a coordinate epoch associated with a CRS. The coordinate "
"epoch is expressed as a decimal year (e.g. 2021.3 for April 21, 2021)."
msgstr ""

#: ../../source/user/coordinate_epoch.rst:34
msgid ""
"Formally, the coordinate epoch of an observation belongs to the "
"observation. However, almost all formats do not allow for storing per-"
"observation epoch, and typical usage is a set of observations with the "
"same epoch. Therefore we store the epoch as property of the CRS, and "
"assume that it is valid for every observation. This choice eases "
"processing, storage and format complexity for most usage. For now, this "
"means that a dataset containing observations or points with different "
"epochs cannot be handled."
msgstr ""

#: ../../source/user/coordinate_epoch.rst:42
msgid ""
"For vector formats, per-geometry coordinate epoch could also make sense, "
"but as most formats only support a per-layer CRS, we also for now limit "
"support of coordinate epoch at the layer level. The underlying coordinate"
" transformation mechanics can support per-vertex coordinate epoch."
msgstr ""

#: ../../source/user/coordinate_epoch.rst:48
msgid "Support in raster and vector formats"
msgstr ""

#: ../../source/user/coordinate_epoch.rst:50
msgid ""
"At time of writing, no formats handled by GDAL/OGR have a standardized "
"way of encoding a coordinate epoch. We consequently have made choices how"
" to encode it, with the aim of being as much as possible backward "
"compatible with existing readers. Those encodings might change if "
"corresponding official specifications evolve to take this concept into "
"account. The coordinate epoch is only written when attached to the SRS of"
" the layer/dataset that is created."
msgstr ""

#: ../../source/user/coordinate_epoch.rst:59
msgid "FlatGeoBuf"
msgstr ""

#: ../../source/user/coordinate_epoch.rst:61
msgid ""
"The coordinate epoch is encoded as a WKT:2019 string using the ``EPOCH`` "
"subnode of the `COORDINATEMETADATA "
"<http://docs.opengeospatial.org/is/18-010r7/18-010r7.html#130>`__ "
"construct, set in the ``Crs.wkt`` header field of the FlatGeoBuf file."
msgstr ""

#: ../../source/user/coordinate_epoch.rst:82
msgid ""
"Such construct will not be understood by GDAL < 3.4, but if the CRS has "
"an associated EPSG code, this will not cause issues in those older GDAL "
"versions."
msgstr ""

#: ../../source/user/coordinate_epoch.rst:87
msgid "GeoPackage vector/raster"
msgstr ""

#: ../../source/user/coordinate_epoch.rst:89
msgid ""
"Each vector/raster table which has an associated coordinate epoch encodes"
" it in the ``epoch`` column of the ``gpkg_spatial_ref_sys`` table, using "
"an extended version of the CRS WKT extension "
"(https://github.com/opengeospatial/geopackage/pull/600)."
msgstr ""

#: ../../source/user/coordinate_epoch.rst:94
msgid "GeoTIFF"
msgstr ""

#: ../../source/user/coordinate_epoch.rst:96
msgid ""
"The coordinate epoch is encoded as a new GeoTIFF GeoKey, "
"``CoordinateEpochGeoKey`` of code 5120 and type DOUBLE."
msgstr ""

#: ../../source/user/coordinate_epoch.rst:125
#: ../../source/user/virtual_file_systems.rst:334
msgid "JPEG2000"
msgstr ""

#: ../../source/user/coordinate_epoch.rst:127
msgid "GeoJP2 boxes use the above mentioned GeoTIFF encoding."
msgstr ""

#: ../../source/user/coordinate_epoch.rst:131
msgid "Persistent Auxiliary Metadata (.aux.xml)"
msgstr ""

#: ../../source/user/coordinate_epoch.rst:133
#: ../../source/user/coordinate_epoch.rst:146
msgid ""
"The coordinate epoch is encoded as ``coordinateEpoch`` attribute of the "
"``SRS`` element."
msgstr ""

#: ../../source/user/coordinate_epoch.rst:144
msgid "GDAL VRT"
msgstr ""

#: ../../source/user/coordinate_epoch.rst:159
msgid "Support in utilities"
msgstr ""

#: ../../source/user/coordinate_epoch.rst:161
msgid ""
":program:`gdalinfo` and :program:`ogrinfo` report the coordinate epoch, "
"when attached to a dataset/layer SRS."
msgstr ""

#: ../../source/user/coordinate_epoch.rst:164
msgid ""
":program:`gdal_edit.py` has a ``-a_coord_epoch`` option to define the "
"epoch of a dataset in place."
msgstr ""

#: ../../source/user/coordinate_epoch.rst:166
msgid ""
":program:`gdal_translate` and :program:`ogr2ogr` have a "
"``-a_coord_epoch`` option to be used together with ``-a_srs``, and "
"otherwise preserve the coordinate epoch in the output SRS from the source"
" SRS when no SRS related options are specified."
msgstr ""

#: ../../source/user/coordinate_epoch.rst:170
msgid ""
":program:`gdalwarp` and :program:`ogr2ogr` have a ``-s_coord_epoch`` "
"option to be used together with ``-s_srs`` (resp. ``-t_coord_epoch`` "
"option to be used together with ``-t_srs``) to override/set the "
"coordinate epoch of the source (resp. target) CRS."
msgstr ""

#: ../../source/user/coordinate_epoch.rst:174
msgid ""
"Before PROJ 9.4, ``-s_coord_epoch`` and ``-t_coord_epoch`` were mutually "
"exclusive, due to lack of support for transformations between two dynamic"
" CRS."
msgstr ""

#: ../../source/user/coordinate_epoch.rst:177
msgid ""
":program:`gdalwarp` preserves the coordinate epoch in the output SRS when"
" appropriate."
msgstr ""

#: ../../source/user/coordinate_epoch.rst:181
msgid "Support in coordinate transformation"
msgstr ""

#: ../../source/user/coordinate_epoch.rst:183
msgid ""
"The :cpp:class:`OGRCoordinateTransformation` class can perform time-"
"dependent transformations between a static and dynamic CRS based on the "
"coordinate epoch passed per vertex."
msgstr ""

#: ../../source/user/coordinate_epoch.rst:187
msgid ""
"It can also take into account the coordinate epoch associated with a "
"dynamic CRS, when doing time-dependent transformations between a static "
"and dynamic CRS. The :config:`OGR_CT_USE_SRS_COORDINATE_EPOCH` "
"configuration option can be set to ``NO`` to disable using the coordinate"
" epoch associated with the source or target CRS."
msgstr ""

#: ../../source/user/coordinate_epoch.rst:193
msgid ""
"If a per-vertex time is specified, it overrides the one associated with "
"the CRS."
msgstr ""

#: ../../source/user/gdal_python_utilities.rst:5
msgid "GDAL Python Utilities"
msgstr ""

#: ../../source/user/gdal_python_utilities.rst:7
msgid ""
"The GDAL python utilities are included with GDAL. If you've installed "
"GDAL you already have them. However you may want to use a newer or older "
"version of the utilities without changing GDAL. This is where **gdal-"
"utils** comes in."
msgstr ""

#: ../../source/user/gdal_python_utilities.rst:12
msgid ""
"**gdal-utils**: is the GDAL Python Utilities *distribution*. This is what"
" you install. Its home page is https://pypi.org/project/gdal-utils/ . "
"Install with ``pip install gdal-utils``."
msgstr ""

#: ../../source/user/gdal_python_utilities.rst:16
msgid ""
"**osgeo_utils**: is the python *package*. This is what you use in your "
"code after installing, e.g. ``from osgeo_utils import ...``. If you're "
"not writing code, ignore it."
msgstr ""

#: ../../source/user/gdal_python_utilities.rst:20
msgid "Commonly used utilities include:"
msgstr ""

#: ../../source/user/gdal_python_utilities.rst:22
msgid "gdal_merge"
msgstr ""

#: ../../source/user/gdal_python_utilities.rst:23
msgid "gdal_edit"
msgstr ""

#: ../../source/user/gdal_python_utilities.rst:24
msgid "gdal_calc"
msgstr ""

#: ../../source/user/gdal_python_utilities.rst:25
msgid "ogrmerge"
msgstr ""

#: ../../source/user/gdal_python_utilities.rst:28
msgid "Developers"
msgstr ""

#: ../../source/user/gdal_python_utilities.rst:30
msgid "Read the :ref:`gdal-utils project charter <rfc-78>`."
msgstr ""

#: ../../source/user/gdal_python_utilities.rst:32
msgid "Clone or download the gdal project: https://github.com/OSGeo/gdal/"
msgstr ""

#: ../../source/user/gdal_python_utilities.rst:34
msgid ""
"In your IDE set gdal-utils as the root folder, `.../swig/python/gdal-"
"utils <https://github.com/OSGeo/gdal/tree/master/swig/python/gdal-"
"utils/>`__."
msgstr ""

#: ../../source/user/gdal_python_utilities.rst:37
msgid ""
"**./osgeo_utils** - contains the Programs (those scripts that have launch"
" wrappers created by pip and added to PYTHONHOME/Scripts)"
msgstr ""

#: ../../source/user/gdal_python_utilities.rst:40
msgid ""
"**./osgeo_utils/samples** - working python scripts but not typically "
"available in path (run them with ``python3 "
"path/to/samples/something.py``)"
msgstr ""

#: ../../source/user/gdal_python_utilities.rst:44
msgid ""
"Improve the docs by editing the RST pages in `.../doc/source "
"<https://github.com/OSGeo/gdal/tree/master/doc/source>`__ which generate "
"the web pages:"
msgstr ""

#: ../../source/user/gdal_python_utilities.rst:48
msgid "https://gdal.org/api/index.html#python-api"
msgstr ""

#: ../../source/user/gdal_python_utilities.rst:49
msgid "https://gdal.org/programs/index.html#programs"
msgstr ""

#: ../../source/user/gdal_python_utilities.rst:50
msgid "https://gdal.org/api/python_samples.html"
msgstr ""

#: ../../source/user/gdal_python_utilities.rst:52
msgid ""
"Contribute changes with `Pull Requests "
"<https://github.com/OSGeo/gdal/pulls>`__ from your fork to main GDAL "
"project and use *gdal-utils* label."
msgstr ""

#: ../../source/user/gnm_data_model.rst:5
msgid "Geographic Networks Data Model"
msgstr ""

#: ../../source/user/gnm_data_model.rst:7
msgid ""
"This document is intended to describe the purpose and the structure of "
"Geographic Network Model classes. GNM is the part of GDAL and provides "
"the methods of creating, managing and analysing geographical networks."
msgstr ""

#: ../../source/user/gnm_data_model.rst:9
msgid ""
"The key purpose of GNM classes: - To provide an abstraction for different"
" existed network formats, like GDAL (previously OGR) provides one for "
"spatial vector formats; - To provide a network functionality to those "
"spatial formats which does not have it at all."
msgstr ""

#: ../../source/user/gnm_data_model.rst:14
msgid "General concept"
msgstr ""

#: ../../source/user/gnm_data_model.rst:16
msgid ""
"Any real-world network can be represented as a set of vector data, which "
"can be itself represented in GDAL as a GDALDataset. In GNM this data "
"consists of two parts. Network's topology (graph), network's metadata "
"(name/description), set of special feature identifiers, etc. belong to "
"the \"network part\", while the common for GDAL layers, features, "
"geometries belong to the \"spatial/attribute part\". In order to work "
"with the datasets of different formats the following classes were "
"designed in GNM."
msgstr ""

#: ../../source/user/gnm_data_model.rst:19
msgid "Network"
msgstr ""

#: ../../source/user/gnm_data_model.rst:21
msgid ""
":cpp:class:`GNMNetwork` represents an abstract network. The network data "
"and spatial/attribute data in a dataset of some format in fact can be not"
" separable (just additional layers/fields/tags), while the concrete "
"implementation of GNMNetwork \"knows\" which data from the whole dataset "
"refers to \"network part\" and is able to operate it. GNMNetwork allows "
"user the following:"
msgstr ""

#: ../../source/user/gnm_data_model.rst:23
msgid ""
"-Setting/unsetting connections. These generic methods of building the "
"network topology (automatically and manually) receive the identifiers of "
"features being connected in a common way, while the concrete "
"implementation knows where and how to store and build the topology; "
"-Reading connections. The generic methods return the connections in the "
"common way; -Adding/removing layers/features. When the feature or layer "
"is being added to the network some actions can be initiated (weights "
"change in a graph, cascade changes in connected features). Concrete "
"GNMNetwork describes how it is done. -Defining network's business logic "
"or behavior. It can be expressed in network rules or "
"constraints/restrictions. Expected that each rule can be set from a "
"string and each concrete GNMNetwork will transform it to the internal "
"look."
msgstr ""

#: ../../source/user/gnm_data_model.rst:29
msgid "Format"
msgstr ""

#: ../../source/user/gnm_data_model.rst:31
msgid ""
"GNMNetwork inherits GDALDataset and looks like OGRDatasource with "
"additional functionality. There are a set of GDAL drivers for networks. "
"The generic network implementation in GDAL provides additional "
"functionality like rules, virtual edges and vertices. Also, while editing"
" the feature the network control the network rules and other specific, "
"and can deny saving edits. The other network drivers (pgRouting, OSRM, "
"GraphHopper, etc.) should provide the basic functionality via the "
"GNMNetwork class."
msgstr ""

#: ../../source/user/gnm_data_model.rst:34
msgid "Network formats"
msgstr ""

#: ../../source/user/gnm_data_model.rst:36
msgid ""
"To add a ``native`` support of the existed network format (like PostGIS "
"pgRouting, Oracle Spatial Networks, topology in GML, etc.) to GNM the "
"developer should implement the corresponding GNMDriver-GNMNetwork "
"interface. But there is also a capability to use the ``generic`` network "
"format, which is already implemented in GNM as a special class. It can be"
" extremely useful when there is a need to create and use a network in the"
" format that initially does not have its \"network part\" (like ESRI "
"Shapefile) directly."
msgstr ""

#: ../../source/user/gnm_data_model.rst:39
msgid "GNMGenericNetwork"
msgstr ""

#: ../../source/user/gnm_data_model.rst:41
msgid ""
":cpp:class:`GNMGenericNetwork` is a concrete implementation of the "
"GNMNetwork. GNMGenericNetwork intends to support the most GDALDataset "
"drivers (depends on the corresponding driver capabilities). Technically "
"the network format abstraction is achieved with the help of GDAL "
"abstraction: datasets and layers approach. GNMGdalNetwork aggregates a "
"GDALDataset instance where the \"network part\" is represented as a set "
"of \"system layers\" (wkbNone geometry, specific attribute fields) and "
"the spatial/attribute data is regarded as the set of \"class layers\" or "
"\"classes\" (layers with geometries and attributes, as usual). The "
"\"network part\" is created and maintained by GNMGenericNetwork "
"automatically and provides methods to work with it."
msgstr ""

#: ../../source/user/gnm_data_model.rst:43
msgid ""
"The way of describing real-world networks by GNMGenericNetwork intends to"
" be a generic, because: -The most general type of graph is used, which "
"holds every useful information: directions of edges "
"(directed/undirected), edge costs (weighted/unweighted). This graph is "
"stored as an incidence list: source vertex feature id, target vertex "
"feature id, edge feature id, direct cost, inverse cost, direction of "
"edge; -Any feature with any geometry can be the vertex or the edge in a "
"graph. Also, it may be no feature “under” the connection's edge at all "
"(actually the virtual edge is created for this case). All this means that"
" user operates with the feature identifiers, while the GNMGenericNetwork "
"guaranties the connections integrity among features; -Any feature in the "
"network will gain the unique identifier – Global Feature Identifier "
"(GFID) which allows unify any amount of \"class layers\" under one "
"network; -GNMGenericNetwork uses its own way to determine the network's "
"business logic. See :cpp:func:`GNMGenericNetwork::CreateRule` for more "
"details."
msgstr ""

#: ../../source/user/gnm_data_model.rst:49
msgid ""
"See the :cpp:class:`GNMGenericNetwork` class documentation for more "
"details."
msgstr ""

#: ../../source/user/gnm_data_model.rst:51
msgid ""
"The network of common format has also the following important features: "
"-The single spatial reference system is used in the network, that means "
"that each feature which appears in the network will be transformed to "
"this SRS; -The network always created void and there is a need to import "
"or create features; -It is not possible to remove the \"network part\" "
"from the dataset – only delete the whole network with all data. The "
"deletion is made layer by layer and deletes only system and class layers "
"which registered in the network."
msgstr ""

#: ../../source/user/gnm_data_model.rst:57
msgid "Network analysis"
msgstr ""

#: ../../source/user/gnm_data_model.rst:59
msgid ""
"The network analysis in GNM is implemented in :cpp:class:`GNMNetwork` "
"object."
msgstr ""

#: ../../source/user/gnm_data_model.rst:61
msgid ""
":cpp:class:`GNMGenericNetwork` holds the graph in memory in STL "
"containers and provides basic algorithms which return the results in the "
"array-form (e.g. std::vector full of path's edges and vertices GFIDs). "
"But the caller get a result as OGRLayer there features get from layers "
"consist the network. Also some additional fields created (VERTEX/EDGE "
"indicator field, GFID, layer name, etc.). The caller have to free the "
"result OGRLayer via :cpp:func:`GDALDataset::ReleaseResultSet`"
msgstr ""

#: ../../source/user/index.rst:7
msgid "GDAL Virtual File Systems"
msgstr ""

#: ../../source/user/index.rst:5
msgid "User oriented documentation"
msgstr ""

#: ../../source/user/multidim_raster_data_model.rst:5
msgid "Multidimensional Raster Data Model"
msgstr ""

#: ../../source/user/multidim_raster_data_model.rst:7
msgid ""
"This document attempts to describe the GDAL multidimensional data model, "
"that has been added in GDAL 3.1. That is the types of information that a "
"GDAL multidimensional dataset can contain, and their semantics."
msgstr ""

#: ../../source/user/multidim_raster_data_model.rst:11
msgid ""
"The multidimensional raster API is a generalization of the traditional "
":ref:`raster_data_model`, to address 3D, 4D or higher dimension datasets."
" Currently, it is limited to basic read/write API, and is not that much "
"plugged into other higher level utilities."
msgstr ""

#: ../../source/user/multidim_raster_data_model.rst:17
msgid ""
"It is strongly inspired from the netCDF and HDF5 API and data models. See"
" `HDF5 format and data model "
"<https://portal.opengeospatial.org/files/81716>`_."
msgstr ""

#: ../../source/user/multidim_raster_data_model.rst:20
msgid ""
"A :cpp:class:`GDALDataset` with multidimensional content contains a root "
":cpp:class:`GDALGroup`."
msgstr ""

#: ../../source/user/multidim_raster_data_model.rst:24
msgid "Group"
msgstr ""

#: ../../source/user/multidim_raster_data_model.rst:26
msgid ""
"A :cpp:class:`GDALGroup` (modelling a `HDF5 Group "
"<https://portal.opengeospatial.org/files/81716#_hdf5_group>`_) is a named"
" container of GDALAttribute, GDALMDArray or other GDALGroup. Hence "
"GDALGroup can describe a hierarchy of objects."
msgstr ""

#: ../../source/user/multidim_raster_data_model.rst:31
msgid "Attribute"
msgstr ""

#: ../../source/user/multidim_raster_data_model.rst:33
msgid ""
"A :cpp:class:`GDALAttribute` (modelling a `HDF5 Attribute "
"<https://portal.opengeospatial.org/files/81716#_hdf5_attribute>`_) has a "
"name and a value, and is typically used to describe a metadata item. The "
"value can be (for the HDF5 format) in the general case a multidimensional"
" array of \"any\" type (in most cases, this will be a single value of "
"string or numeric type)"
msgstr ""

#: ../../source/user/multidim_raster_data_model.rst:39
msgid "Multidimensional array"
msgstr ""

#: ../../source/user/multidim_raster_data_model.rst:41
msgid ""
"A :cpp:class:`GDALMDArray` (modelling a `HDF5 Dataset "
"<https://portal.opengeospatial.org/files/81716#_hdf5_dataset>`_) has a "
"name, a multidimensional array, references a number of GDALDimension, and"
" has a list of GDALAttribute."
msgstr ""

#: ../../source/user/multidim_raster_data_model.rst:45
msgid ""
"Most drivers use the row-major convention for dimensions: that is, when "
"considering that the array elements are stored consecutively in memory, "
"the first dimension is the slowest varying one (in a 2D image, the row), "
"and the last dimension the fastest varying one (in a 2D image, the "
"column). That convention is the default convention used for NumPy arrays,"
" the MEM driver and the HDF5 and netCDF APIs. The GDAL API is mostly "
"agnostic about that convention, except when passing a NULL array as the "
"*stride* parameter for the :cpp:func:`GDALAbstractMDArray::Read` and  "
":cpp:func:`GDALAbstractMDArray::Write` methods. You can refer to `NumPy "
"documentation about multidimensional array indexing order issues "
"<https://docs.scipy.org/doc/numpy/reference/internals.html"
"#multidimensional-array-indexing-order-issues>`_"
msgstr ""

#: ../../source/user/multidim_raster_data_model.rst:55
msgid "a GDALMDArray has also optional properties:"
msgstr ""

#: ../../source/user/multidim_raster_data_model.rst:57
msgid "Coordinate reference system: :cpp:class:`OGRSpatialReference`"
msgstr ""

#: ../../source/user/multidim_raster_data_model.rst:58
msgid "No data value:"
msgstr ""

#: ../../source/user/multidim_raster_data_model.rst:59
msgid "Unit"
msgstr ""

#: ../../source/user/multidim_raster_data_model.rst:60
msgid "Offset, such that unscaled_value = offset + scale * raw_value"
msgstr ""

#: ../../source/user/multidim_raster_data_model.rst:61
msgid "Scale, such that unscaled_value = offset + scale * raw_value"
msgstr ""

#: ../../source/user/multidim_raster_data_model.rst:63
msgid ""
"Number of operations can be applied on an array to get modified views of "
"it: :cpp:func:`GDALMDArray::Transpose()`, "
":cpp:func:`GDALMDArray::GetView()`, etc."
msgstr ""

#: ../../source/user/multidim_raster_data_model.rst:66
msgid ""
"The :cpp:func:`GDALMDArray::Cache()` method can be used to cache the "
"value of a view array into a sidecar file."
msgstr ""

#: ../../source/user/multidim_raster_data_model.rst:70
msgid "Dimension"
msgstr ""

#: ../../source/user/multidim_raster_data_model.rst:72
msgid ""
"A :cpp:class:`GDALDimension` describes a dimension / axis used to index "
"multidimensional arrays. It has the following properties:"
msgstr ""

#: ../../source/user/multidim_raster_data_model.rst:75
msgid "a name"
msgstr ""

#: ../../source/user/multidim_raster_data_model.rst:76
msgid ""
"a size, that is the number of values that can be indexed along the "
"dimension"
msgstr ""

#: ../../source/user/multidim_raster_data_model.rst:78
msgid ""
"a type, which is a string giving the nature of the dimension. Predefined "
"values are: HORIZONTAL_X, HORIZONTAL_Y, VERTICAL, TEMPORAL, PARAMETRIC "
"Other values might be used. Empty value means unknown."
msgstr ""

#: ../../source/user/multidim_raster_data_model.rst:81
msgid ""
"a direction. Predefined values are: EAST, WEST, SOUTH, NORTH, UP, DOWN, "
"FUTURE, PAST Other values might be used. Empty value means unknown."
msgstr ""

#: ../../source/user/multidim_raster_data_model.rst:84
msgid ""
"a reference to a GDALMDArray variable, typically one-dimensional, "
"describing the values taken by the dimension. For a georeferenced "
"GDALMDArray and its X dimension, this will be typically the values of the"
" easting/longitude for each grid point."
msgstr ""

#: ../../source/user/multidim_raster_data_model.rst:90
msgid "Data Type"
msgstr ""

#: ../../source/user/multidim_raster_data_model.rst:92
msgid ""
"A :cpp:class:`GDALExtendedDataType` (modelling a `HDF5 datatype "
"<https://portal.opengeospatial.org/files/81716#_hdf5_datatype>`_) "
"describes the type taken by an individual value of a GDALAttribute or "
"GDALMDArray. Its class can be NUMERIC, STRING or COMPOUND. For NUMERIC, "
"the existing :cpp:enum:`GDALDataType` enumerated values are supported. "
"For COMPOUND, the data type is a list of members, each member being "
"described by a name, a offset in byte in the compound structure and a "
"GDALExtendedDataType."
msgstr ""

#: ../../source/user/multidim_raster_data_model.rst:103
msgid "The HDF5 modelisation allows for more complex datatypes."
msgstr ""

#: ../../source/user/multidim_raster_data_model.rst:107
msgid ""
"HDF5 does not have native data types for complex values whereas "
"GDALDataType does. So a driver may decide to expose a GDT\\_Cxxxx "
"datatype from a HDF5 Compound data type representing a complex value."
msgstr ""

#: ../../source/user/multidim_raster_data_model.rst:112
msgid "Differences with the GDAL 2D raster data model"
msgstr ""

#: ../../source/user/multidim_raster_data_model.rst:114
msgid ""
"The concept of GDALRasterBand is no longer used for multidimensional. "
"This can be modelled as either different GDALMDArray, or using a compound"
" data type."
msgstr ""

#: ../../source/user/multidim_raster_data_model.rst:119
msgid ""
"Bridges between GDAL 2D classic raster data model and multidimensional "
"data model"
msgstr ""

#: ../../source/user/multidim_raster_data_model.rst:121
msgid ""
"The :cpp:func:`GDALRasterBand::AsMDArray` and "
":cpp:func:`GDALMDArray::AsClassicDataset` can be used to respectively "
"convert a raster band to a MD array or a 2D dataset to a MD array."
msgstr ""

#: ../../source/user/multidim_raster_data_model.rst:126
msgid "Applications"
msgstr ""

#: ../../source/user/multidim_raster_data_model.rst:128
msgid ""
"The following applications can be used to inspect and manipulate "
"multidimensional datasets:"
msgstr ""

#: ../../source/user/multidim_raster_data_model.rst:131
msgid ":ref:`gdalmdiminfo`"
msgstr ""

#: ../../source/user/multidim_raster_data_model.rst:132
msgid ":ref:`gdalmdimtranslate`"
msgstr ""

#: ../../source/user/multithreading.rst:5
msgid "Multi-threading"
msgstr ""

#: ../../source/user/multithreading.rst:8
msgid "GDAL API: re-entrant, but not thread-safe"
msgstr ""

#: ../../source/user/multithreading.rst:10
msgid ""
"The exact meaning of the terms ``thread-safe`` or ``re-entrant`` is not "
"fully standardized. We will use here the `QT definitions "
"<https://doc.qt.io/qt-5/threads-reentrancy.html>`__. In particular, a C "
"function or C++ method is said to be re-entrant if it can be called "
"simultaneously from multiple threads, *but* only if each invocation uses "
"its own data."
msgstr ""

#: ../../source/user/multithreading.rst:16
msgid "All GDAL public C functions and C++ methods are re-entrant, except:"
msgstr ""

#: ../../source/user/multithreading.rst:18
msgid "the general initialization functions, like :cpp:func:`GDALAllRegister`."
msgstr ""

#: ../../source/user/multithreading.rst:19
msgid ""
"the general cleanup functions like :cpp:func:`GDALDestroy` or "
":cpp:func:`OSRCleanup`."
msgstr ""

#: ../../source/user/multithreading.rst:21
msgid ""
"Those functions should not be called concurrently from several threads, "
"and it is general best practice to call them from the main thread of the "
"program at program initialization and termination."
msgstr ""

#: ../../source/user/multithreading.rst:25
msgid ""
"Unless otherwise stated, no GDAL public C functions and C++ methods "
"should be assumed to be thread-safe. That is you should not call "
"simultaneously GDAL functions from multiple threads on the same data "
"instance, or even instances that are closely related through ownership "
"relationships. For example, for a multi-band raster dataset, it is not "
"safe to call concurrently GDAL functions on different "
":cpp:class:`GDALRasterBand` instances owned by the same "
":cpp:class:`GDALDataset` instance (each thread should instead manipulate "
"a distinct GDALDataset). Similarly for a GDALDataset owning several "
":cpp:class:`OGRLayer`."
msgstr ""

#: ../../source/user/multithreading.rst:34
msgid ""
"The reason is that most implementations of GDALDataset or GDALRasterBand "
"are stateful. A GDALDataset typically owns a file handle, and performs "
"seek/read operations on it, thus not allowing concurrent access. Block "
"cache related structures for a given GDALDataset are not thread-safe. "
"Drivers also often implement lazy initialization strategies to access "
"various metadata which are resolved only the first time the method to "
"access them is invoked. Drivers may also rely on third-party libraries "
"that expose objects that are not thread-safe."
msgstr ""

#: ../../source/user/multithreading.rst:43
msgid ""
"Those restrictions apply to the C and C++ ABI, and all languages bindings"
" (unless they would take special precautions to serialize calls)"
msgstr ""

#: ../../source/user/multithreading.rst:47
msgid "GDAL block cache and multi-threading"
msgstr ""

#: ../../source/user/multithreading.rst:49
msgid ""
"The current design of the GDAL raster block cache allows concurrent reads"
" of several datasets. However performance issues may arise when writing "
"several datasets from several threads, due to lock contention in the "
"global structures of the block cache mechanism."
msgstr ""

#: ../../source/user/multithreading.rst:54
msgid "RAM fragmentation and multi-threading"
msgstr ""

#: ../../source/user/multithreading.rst:56
msgid ""
"It has been observed that scenarios that involve multi-threading reading "
"or writing of raster datasets are prone to cause a high RAM usage, in "
"particular when using the default dynamic memory allocator of Linux. "
"Using the alternate `tcmalloc <https://github.com/google/tcmalloc>`__ "
"memory allocator helps reducing the amount of virtual and resident memory"
" used."
msgstr ""

#: ../../source/user/multithreading.rst:62
msgid ""
"For example, with Debian/Ubuntu distributions, this can be done by "
"installing the ``libtcmalloc-minimal4`` package and running the binary "
"that executes GDAL with:"
msgstr ""

#: ../../source/user/multithreading.rst:71
msgid "GDAL and multi-processing"
msgstr ""

#: ../../source/user/multithreading.rst:73
msgid ""
"POSIX fork() API should not be called during the middle of a GDAL "
"operation, otherwise some structures like mutexes might appear to be "
"locked forever in the forked process. If multi-processing is done, we "
"recommend that processes are forked before any GDAL operation is done. "
"Operating on the same GDALDataset instance in several sub-processes will "
"generally lead to wrong results due to the underlying file descriptors "
"being shared."
msgstr ""

#: ../../source/user/ogr_feature_style.rst:5
msgid "Feature Style Specification"
msgstr ""

#: ../../source/user/ogr_feature_style.rst:7
msgid "Version 0.016 - 2018-12-03"
msgstr ""

#: ../../source/user/ogr_feature_style.rst:10
msgid "1. Overview"
msgstr ""

#: ../../source/user/ogr_feature_style.rst:12
msgid ""
"This document defines the way feature style information (i.e. colors, "
"line width, symbols, etc.) should be handled at the various levels in "
"GDAL's vector drivers (OGR)."
msgstr ""

#: ../../source/user/ogr_feature_style.rst:16
msgid ""
"The following GDAL vector drivers have varying levels of support for "
"feature styles: :ref:`DWG (libopencad) <vector.cad>`, :ref:`DWG (Teigha) "
"<vector.dwg>`, :ref:`DXF <vector.dxf>`, :ref:`KML (libkml) "
"<vector.libkml>`, :ref:`MapInfo <vector.mitab>`, :ref:`MicroStation DGN "
"v7 <vector.dgn>` and :ref:`DGN v8 <vector.dgnv8>`, :ref:`OpenJUMP JML "
"<vector.jml>` and :ref:`PDF <raster.pdf>`."
msgstr ""

#: ../../source/user/ogr_feature_style.rst:24
msgid "1.1 Style is a property of Feature object"
msgstr ""

#: ../../source/user/ogr_feature_style.rst:26
msgid ""
"Conceptually, the feature style should be seen as a property of a "
"feature. Even though some systems store style information in a special "
"attribute, in GDAL it is more consistent to see the style as a property, "
"just the same way the geometry of a feature is also a property."
msgstr ""

#: ../../source/user/ogr_feature_style.rst:31
msgid ""
"This does not prevent us from storing the style information in an "
"attribute when writing to some formats that have no provision for styles "
"(e.g. E00). But then at the time such a dataset is opened through GDAL, "
"the name of the attribute that contains style information should either "
"be specified in some metadata, or be specified by the user."
msgstr ""

#: ../../source/user/ogr_feature_style.rst:37
msgid ""
"Also, in the SFCOM interface, the style information will be stored in an "
"attribute just like the geometry is."
msgstr ""

#: ../../source/user/ogr_feature_style.rst:41
msgid "1.2 Feature Styles can be stored at 2 levels"
msgstr ""

#: ../../source/user/ogr_feature_style.rst:43
msgid ""
"The style defines the way a feature should be drawn, but it is very "
"common to have several features that share the same style. In those "
"cases, instead of duplicating the style information on each feature, we "
"will provide a more efficient way to share style information."
msgstr ""

#: ../../source/user/ogr_feature_style.rst:48
msgid "There are two levels at which style information can be found:"
msgstr ""

#: ../../source/user/ogr_feature_style.rst:50
msgid ""
"A **dataset** can have a table of pre-defined styles that can then be "
"referred to by the layers or by the individual features. The mechanism "
"for that is defined further down in this document."
msgstr ""

#: ../../source/user/ogr_feature_style.rst:53
msgid ""
"A **feature (OGRFeature object)** can have its own complete style "
"definition. Alternatively, a feature can be linked to a style in the "
"dataset's table of styles. This can save storage space when the same "
"styles are reused often."
msgstr ""

#: ../../source/user/ogr_feature_style.rst:58
msgid ""
"It should be possible to have style information stored at one or more of "
"the various levels while working on a given dataset. The level(s) where "
"the style is actually stored will depend on the most efficient approach "
"for the format we are dealing with."
msgstr ""

#: ../../source/user/ogr_feature_style.rst:64
msgid "1.3 Drawing Tools"
msgstr ""

#: ../../source/user/ogr_feature_style.rst:66
msgid ""
"We define a small set of drawing tools that are used to build style "
"definitions:"
msgstr ""

#: ../../source/user/ogr_feature_style.rst:69
msgid "**PEN**: For linear styles"
msgstr ""

#: ../../source/user/ogr_feature_style.rst:70
msgid "**BRUSH**: For filling areas"
msgstr ""

#: ../../source/user/ogr_feature_style.rst:71
msgid "**SYMBOL**: Point symbols"
msgstr ""

#: ../../source/user/ogr_feature_style.rst:72
msgid "**LABEL**: For annotations"
msgstr ""

#: ../../source/user/ogr_feature_style.rst:74
msgid ""
"Each drawing tool can take a number of parameters, all optional. The "
"style syntax is built in a way that a system that cannot support all "
"possible parameters can safely skip and ignore the parameters it does not"
" support. This will also make it easy to extend the specification in the "
"future without breaking existing code or applications."
msgstr ""

#: ../../source/user/ogr_feature_style.rst:80
msgid ""
"A style can use a single tool, or use a combination of one or more tools."
" By combining the use of several tools in a style, one can build "
"virtually any type of graphical representation. For instance, the SYMBOL "
"tool can be used to place spaced symbols along a line. Also, the LABEL "
"tool can be used to place text on a point, stretch it along a line, or "
"even, by combining the PEN tool with the LABEL tool, use the line as a "
"leader to the text label, and draw the text string on the last vertex of "
"the line."
msgstr ""

#: ../../source/user/ogr_feature_style.rst:89
msgid ""
"Of course, few systems can support all that. But the intention here is to"
" have a style specification that is powerful and flexible enough to allow"
" all types of formats to exchange style information with the least "
"possible loss."
msgstr ""

#: ../../source/user/ogr_feature_style.rst:95
msgid "1.4 Feature attributes can be used by style definitions"
msgstr ""

#: ../../source/user/ogr_feature_style.rst:97
msgid ""
"In some cases, it might be useful for a style definition to refer to an "
"attribute field on the feature for a given tool parameter's value instead"
" of having a hardcoded value inside the style itself."
msgstr ""

#: ../../source/user/ogr_feature_style.rst:101
msgid ""
"Example of this are text angle, text string, etc... these values change "
"for every single text label, but we can share the rest of the label style"
" at the layer level if we lookup the angle and text string in an "
"attribute on each feature."
msgstr ""

#: ../../source/user/ogr_feature_style.rst:106
msgid ""
"The syntax of the style string provides a way that any parameter value "
"can be either a constant value, or a lookup to an attribute field."
msgstr ""

#: ../../source/user/ogr_feature_style.rst:110
msgid "1.5 Tool parameter units"
msgstr ""

#: ../../source/user/ogr_feature_style.rst:112
msgid ""
"Several parameter values can be expressed in different measurement units "
"depending on the file format you are dealing with. For instance, some "
"systems express line width, or text height in points, other in pixels, "
"and others use ground units. In order to accommodate all that, all "
"parameters can be specified in one of the following units systems:"
msgstr ""

#: ../../source/user/ogr_feature_style.rst:118
msgid "**g**: Map Ground Units (whatever the map coordinate units are)"
msgstr ""

#: ../../source/user/ogr_feature_style.rst:119
msgid "**px**: Pixels"
msgstr ""

#: ../../source/user/ogr_feature_style.rst:120
msgid "**pt**: Points (1/72 inch)"
msgstr ""

#: ../../source/user/ogr_feature_style.rst:121
msgid "**mm**: Millimeters"
msgstr ""

#: ../../source/user/ogr_feature_style.rst:122
msgid "**cm**: Centimeters"
msgstr ""

#: ../../source/user/ogr_feature_style.rst:123
msgid "**in**: Inches"
msgstr ""

#: ../../source/user/ogr_feature_style.rst:125
msgid ""
"Some tools will have to be provided at the GDAL client level to simplify "
"the conversion of any value from one units system to another. This would "
"imply that the GDAL client has to specify a map scale so that conversions"
" from ground units to paper/pixel units can be performed."
msgstr ""

#: ../../source/user/ogr_feature_style.rst:133
msgid "2. Feature Style String"
msgstr ""

#: ../../source/user/ogr_feature_style.rst:135
msgid ""
"As was mentioned earlier, styles definitions will usually be stored as "
"strings, either in a per-layer (or per-dataset) table, or directly in the"
" features."
msgstr ""

#: ../../source/user/ogr_feature_style.rst:140
msgid "2.1 Examples"
msgstr ""

#: ../../source/user/ogr_feature_style.rst:142
msgid "Here are some example style definition strings:"
msgstr ""

#: ../../source/user/ogr_feature_style.rst:144
msgid "A 5 pixels wide red line: ``PEN(c:#FF0000,w:5px)``"
msgstr ""

#: ../../source/user/ogr_feature_style.rst:146
msgid ""
"A polygon filled in blue, with a black outline: "
"``BRUSH(fc:#0000FF);PEN(c:#000000)``"
msgstr ""

#: ../../source/user/ogr_feature_style.rst:148
msgid "A point symbol: ``SYMBOL(c:#00FF00,id:\"points.sym-45,ogr-sym-7\")``"
msgstr ""

#: ../../source/user/ogr_feature_style.rst:150
msgid ""
"A text label, taking the text string from the \"text_attribute\" "
"attribute field: ``LABEL(f:\"Times New "
"Roman\",s:12pt,t:{text_attribute})\"``"
msgstr ""

#: ../../source/user/ogr_feature_style.rst:154
msgid ""
"Here is what a style table that contains all the above styles could look "
"like:"
msgstr ""

#: ../../source/user/ogr_feature_style.rst:164
msgid ""
"Then individual features can refer to styles from the table above using "
"the \"@\" character followed by the style name in their style property."
msgstr ""

#: ../../source/user/ogr_feature_style.rst:167
msgid ""
"For instance, a feature with its style set to \"@road\" would be drawn as"
" a red line."
msgstr ""

#: ../../source/user/ogr_feature_style.rst:171
msgid "2.2 Style String Syntax"
msgstr ""

#: ../../source/user/ogr_feature_style.rst:173
msgid "Each feature object has a style property (a string):"
msgstr ""

#: ../../source/user/ogr_feature_style.rst:179
msgid "``<style_def>`` is defined later in this section."
msgstr ""

#: ../../source/user/ogr_feature_style.rst:180
msgid ""
"An empty style string means that the feature's style is unspecified. It "
"does not indicate that the feature is invisible – an invisible feature "
"may be indicated using a fully transparent color, like PEN(c:#00000000)."
msgstr ""

#: ../../source/user/ogr_feature_style.rst:184
msgid ""
"``@<style_name>`` is a reference to a predefined style in the layer or "
"the dataset's style table. The layer's table is looked up first, and if "
"style_name is not found there then the dataset's table will be looked up."
msgstr ""

#: ../../source/user/ogr_feature_style.rst:188
msgid ""
"Finally, ``{<field_name>}`` means that the style property should be read "
"from the specified attribute field."
msgstr ""

#: ../../source/user/ogr_feature_style.rst:191
msgid ""
"The <style_def> is the real style definition. It is a combination of 1 or"
" more style parts separated by semicolons. Each style_part uses a drawing"
" tool to define a portion of the complete graphical representation:"
msgstr ""

#: ../../source/user/ogr_feature_style.rst:214
msgid ""
"By default, style parts are drawn in the order that they appear in the "
"style_def string unless each part is assigned a different level parameter"
" value (see the level parameter definition)."
msgstr ""

#: ../../source/user/ogr_feature_style.rst:218
msgid ""
"All drawing tool parameters are optional. So it is legal to have a "
"style_part with an empty drawing tool parameter list (e.g. \"PEN()\"). "
"For each parameter that does not have any specified value, it is up to "
"the client application to use its own default value. This document "
"provides advisory default values for most parameters, but it is not "
"mandatory for an application to use those default values."
msgstr ""

#: ../../source/user/ogr_feature_style.rst:225
msgid ""
"When {<field_name>} is used for a tool_param value, several options are "
"available with respect to the units. The units can be specified after the"
" field name as in PEN(c:#FF0000,w:{line_width}pt) or can be left "
"unspecified as in PEN(c:#FF0000,w:{line_width}). In the first case, the "
"default units will be points (pt), but if the attribute field line_width "
"contains a value followed by a units abbreviation (e.g. \"5px\") then the"
" units specified in the attribute fields have precedence (in this case "
"pixels). Note that the attribute field does not have to contain a units "
"value and probably won't in most cases; it is just an optional feature to"
" be able to override the default units from inside an attribute field's "
"value."
msgstr ""

#: ../../source/user/ogr_feature_style.rst:238
msgid "2.3 Pen Tool Parameters"
msgstr ""

#: ../../source/user/ogr_feature_style.rst:240
#: ../../source/user/ogr_feature_style.rst:364
#: ../../source/user/ogr_feature_style.rst:459
#: ../../source/user/ogr_feature_style.rst:586
msgid "**Applicable geometry types:**"
msgstr ""

#: ../../source/user/ogr_feature_style.rst:242
msgid ""
"Point: When applied to a point, a PEN tool can only define the color and "
"the size of the point to draw."
msgstr ""

#: ../../source/user/ogr_feature_style.rst:244
msgid "Polyline: This is the most obvious case."
msgstr ""

#: ../../source/user/ogr_feature_style.rst:245
msgid "Polygon: Defines the way the outline of a polygon should be drawn."
msgstr ""

#: ../../source/user/ogr_feature_style.rst:247
msgid ""
"Here is the current list of PEN tool parameters. While this is sufficient"
" to cover all the cases that we have encountered so far, new parameters "
"might be added in the future to handle new types of graphical "
"representation. Note again that all parameters are optional:"
msgstr ""

#: ../../source/user/ogr_feature_style.rst:252
msgid "``c``: **Pen Color**, expressed hexadecimal (#RRGGBB[AA])"
msgstr ""

#: ../../source/user/ogr_feature_style.rst:254
#: ../../source/user/ogr_feature_style.rst:377
#: ../../source/user/ogr_feature_style.rst:386
#: ../../source/user/ogr_feature_style.rst:519
msgid ""
"[AA]: the last 2 digits define the alpha channel value, with 0 being "
"transparent and FF being opaque. The default is FF (opaque)"
msgstr ""

#: ../../source/user/ogr_feature_style.rst:256
msgid "Suggested default: black (c:#000000)"
msgstr ""

#: ../../source/user/ogr_feature_style.rst:257
msgid "Example: PEN(c:#FF0000), or PEN(C:#FF0000FF)"
msgstr ""

#: ../../source/user/ogr_feature_style.rst:260
msgid ""
"``w``: **Pen Width**, expressed as a numeric value with units (g, px, pt,"
" mm, cm, in)"
msgstr ""

#: ../../source/user/ogr_feature_style.rst:263
msgid "Suggested default: 1 pixel"
msgstr ""

#: ../../source/user/ogr_feature_style.rst:264
msgid "Examples: PEN(c:#FF0000,w:5px), PEN(w:3pt), PEN(w:50g)"
msgstr ""

#: ../../source/user/ogr_feature_style.rst:266
msgid ""
"``p``: **Pattern**. To create dash lines. A list of pen-down/pen-up "
"distances"
msgstr ""

#: ../../source/user/ogr_feature_style.rst:268
#: ../../source/user/ogr_feature_style.rst:319
#: ../../source/user/virtual_file_systems.rst:79
#: ../../source/user/virtual_file_systems.rst:168
#: ../../source/user/virtual_file_systems.rst:195
#: ../../source/user/virtual_file_systems.rst:1092
#: ../../source/user/virtual_file_systems.rst:1110
#: ../../source/user/virtual_file_systems.rst:1221
#: ../../source/user/virtual_file_systems.rst:1303
msgid "Examples:"
msgstr ""

#: ../../source/user/ogr_feature_style.rst:270
msgid "|style_pen1| = PEN(c:#FF0000,w:2px,p:\"4px 5px\"). short-dash line"
msgstr ""

#: ../../source/user/ogr_feature_style.rst:276
msgid "style_pen1"
msgstr ""

#: ../../source/user/ogr_feature_style.rst:272
msgid "|style_pen2| = PEN(c:#FF0000,w:2px,p:\"10px 5px\"). long-dash line"
msgstr ""

#: ../../source/user/ogr_feature_style.rst:279
msgid "style_pen2"
msgstr ""

#: ../../source/user/ogr_feature_style.rst:274
msgid ""
"|style_pen3| = PEN(c:#FF0000,w:2px,p:\"10px 5px 4px 5px\"). long/short "
"dash"
msgstr ""

#: ../../source/user/ogr_feature_style.rst:282
msgid "style_pen3"
msgstr ""

#: ../../source/user/ogr_feature_style.rst:287
msgid ""
"``id``: **Comma-delimited list of Pen Names or Ids** For systems that "
"identify pens with a name or an id. The names in the comma-delimited list"
" of ids are scanned until one is recognized by the target system. Pen Ids"
" can be either system-specific ids (see further below) or be one of the "
"pre-defined OGR pen ids for known line patterns. The id parameter should "
"always include one of the OGR ids at the end of the comma-delimited list "
"of ids so that an application never has to rely on understanding system-"
"specific ids."
msgstr ""

#: ../../source/user/ogr_feature_style.rst:296
msgid "Here is the current list of OGR pen ids (this could grow time):"
msgstr ""

#: ../../source/user/ogr_feature_style.rst:298
msgid "ogr-pen-0: solid (the default when no id is provided)"
msgstr ""

#: ../../source/user/ogr_feature_style.rst:299
msgid "ogr-pen-1: null pen (invisible)"
msgstr ""

#: ../../source/user/ogr_feature_style.rst:300
msgid "ogr-pen-2: dash"
msgstr ""

#: ../../source/user/ogr_feature_style.rst:301
msgid "ogr-pen-3: short-dash"
msgstr ""

#: ../../source/user/ogr_feature_style.rst:302
msgid "ogr-pen-4: long-dash"
msgstr ""

#: ../../source/user/ogr_feature_style.rst:303
msgid "ogr-pen-5: dot line"
msgstr ""

#: ../../source/user/ogr_feature_style.rst:304
msgid "ogr-pen-6: dash-dot line"
msgstr ""

#: ../../source/user/ogr_feature_style.rst:305
msgid "ogr-pen-7: dash-dot-dot line"
msgstr ""

#: ../../source/user/ogr_feature_style.rst:306
msgid "ogr-pen-8: alternate-line (sets every other pixel)"
msgstr ""

#: ../../source/user/ogr_feature_style.rst:308
msgid ""
"System-specific ids are very likely to be meaningful only to that "
"specific system that created them. The ids should start with the system's"
" name, followed by a dash (-), followed by whatever information is "
"meaningful to that system (a number, a name, a filename, etc.). e.g. "
"\"mapinfo-5\", or \"mysoft-lines.sym-123\", or \"othersystems-funnyline\""
msgstr ""

#: ../../source/user/ogr_feature_style.rst:314
msgid ""
"System-specific ids are allowed in order to prevent loss of information "
"when dealing with data from systems that store line patterns in external "
"files or that have their own pre-defined set of line styles (for "
"instance, to do a MapInfo MIF to TAB translation without any loss."
msgstr ""

#: ../../source/user/ogr_feature_style.rst:321
msgid "PEN(c:#00FF00,id:\"ogr-pen-0\") - simple solid line"
msgstr ""

#: ../../source/user/ogr_feature_style.rst:322
msgid ""
"PEN(c:#00FF00,id:\"mapinfo-5,ogr-pen-7\") - corresponds to MapInfo's Pen "
"#5, and a system that can't understand MapInfo pens falls back on the "
"default \"ogr-pen-7\" pen (dot-dot line)."
msgstr ""

#: ../../source/user/ogr_feature_style.rst:327
msgid "``cap``: **Pen Cap** - Set the shape of  end points of lines."
msgstr ""

#: ../../source/user/ogr_feature_style.rst:329
msgid ""
"\"cap:b\" - Butt: The ends of the line don't extend beyond the end "
"points. This is the default."
msgstr ""

#: ../../source/user/ogr_feature_style.rst:331
msgid ""
"\"cap:r\" - Round: Terminate lines with a circle whose diameter is equal "
"to the line width."
msgstr ""

#: ../../source/user/ogr_feature_style.rst:333
msgid ""
"\"cap:p\" - Projecting: Similar to Butt, but the ends of the line extend "
"by half of line width beyond the end points."
msgstr ""

#: ../../source/user/ogr_feature_style.rst:337
msgid "``j``: **Pen Join** - Set the shape of the join point (vertex) of lines."
msgstr ""

#: ../../source/user/ogr_feature_style.rst:339
msgid ""
"\"j:m\" - Miter: Extend the outer edge of the lines until they touch. "
"This is the default."
msgstr ""

#: ../../source/user/ogr_feature_style.rst:341
msgid ""
"\"j:r\" - Rounded: Join lines with an arc whose center is at the join "
"point and whose diameter is equal to the line width."
msgstr ""

#: ../../source/user/ogr_feature_style.rst:343
msgid ""
"\"j:b\" - Bevel: Join the lines with butt end caps and fill the resulting"
" triangular notch at the join position."
msgstr ""

#: ../../source/user/ogr_feature_style.rst:347
msgid ""
"``dp``: **Perpendicular Offset**, expressed as a numeric value units (g, "
"px, pt, mm, cm, in)"
msgstr ""

#: ../../source/user/ogr_feature_style.rst:350
msgid ""
"Offset from the line center. If the offset is negative then the pen will "
"be drawn left of the main segment and right otherwise."
msgstr ""

#: ../../source/user/ogr_feature_style.rst:354
#: ../../source/user/ogr_feature_style.rst:449
#: ../../source/user/ogr_feature_style.rst:566
#: ../../source/user/ogr_feature_style.rst:713
msgid ""
"``l``: **Priority Level** - Numeric value defining the order in which "
"style parts should be drawn."
msgstr ""

#: ../../source/user/ogr_feature_style.rst:357
#: ../../source/user/ogr_feature_style.rst:452
#: ../../source/user/ogr_feature_style.rst:569
#: ../../source/user/ogr_feature_style.rst:716
msgid ""
"Lower priority style parts are drawn first, and higher priority ones are "
"drawn on top. If priority level is unspecified, the default is 1."
msgstr ""

#: ../../source/user/ogr_feature_style.rst:362
msgid "2.4 Brush Tool Parameters"
msgstr ""

#: ../../source/user/ogr_feature_style.rst:366
msgid "Point: Not applicable."
msgstr ""

#: ../../source/user/ogr_feature_style.rst:367
msgid "Polyline: Not applicable."
msgstr ""

#: ../../source/user/ogr_feature_style.rst:368
msgid "Polygon: Defines the way the surface of a polygon is filled."
msgstr ""

#: ../../source/user/ogr_feature_style.rst:370
msgid ""
"Here is the current list of BRUSH tool parameters. Note again that that "
"this list may be extended in the future, and all parameters are optional:"
msgstr ""

#: ../../source/user/ogr_feature_style.rst:374
msgid ""
"``fc``: **Brush ForeColor**, expressed in hexadecimal (#RRGGBB[AA]). Used"
" for painting the brush pattern itself."
msgstr ""

#: ../../source/user/ogr_feature_style.rst:379
#, python-format
msgid "Suggested default: 50% grey (c:#808080)"
msgstr ""

#: ../../source/user/ogr_feature_style.rst:380
msgid "Example: BRUSH(fc:#FF0000)"
msgstr ""

#: ../../source/user/ogr_feature_style.rst:383
msgid ""
"``bc``: **Brush BackColor**, expressed in hexadecimal (#RRGGBB[AA]). Used"
" for painting the area behind the brush pattern."
msgstr ""

#: ../../source/user/ogr_feature_style.rst:388
msgid "Suggested default: transparent (c:#FFFFFF00)"
msgstr ""

#: ../../source/user/ogr_feature_style.rst:389
msgid "Example: BRUSH(fc:#FF0000,bc:#FFEEDD)"
msgstr ""

#: ../../source/user/ogr_feature_style.rst:392
msgid ""
"``id``: **Brush Name or Brush Id** - Comma-delimited list of brush names "
"or ids. The names in the comma-delimited list of ids are scanned until "
"one is recognized by the target system."
msgstr ""

#: ../../source/user/ogr_feature_style.rst:396
msgid ""
"Brush Ids can be either system-specific ids (see furtherbelow) or be one "
"of the pre-defined OGR brush ids for well known brush patterns. The id "
"parameter should always include one of the OGR ids at the end of the "
"comma-delimited list of ids so that an application never has to rely on "
"understanding system-specific ids."
msgstr ""

#: ../../source/user/ogr_feature_style.rst:402
msgid "Here is the current list of OGR brush ids (this could grow over time):"
msgstr ""

#: ../../source/user/ogr_feature_style.rst:406
msgid "ogr-brush-0: solid foreground color (the default when no id  is provided)"
msgstr ""

#: ../../source/user/ogr_feature_style.rst:407
msgid ""
"ogr-brush-1: null brush (transparent - no fill, irrespective of fc or bc "
"values"
msgstr ""

#: ../../source/user/ogr_feature_style.rst:409
msgid "ogr-brush-2: horizontal hatch"
msgstr ""

#: ../../source/user/ogr_feature_style.rst:410
msgid "ogr-brush-3: vertical hatch"
msgstr ""

#: ../../source/user/ogr_feature_style.rst:411
msgid "ogr-brush-4: top-left to bottom-right diagonal hatch"
msgstr ""

#: ../../source/user/ogr_feature_style.rst:412
msgid "ogr-brush-5: bottom-left to top-right diagonal hatch"
msgstr ""

#: ../../source/user/ogr_feature_style.rst:413
msgid "ogr-brush-6: cross hatch"
msgstr ""

#: ../../source/user/ogr_feature_style.rst:414
msgid "ogr-brush-7: diagonal cross hatch"
msgstr ""

#: ../../source/user/ogr_feature_style.rst:416
msgid ""
"Like with Pen Ids, system-specific brush ids are very likely to be "
"meaningful only to that specific system that created them. The ids should"
" start with the system's name, followed by a dash (-), followed by "
"whatever information is meaningful to that system (a number, a name, a "
"filename, etc.)."
msgstr ""

#: ../../source/user/ogr_feature_style.rst:421
msgid ""
"The following conventions will be used for common system-specific brush "
"ids:"
msgstr ""

#: ../../source/user/ogr_feature_style.rst:423
msgid "\"bmp-filename.bmp\" for Windows BMP patterns"
msgstr ""

#: ../../source/user/ogr_feature_style.rst:425
msgid ""
"Other conventions may be added in the future (such as vector symbols, "
"WMF, etc)."
msgstr ""

#: ../../source/user/ogr_feature_style.rst:429
msgid ""
"``a``: **Angle** - Rotation angle (in degrees, counterclockwise) to apply"
" to the brush pattern."
msgstr ""

#: ../../source/user/ogr_feature_style.rst:433
msgid "``s``: **Size or Scaling Factor** - Numeric value with or without units."
msgstr ""

#: ../../source/user/ogr_feature_style.rst:435
msgid ""
"If units are specified, then this value is the absolute size to draw the "
"brush or symbol. If no units are specified then it is taken as a scaling "
"factor relative to the symbol's default size."
msgstr ""

#: ../../source/user/ogr_feature_style.rst:440
msgid ""
"``dx``, ``dy``: **Spacing**, expressed as a numeric value with units (g, "
"px, pt, mm, cm, in)"
msgstr ""

#: ../../source/user/ogr_feature_style.rst:443
msgid ""
"If filling an area using point symbols, these values will define the "
"spacing to use between them. \"dx\" is the horizontal distance between "
"the center of two adjacent symbols and \"dy\" is the vertical distance. "
"The default is to use the symbol's bounding box width and height for dx "
"and dy respectively."
msgstr ""

#: ../../source/user/ogr_feature_style.rst:457
msgid "2.5 Symbol Tool Parameters"
msgstr ""

#: ../../source/user/ogr_feature_style.rst:461
msgid "Point: Place a symbol at the point's location"
msgstr ""

#: ../../source/user/ogr_feature_style.rst:462
msgid ""
"Polyline: Place symbols along the polyline, either at each vertex, or "
"equally spaced."
msgstr ""

#: ../../source/user/ogr_feature_style.rst:464
msgid "Polygon: Place the symbols on the outline of the polygon."
msgstr ""

#: ../../source/user/ogr_feature_style.rst:466
msgid ""
"Here is the current list of SYMBOL tool parameters. Note again that that "
"this list may be extended in the future, and all parameters are optional:"
msgstr ""

#: ../../source/user/ogr_feature_style.rst:470
msgid ""
"``id``: **Symbol Name or Id** - Comma-delimited list of symbol names or "
"ids."
msgstr ""

#: ../../source/user/ogr_feature_style.rst:472
msgid ""
"The names in the comma-delimited list of ids are scanned until one is "
"recognized by the target system."
msgstr ""

#: ../../source/user/ogr_feature_style.rst:475
msgid ""
"Symbol Ids can be either system-specific ids (see further below) or be "
"one of the pre-defined OGR symbol ids for well known symbols. The id "
"parameter should always include one of the OGR ids at the end of the "
"comma-delimited list of ids so that an application never has to rely on "
"understanding system-specific ids."
msgstr ""

#: ../../source/user/ogr_feature_style.rst:481
msgid "Here is the current list of OGR symbol ids (this could grow over time):"
msgstr ""

#: ../../source/user/ogr_feature_style.rst:485
msgid "ogr-sym-0: cross (+)"
msgstr ""

#: ../../source/user/ogr_feature_style.rst:486
msgid "ogr-sym-1: diagcross (X)"
msgstr ""

#: ../../source/user/ogr_feature_style.rst:487
msgid "ogr-sym-2: circle (not filled)"
msgstr ""

#: ../../source/user/ogr_feature_style.rst:488
msgid "ogr-sym-3: circle (filled)"
msgstr ""

#: ../../source/user/ogr_feature_style.rst:489
msgid "ogr-sym-4: square (not filled)"
msgstr ""

#: ../../source/user/ogr_feature_style.rst:490
msgid "ogr-sym-5: square (filled)"
msgstr ""

#: ../../source/user/ogr_feature_style.rst:491
msgid "ogr-sym-6: triangle (not filled)"
msgstr ""

#: ../../source/user/ogr_feature_style.rst:492
msgid "ogr-sym-7: triangle (filled)"
msgstr ""

#: ../../source/user/ogr_feature_style.rst:493
msgid "ogr-sym-8: star (not filled)"
msgstr ""

#: ../../source/user/ogr_feature_style.rst:494
msgid "ogr-sym-9: star (filled)"
msgstr ""

#: ../../source/user/ogr_feature_style.rst:495
msgid ""
"ogr-sym-10: vertical bar (can be rotated using angle attribute to produce"
" diagonal bar)"
msgstr ""

#: ../../source/user/ogr_feature_style.rst:498
msgid ""
"Like with Pen Ids, system-specific symbol ids are very likely to be "
"meaningful only to that specific system that created them. The ids should"
" start with the system's name, followed by a dash (-), followed by "
"whatever information is meaningful to that system (a number, a name, a "
"filename, etc.)."
msgstr ""

#: ../../source/user/ogr_feature_style.rst:503
msgid ""
"The following conventions will be used for common system-specific symbol "
"ids:"
msgstr ""

#: ../../source/user/ogr_feature_style.rst:505
msgid "\"bmp-filename.bmp\" for Windows BMP symbols"
msgstr ""

#: ../../source/user/ogr_feature_style.rst:506
#, python-format
msgid ""
"\"font-sym-%d\" for a font symbols, where %d is a glyph number inside a "
"font, font family is defined by **f** style field."
msgstr ""

#: ../../source/user/ogr_feature_style.rst:509
msgid ""
"Other conventions may be added in the future (such as vector symbols, "
"WMF, etc.)"
msgstr ""

#: ../../source/user/ogr_feature_style.rst:513
msgid ""
"``a``: **Angle** - Rotation angle (in degrees, counterclockwise) to apply"
" to the symbol."
msgstr ""

#: ../../source/user/ogr_feature_style.rst:517
msgid "``c``: **Symbol Color**, expressed in hexadecimal (#RRGGBB[AA])"
msgstr ""

#: ../../source/user/ogr_feature_style.rst:521
msgid "Suggested default symbol color: black (c:#000000)"
msgstr ""

#: ../../source/user/ogr_feature_style.rst:522
#: ../../source/user/ogr_feature_style.rst:561
#: ../../source/user/ogr_feature_style.rst:578
#: ../../source/user/ogr_feature_style.rst:603
msgid "Example ::"
msgstr ""

#: ../../source/user/ogr_feature_style.rst:526
msgid "``o``: **Symbol Outline Color**, expressed in hexadecimal (#RRGGBB[AA])."
msgstr ""

#: ../../source/user/ogr_feature_style.rst:528
msgid ""
"If this parameter is set, an additional halo or border of this color is "
"drawn around the symbol."
msgstr ""

#: ../../source/user/ogr_feature_style.rst:532
msgid "``s``:  **Size or Scaling Factor** - Numeric value with or without units."
msgstr ""

#: ../../source/user/ogr_feature_style.rst:534
msgid ""
"If units are specified, then this value is the absolute size to draw the "
"symbol. If no units are specified then it is taken as a scaling factor "
"relative to the symbol's default size."
msgstr ""

#: ../../source/user/ogr_feature_style.rst:539
msgid ""
"``dx``, ``dy``: **X and Y offset**, of the symbol's insertion point, "
"expressed as a numeric value with units (g, px, pt, mm, cm, in)"
msgstr ""

#: ../../source/user/ogr_feature_style.rst:542
msgid ""
"Applies to point geometries, and to symbols placed at each vertex of a "
"polyline."
msgstr ""

#: ../../source/user/ogr_feature_style.rst:546
msgid ""
"``ds``, ``dp``, ``di``: **Spacing parameters** for symbols spaced along a"
" line, expressed as a numeric value with units (g, px, pt, mm, cm, in)."
msgstr ""

#: ../../source/user/ogr_feature_style.rst:549
msgid ""
"``ds`` is the step to use when  placing symbols along the line. By "
"default, symbols applied to a feature with a line geometry are placed at "
"each vertex, butsetting \"ds\" triggers the placement of symbols at an "
"equal distance along the line. \"ds\" has no effect for a feature with a "
"point geometry."
msgstr ""

#: ../../source/user/ogr_feature_style.rst:555
msgid ""
"``dp`` can be used together with \"ds\" to specify the perpendicular "
"distance between the symbols' center and the line along which they're "
"placed."
msgstr ""

#: ../../source/user/ogr_feature_style.rst:558
msgid ""
"``di`` can be used to specify an initial offset from the beginning of the"
" line."
msgstr ""

#: ../../source/user/ogr_feature_style.rst:573
#: ../../source/user/ogr_feature_style.rst:598
msgid "``f``: **Font Name** - Comma-delimited list of fonts names."
msgstr ""

#: ../../source/user/ogr_feature_style.rst:575
#: ../../source/user/ogr_feature_style.rst:600
msgid ""
"Works like the CSS font-family property: the list of font names is "
"scanned until a known font name is encountered."
msgstr ""

#: ../../source/user/ogr_feature_style.rst:584
msgid "2.6 Label Tool Parameters"
msgstr ""

#: ../../source/user/ogr_feature_style.rst:588
msgid "Point: Place a text label at the point's location"
msgstr ""

#: ../../source/user/ogr_feature_style.rst:589
msgid "Polyline: Place text along the polyline."
msgstr ""

#: ../../source/user/ogr_feature_style.rst:590
msgid ""
"Polygon: Place a label at the centroid of the polygon. All parameters "
"behave exactly as if the geometry was a point located at the polygon's "
"centroid."
msgstr ""

#: ../../source/user/ogr_feature_style.rst:594
msgid ""
"Here is the current list of LABEL tool parameters. Note again that that "
"this list may be extended in the future, and all parameters are optional:"
msgstr ""

#: ../../source/user/ogr_feature_style.rst:608
msgid ""
"``s``: **Font Size**, expressed as a numeric value with units (g, px, pt,"
" mm, cm, in)."
msgstr ""

#: ../../source/user/ogr_feature_style.rst:611
msgid ""
"In the CAD world, font size, or \"text height\", determines the height of"
" a capital letter - what typographers call \"cap height\". But in the "
"worlds of typesetting, graphics and cartography, font size refers to the "
"\"em height\" of the font, which is taller than the cap height. This "
"means that text assigned a height of 1 inch in a DXF file will look "
"larger (often about 45% larger) than 72-point text in a PDF file or "
"MapInfo map. At present, GDAL vector drivers treat the \"s:\" style "
"string value as whichever font size measurement (cap height or em height)"
" is used natively by that format, which may result in incorrect text "
"sizing when using the ogr2ogr tool. This parameter could be subject to "
"clearer specification in the future."
msgstr ""

#: ../../source/user/ogr_feature_style.rst:623
msgid ""
"``t``: **Text String** - Can be a constant string, or a reference to an "
"attribute field's value."
msgstr ""

#: ../../source/user/ogr_feature_style.rst:626
msgid ""
"If a double-quote character or backslash (\\) character is present in the"
" string, it is escaped with a backslash character before it."
msgstr ""

#: ../../source/user/ogr_feature_style.rst:629
msgid "Examples ::"
msgstr ""

#: ../../source/user/ogr_feature_style.rst:636
msgid "``a``: **Angle** - Rotation angle (in degrees, counterclockwise)."
msgstr ""

#: ../../source/user/ogr_feature_style.rst:638
msgid ""
"``c``: **Text Foreground Color**, expressed in hexadecimal (#RRGGBB[AA]) "
"Suggested default: black (c:#000000)"
msgstr ""

#: ../../source/user/ogr_feature_style.rst:641
msgid ""
"``b``: **Text Background Color** - Color of the filled box to draw behind"
" the label, expressed in hexadecimal (#RRGGBB[AA]). No box drawn if not "
"set."
msgstr ""

#: ../../source/user/ogr_feature_style.rst:644
msgid ""
"``o``: **Text Outline Color** - Color of the text outline (halo in "
"MapInfo terminology), expressed in hexadecimal (#RRGGBB[AA]). No outline "
"if not set."
msgstr ""

#: ../../source/user/ogr_feature_style.rst:647
msgid ""
"``h``: **Shadow Color** - Color of the text shadow, expressed in "
"hexadecimal (#RRGGBB[AA]). No shadow if not set."
msgstr ""

#: ../../source/user/ogr_feature_style.rst:650
#, python-format
msgid ""
"``w``: **Stretch** - The stretch factor changes the width of all "
"characters in the font by the given percentage. For example, a setting of"
" 150 results in all characters in the font being stretched to 150% of "
"their usual width. The default stretch factor is 100."
msgstr ""

#: ../../source/user/ogr_feature_style.rst:655
msgid ""
"``m``: **Label Placement Mode** - How the text is drawn relative to the "
"feature's geometry."
msgstr ""

#: ../../source/user/ogr_feature_style.rst:658
msgid ""
"\"m:p\" - The default. A simple label is attached to a point or to the "
"first vertex of a polyline."
msgstr ""

#: ../../source/user/ogr_feature_style.rst:660
msgid ""
"\"m:l\" - Text is attached to the last vertex of a polyline. A PEN tool "
"can be combined with this LABEL tool to draw the polyline as a leader to "
"the label."
msgstr ""

#: ../../source/user/ogr_feature_style.rst:663
msgid ""
"\"m:s\" - Stretch the text string along a polyline, with an equal spacing"
" between each character."
msgstr ""

#: ../../source/user/ogr_feature_style.rst:665
msgid ""
"\"m:m\" - Place text as a single label at the middle of a polyline (based"
" on total line length)."
msgstr ""

#: ../../source/user/ogr_feature_style.rst:667
msgid "\"m:w\" - One word per line segment in a polyline."
msgstr ""

#: ../../source/user/ogr_feature_style.rst:668
msgid ""
"\"m:h\" - Every word of text attached to polyline is placed horizontally "
"in its segment, anchor point is a center of segment."
msgstr ""

#: ../../source/user/ogr_feature_style.rst:670
msgid ""
"\"m:a\" - Every word of text attached to polyline is stretched to fit the"
" segment of polyline and placed along that segment. The anchor point is a"
" start of a segment."
msgstr ""

#: ../../source/user/ogr_feature_style.rst:675
msgid ""
"``p``: **Anchor Position** - A value from 1 to 12 defining the label's "
"position relative to the point to which it is attached"
msgstr ""

#: ../../source/user/ogr_feature_style.rst:678
msgid ""
"There are four vertical alignment modes: *baseline*, *center*, *top* and "
"*bottom*; and three horizontal modes: *left*, *center* and *right*."
msgstr ""

#: ../../source/user/ogr_feature_style.rst:683
msgid ""
"Currently, the precise interpretation of these values (for example, "
"whether accents on uppercase letters sit above or below the alignment "
"point with p:7) differs from file format to file format. This parameter "
"could be subject to clearer specification in the future."
msgstr ""

#: ../../source/user/ogr_feature_style.rst:689
msgid ""
"``dx``, ``dy``: **X and Y offset** of the label's insertion point, "
"expressed as a numeric value with units (g, px, pt, mm, cm, in)."
msgstr ""

#: ../../source/user/ogr_feature_style.rst:692
msgid "Applies to text placed on a point, or at each vertex of a polyline."
msgstr ""

#: ../../source/user/ogr_feature_style.rst:695
msgid ""
"``dp``: **Perpendicular Offset** for labels placed along a line, "
"expressed as a numeric value with units (g, px, pt, mm, cm, in)."
msgstr ""

#: ../../source/user/ogr_feature_style.rst:698
msgid ""
"\"dp\" specifies the perpendicular distance between the label and the "
"line along which it is placed. If the offset is negative then the label "
"will be shifted left of the main segment, and right otherwise."
msgstr ""

#: ../../source/user/ogr_feature_style.rst:703
msgid "``bo``: **Bold** - Set to 1 for bold text. Set to 0 or omitted otherwise."
msgstr ""

#: ../../source/user/ogr_feature_style.rst:705
msgid ""
"``it``: **Italic** - Set to 1 for italic text. Set to 0 or omitted "
"otherwise."
msgstr ""

#: ../../source/user/ogr_feature_style.rst:707
msgid ""
"``un``: **Underline** - Set to 1 for underlined text. Set to 0 or omitted"
" otherwise."
msgstr ""

#: ../../source/user/ogr_feature_style.rst:710
msgid ""
"``st``:  **Strikethrough** - Set to 1 for struck-through text. Set to 0 "
"or omitted otherwise."
msgstr ""

#: ../../source/user/ogr_feature_style.rst:721
msgid "2.7 Styles Table Format"
msgstr ""

#: ../../source/user/ogr_feature_style.rst:723
msgid ""
"For file formats that support tables of styles, then the predefined "
"styles would be stored in that format."
msgstr ""

#: ../../source/user/ogr_feature_style.rst:726
msgid ""
"For file formats that do not support tables of styles, then the style "
"table could be stored in a text file with a .ofs (OGR Feature Styles) "
"extension and the same basename as the dataset. This would apply to "
"formats like Esri Shapefile."
msgstr ""

#: ../../source/user/ogr_feature_style.rst:731
msgid "Here is an example of a .ofs file:"
msgstr ""

#: ../../source/user/ogr_feature_style.rst:744
msgid ""
"The first line is a signature with a version number, which must be "
"present."
msgstr ""

#: ../../source/user/ogr_feature_style.rst:747
msgid ""
"The second line (StyleField: \"style\") is the name of the attribute "
"field in which the Feature Style String is stored for each object in the "
"corresponding layer. This is optional, if not set, then the objects in "
"the layer will all share the same style defined in DefaultStyle."
msgstr ""

#: ../../source/user/ogr_feature_style.rst:752
msgid ""
"The third line (DefaultStyle:...) defines the style that applies by "
"default to all objects that have no explicit style."
msgstr ""

#: ../../source/user/ogr_feature_style.rst:755
msgid "Then the list of style definitions follow."
msgstr ""

#: ../../source/user/ogr_feature_style.rst:758
msgid "2.8 Using OGR SQL to transfer the style between the data sources"
msgstr ""

#: ../../source/user/ogr_feature_style.rst:760
msgid ""
"You can use the **OGR_STYLE** special field to extract the feature level "
"style, and ogr2ogr can be used to transfer the style string between data "
"sources according to the following example:"
msgstr ""

#: ../../source/user/ogr_feature_style.rst:768
msgid ""
"Without specifying the length of the style field, the output driver may "
"truncate the length to a default value. Therefore it may be necessary to "
"specify the target length manually, like:"
msgstr ""

#: ../../source/user/ogr_feature_style.rst:776
msgid ""
"OGR is aware of using the OGR_STYLE field if it exists, and "
"OGRFeature::GetStyleString will return the value of this field if no "
"style string has been specified programmatically."
msgstr ""

#: ../../source/user/ogr_feature_style.rst:785
msgid "3. OGR Support Classes"
msgstr ""

#: ../../source/user/ogr_feature_style.rst:787
msgid ""
"The :cpp:class:`OGRFeature` class has member functions "
":cpp:func:`OGRFeature::GetStyleString`, "
":cpp:func:`OGRFeature::SetStyleString` and "
":cpp:func:`OGRFeature::SetStyleStringDirectly` which may be used to "
"interact with a feature's style string as a C-style string. Additionally,"
" there are :cpp:func:`OGRFeature::GetStyleTable`, "
":cpp:func:`OGRFeature::SetStyleTable` and "
":cpp:func:`OGRFeature::SetStyleTableDirectly` for managing style tables "
"as instances of the :cpp:class:`OGRStyleTable` class."
msgstr ""

#: ../../source/user/ogr_feature_style.rst:794
msgid ""
"The :cpp:class:`OGRLayer` and :cpp:class:`GDALDataset` classes also have "
":cpp:func:`OGRLayer::GetStyleTable`, :cpp:func:`OGRLayer::SetStyleTable` "
"and :cpp:func:`OGRLayer::SetStyleTableDirectly` member functions."
msgstr ""

#: ../../source/user/ogr_feature_style.rst:797
msgid ""
"To parse style strings, the :cpp:class:`OGRStyleMgr` class is used. Each "
"style tool in the string is accessed as an instance of the "
":cpp:class:`OGRStyleTool` class. Lastly, four helper classes exist, one "
"for each tool (:cpp:class:`OGRStylePen`, :cpp:class:`OGRStyleBrush`, "
":cpp:class:`OGRStyleSymbol`, :cpp:class:`OGRStyleLabel`), with each "
"available parameter represented by a getter and setter member function. "
"To understand these classes better, it may be useful to read the "
":source_file:`ogr/ogr_featurestyle.h` and "
":source_file:`ogr/ogrfeaturestyle.cpp` code files."
msgstr ""

#: ../../source/user/ogr_feature_style.rst:810
msgid "Here is some example C++ code:"
msgstr ""

#: ../../source/user/ogr_feature_style.rst:888
msgid "Revision history"
msgstr ""

#: ../../source/user/ogr_feature_style.rst:890
msgid ""
"**Version 0.016 - 2018-12-03 - Andrew Sudorgin** Restored and documented "
"font property for point symbols"
msgstr ""

#: ../../source/user/ogr_feature_style.rst:892
msgid ""
"**Version 0.015 - 2018-01-08 - Alan Thomas** Update outdated material; "
"minor changes to BRUSH 'id' and LABEL 't', 'bo', 'it', 'un', 'st'; "
"clarify BRUSH 'fc', 'bc', SYMBOL 'o' and LABEL 's', 'w', 'p'"
msgstr ""

#: ../../source/user/ogr_feature_style.rst:896
msgid ""
"**Version 0.014 - 2011-07-24 - Even Rouault** Mention the escaping of "
"double-quote characters in the text string of a LABEL (ticket #3675)"
msgstr ""

#: ../../source/user/ogr_feature_style.rst:899
msgid ""
"**Version 0.013 - 2008-07-29 - Daniel Morissette** Added 'o:' for font "
"point symbol outline color (ticket #2509)"
msgstr ""

#: ../../source/user/ogr_feature_style.rst:901
msgid ""
"**Version 0.012 - 2008-07-21 - Daniel Morissette** Added 'o:' for text "
"outline color and updated 'b:' to be specifically a filled label "
"background box (ticket #2480)"
msgstr ""

#: ../../source/user/ogr_feature_style.rst:904
msgid ""
"**Version 0.011 - 2008-02-28 - Tamas Szekeres** Note about OGR SQL to "
"transfer the style between the data sources"
msgstr ""

#: ../../source/user/ogr_feature_style.rst:906
msgid ""
"**Version 0.010 - 2006-09-23- Andrey Kiselev** Added label styles 'w', "
"'st', 'h', 'm:h', 'm:a', 'p:{10,11,12}'"
msgstr ""

#: ../../source/user/ogr_feature_style.rst:908
msgid ""
"**Version 0.009 - 2005-03-11- Frank Warmerdam** Remove reference to "
"OGRWin, move into ogr distribution"
msgstr ""

#: ../../source/user/ogr_feature_style.rst:910
msgid ""
"**Version 0.008 - 2001-03-21- Frank Warmerdam** Fix minor typos (h:12pt "
"instead of s:12pt in examples)"
msgstr ""

#: ../../source/user/ogr_feature_style.rst:912
msgid ""
"**Version 0.008 - 2000-07-15 - Stephane Villeneuve** Remove style table "
"in Layer. Add forecolor and backcolor to brush."
msgstr ""

#: ../../source/user/ogr_feature_style.rst:914
msgid ""
"**Version 0.007 - 2000-06-22 - Daniel Morissette** Fixed typo and added "
"offset param for PEN."
msgstr ""

#: ../../source/user/ogr_feature_style.rst:916
msgid ""
"**Version 0.006 - 2000-06-20 - Daniel Morissette** Added the OGR-Win idea"
" and made small changes here and there."
msgstr ""

#: ../../source/user/ogr_feature_style.rst:918
msgid ""
"**Version 0.005 - 2000-06-12 - Daniel Morissette** Allow passing of "
"comma-delimited list of names in PEN's \"id\" parameter. Defined system-"
"independent pen style names."
msgstr ""

#: ../../source/user/ogr_feature_style.rst:922
msgid ""
"**Version 0.004 - 2000-06-09 - Stephane Villeneuve** Added PEN cap and "
"join parameters More clearly defined the API"
msgstr ""

#: ../../source/user/ogr_feature_style.rst:925
msgid ""
"**Version 0.003 - 2000-02-15 - Daniel Morissette** First kind-of-complete"
" version."
msgstr ""

#: ../../source/user/ogr_sql_dialect.rst:5
msgid "OGR SQL dialect"
msgstr ""

#: ../../source/user/ogr_sql_dialect.rst:9
msgid ""
"The GDALDataset supports executing commands against a datasource via the "
":cpp:func:`GDALDataset::ExecuteSQL` method.  While in theory any sort of "
"command could be handled this way, in practice the mechanism is used to "
"provide a subset of SQL SELECT capability to applications.  This page "
"discusses the generic SQL implementation implemented within OGR, and "
"issues with driver specific SQL support."
msgstr ""

#: ../../source/user/ogr_sql_dialect.rst:16
msgid ""
"The ``OGRSQL`` dialect can be requested with the ``OGRSQL`` string passed"
" as the dialect parameter of :cpp:func:`GDALDataset::ExecuteSQL`, or with"
" the `-dialect` option switch of the :ref:`ogrinfo` or :ref:`ogr2ogr` "
"utilities."
msgstr ""

#: ../../source/user/ogr_sql_dialect.rst:20
msgid ""
"An alternate dialect, the ``SQLite`` dialect, can be used instead of the "
"``OGRSQL`` dialect. Refer to the :ref:`sql_sqlite_dialect` page for more "
"details."
msgstr ""

#: ../../source/user/ogr_sql_dialect.rst:23
msgid ""
"The OGRLayer class also supports applying an attribute query filter to "
"features returned using the :cpp:func:`OGRLayer::SetAttributeFilter()` "
"method.  The syntax for the attribute filter is the same as the WHERE "
"clause in the OGR SQL SELECT statement.  So everything here with regard "
"to the WHERE clause applies in the context of the "
"``SetAttributeFilter()`` method."
msgstr ""

#: ../../source/user/ogr_sql_dialect.rst:30
msgid "SELECT"
msgstr ""

#: ../../source/user/ogr_sql_dialect.rst:32
msgid ""
"The SELECT statement is used to fetch layer features (analogous to table "
"rows in an RDBMS) with the result of the query represented as a temporary"
" layer of features. The layers of the datasource are analogous to tables "
"in an RDBMS and feature attributes are analogous to column values. The "
"simplest form of OGR SQL SELECT statement looks like this:"
msgstr ""

#: ../../source/user/ogr_sql_dialect.rst:42
msgid ""
"In this case all features are fetched from the layer named \"polylayer\","
" and all attributes of those features are returned. This is essentially "
"equivalent to accessing the layer directly. In this example the \"*\" is "
"the list of fields to fetch from the layer, with \"*\" meaning that all "
"fields should be fetched."
msgstr ""

#: ../../source/user/ogr_sql_dialect.rst:48
msgid ""
"This slightly more sophisticated form still pulls all features from the "
"layer but the schema will only contain the geometry column and the EAS_ID"
" and PROP_VALUE attributes. With OGR SQL dialect the geometry column is "
"always included in the result so it does not need to appear in the SQL "
"statement."
msgstr ""

#: ../../source/user/ogr_sql_dialect.rst:57
msgid ""
"A much more ambitious SELECT, restricting the features fetched with a "
"WHERE clause, and sorting the results might look like:"
msgstr ""

#: ../../source/user/ogr_sql_dialect.rst:64
msgid ""
"This select statement will produce a table with just one feature, with "
"geometry and one attribute (named something like \"count_eas_id\") "
"containing the number of distinct values of the eas_id attribute."
msgstr ""

#: ../../source/user/ogr_sql_dialect.rst:73
msgid "General syntax"
msgstr ""

#: ../../source/user/ogr_sql_dialect.rst:75
msgid "The general syntax of a SELECT statement is:"
msgstr ""

#: ../../source/user/ogr_sql_dialect.rst:84
msgid "List Operators"
msgstr ""

#: ../../source/user/ogr_sql_dialect.rst:86
msgid ""
"The field list is a comma-separated list of the fields to be carried into"
" the output features from the source layer.  They will appear on output "
"features in the order they appear on in the field list, so the field list"
" may be used to re-order the fields. The special character ``*`` is taken"
" to mean \"all fields\". The syntax ``* EXCLUDE ([fields])`` can be used "
"to select all fields except those listed in parentheses."
msgstr ""

#: ../../source/user/ogr_sql_dialect.rst:93
msgid ""
"A special form of the field list uses the DISTINCT keyword.  This returns"
" a list of all the distinct values of the named attribute.  When the "
"DISTINCT keyword is used, only one attribute may appear in the field "
"list.  The DISTINCT keyword may be used against any type of field.  "
"Currently the distinctness test against a string value is case "
"insensitive in OGR SQL.  The result of a SELECT with a DISTINCT keyword "
"is a layer with one column (named the same as the field operated on), and"
" one feature per distinct value.  Geometries are discarded.  The distinct"
" values are assembled in memory, so a lot of memory may be used for "
"datasets with a large number of distinct values."
msgstr ""

#: ../../source/user/ogr_sql_dialect.rst:108
msgid ""
"There are also several summarization operators that may be applied to "
"columns. When a summarization operator is applied to any field, then all "
"fields must have summarization operators applied.   The summarization "
"operators are COUNT (a count of instances), AVG (numerical average), SUM "
"(numerical sum), MIN (lexical or numerical minimum), and MAX (lexical or "
"numerical maximum). This example produces a variety of summarization "
"information on parcel property values:"
msgstr ""

#: ../../source/user/ogr_sql_dialect.rst:121
msgid ""
"It is also possible to apply the COUNT() operator to a DISTINCT SELECT to"
" get a count of distinct values, for instance:"
msgstr ""

#: ../../source/user/ogr_sql_dialect.rst:128
msgid ""
"As a special case, the COUNT() operator can be given a \"*\" argument "
"instead of a field name which is a short form for count all the records."
msgstr ""

#: ../../source/user/ogr_sql_dialect.rst:136
msgid ""
"Field names can also be prefixed by a table name though this is only "
"really meaningful when performing joins.  It is further demonstrated in "
"the JOIN section."
msgstr ""

#: ../../source/user/ogr_sql_dialect.rst:140
msgid ""
"Field definitions can also be complex expressions using arithmetic, and "
"functional operators. However, the DISTINCT keyword, and summarization "
"operators like MIN, MAX, AVG and SUM may not be applied to expression "
"fields. Boolean resulting expressions (comparisons, logical operators) "
"can also be used."
msgstr ""

#: ../../source/user/ogr_sql_dialect.rst:149
msgid "or"
msgstr ""

#: ../../source/user/ogr_sql_dialect.rst:157
msgid "Functions"
msgstr ""

#: ../../source/user/ogr_sql_dialect.rst:159
msgid ""
"The SUBSTR function can be used to extract a substring from a string. Its"
" syntax is the following one : SUBSTR(string_expr, start_offset [, "
"length]). It extracts a substring of string_expr, starting at offset "
"start_offset (1 being the first character of string_expr, 2 the second "
"one, etc...). If start_offset is a negative value, the substring is "
"extracted from the end of the string (-1 is the last character of the "
"string, -2 the character before the last character, ...). If length is "
"specified, up to length characters are extracted from the string. "
"Otherwise the remainder of the string is extracted."
msgstr ""

#: ../../source/user/ogr_sql_dialect.rst:167
msgid ""
"Note: for the time being, the character as considered to be equivalent to"
" bytes, which may not be appropriate for multi-byte encodings like UTF-8."
msgstr ""

#: ../../source/user/ogr_sql_dialect.rst:176
msgid ""
"The ``hstore_get_value()`` function can be used to extract a value "
"associate to a key from a HSTORE string, formatted like "
"'key=>value,other_key=>other_value,...'"
msgstr ""

#: ../../source/user/ogr_sql_dialect.rst:184
msgid "Using the field name alias"
msgstr ""

#: ../../source/user/ogr_sql_dialect.rst:186
msgid ""
"OGR SQL supports renaming the fields following the SQL92 specification by"
" using the AS keyword according to the following example:"
msgstr ""

#: ../../source/user/ogr_sql_dialect.rst:193
msgid ""
"The field name alias can be used as the last operation in the column "
"specification. Therefore we cannot rename the fields inside an operator, "
"but we can rename whole column expression, like these two:"
msgstr ""

#: ../../source/user/ogr_sql_dialect.rst:203
msgid "Changing the type of the fields"
msgstr ""

#: ../../source/user/ogr_sql_dialect.rst:205
msgid ""
"OGR SQL supports changing the type of the columns by using the SQL92 "
"compliant CAST operator according to the following example:"
msgstr ""

#: ../../source/user/ogr_sql_dialect.rst:212
msgid "Currently casting to the following target types are supported:"
msgstr ""

#: ../../source/user/ogr_sql_dialect.rst:214
msgid "boolean"
msgstr ""

#: ../../source/user/ogr_sql_dialect.rst:215
msgid "character(field_length). By default, field_length=1."
msgstr ""

#: ../../source/user/ogr_sql_dialect.rst:216
msgid "float(field_length)"
msgstr ""

#: ../../source/user/ogr_sql_dialect.rst:217
msgid "numeric(field_length, field_precision)"
msgstr ""

#: ../../source/user/ogr_sql_dialect.rst:218
msgid "smallint(field_length) : 16 bit signed integer"
msgstr ""

#: ../../source/user/ogr_sql_dialect.rst:219
msgid "integer(field_length)"
msgstr ""

#: ../../source/user/ogr_sql_dialect.rst:220
msgid "bigint(field_length), 64 bit integer, extension to SQL92"
msgstr ""

#: ../../source/user/ogr_sql_dialect.rst:221
msgid "date(field_length)"
msgstr ""

#: ../../source/user/ogr_sql_dialect.rst:222
msgid "time(field_length)"
msgstr ""

#: ../../source/user/ogr_sql_dialect.rst:223
msgid "timestamp(field_length)"
msgstr ""

#: ../../source/user/ogr_sql_dialect.rst:224
msgid "geometry, geometry(geometry_type), geometry(geometry_type,epsg_code)"
msgstr ""

#: ../../source/user/ogr_sql_dialect.rst:226
msgid ""
"Specifying the field_length and/or the field_precision is optional.  An "
"explicit value of zero can be used as the width for character() to "
"indicate variable width.  Conversion to the 'integer list', 'double list'"
" and 'string list' OGR data types are not supported, which doesn't "
"conform to the SQL92 specification."
msgstr ""

#: ../../source/user/ogr_sql_dialect.rst:232
msgid ""
"While the CAST operator can be applied anywhere in an expression, "
"including in a WHERE clause, the detailed control of output field format "
"is only supported if the CAST operator is the \"outer most\" operators on"
" a field in the field definition list.  In other contexts it is still "
"useful to convert between numeric, string and date data types."
msgstr ""

#: ../../source/user/ogr_sql_dialect.rst:238
msgid ""
"Casting a WKT string to a geometry is allowed. geometry_type can be "
"POINT[Z], LINESTRING[Z], POLYGON[Z], MULTIPOINT[Z], MULTILINESTRING[Z], "
"MULTIPOLYGON[Z], GEOMETRYCOLLECTION[Z] or GEOMETRY[Z]."
msgstr ""

#: ../../source/user/ogr_sql_dialect.rst:243
msgid "String literals and identifiers quoting"
msgstr ""

#: ../../source/user/ogr_sql_dialect.rst:245
msgid ""
"Strict SQL92 rules are applied regarding string literals and identifiers "
"quoting."
msgstr ""

#: ../../source/user/ogr_sql_dialect.rst:247
msgid ""
"String literals (constants) must be surrounded with single-quote "
"characters. e.g. WHERE a_field = 'a_value'"
msgstr ""

#: ../../source/user/ogr_sql_dialect.rst:250
msgid ""
"Identifiers (column names and tables names) can be used unquoted if they "
"don't contain special characters or are not a SQL reserved keyword. "
"Otherwise they must be surrounded with double-quote characters. e.g. "
"WHERE \"from\" = 5."
msgstr ""

#: ../../source/user/ogr_sql_dialect.rst:255
msgid "WHERE"
msgstr ""

#: ../../source/user/ogr_sql_dialect.rst:257
msgid ""
"The argument to the WHERE clause is a logical expression used select "
"records from the source layer.  In addition to its use within the WHERE "
"statement, the WHERE clause handling is also used for OGR attribute "
"queries on regular layers via :cpp:func:`OGRLayer::SetAttributeFilter`."
msgstr ""

#: ../../source/user/ogr_sql_dialect.rst:262
msgid ""
"In addition to the arithmetic and other functional operators available in"
" expressions in the field selection clause of the SELECT statement, in "
"the WHERE context logical operators are also available and the evaluated "
"value of the expression should be logical (true or false)."
msgstr ""

#: ../../source/user/ogr_sql_dialect.rst:267
msgid ""
"The available logical operators are ``=``, ``!=``, ``<>``, ``<``, ``>``, "
"``<=``, ``>=``, ``LIKE`` and ``ILIKE``, ``BETWEEN`` and ``IN``. Most of "
"the operators are self explanatory, but it is worth noting that ``!=`` is"
" the same as ``<>``, the string equality is case insensitive, but the "
"``<``, ``>``, ``<=`` and ``>=`` operators *are* case sensitive."
msgstr ""

#: ../../source/user/ogr_sql_dialect.rst:283
msgid ""
"Starting with GDAL 3.1, LIKE is case sensitive, and ILIKE is case "
"insensitive. In previous versions, LIKE was also case insensitive. If the"
" old behavior is wished in GDAL 3.1, the :config:`OGR_SQL_LIKE_AS_ILIKE` "
"can be set to ``YES``."
msgstr ""

#: ../../source/user/ogr_sql_dialect.rst:287
msgid ""
"Starting with GDAL 3.9, for layers declaring the OLCStringsAsUTF8 "
"capability (that is the content of their fields of String type is UTF-8 "
"encoded), UTF-8 characters are taken into account by ``LIKE`` and "
"``ILIKE`` operators. For ILIKE case insensitive comparisons, this is "
"restricted to the `ASCII "
"<https://en.wikipedia.org/wiki/Basic_Latin_(Unicode_block)>`__, `Latin-1 "
"Supplement <https://en.wikipedia.org/wiki/Latin-"
"1_Supplement_(Unicode_block)>`__, `Latin Extended-A "
"<https://en.wikipedia.org/wiki/Latin_Extended-A>`__, `Latin Extended-B "
"<https://en.wikipedia.org/wiki/Latin_Extended-B>`__, `Greek and Coptic "
"<https://en.wikipedia.org/wiki/Greek_and_Coptic>`__ and `Cyrillic "
"<https://en.wikipedia.org/wiki/Greek_and_Coptic>`__ Unicode categories."
msgstr ""

#: ../../source/user/ogr_sql_dialect.rst:298
msgid ""
"The value argument to the ``LIKE`` and ``ILIKE`` operators is a pattern "
"against which the value string is matched.  In this pattern percent (%) "
"matches any number of characters, and underscore ( _ ) matches any one "
"character. An optional ESCAPE escape_char clause can be added so that the"
" percent or underscore characters can be searched as regular characters, "
"by being preceded with the escape_char."
msgstr ""

#: ../../source/user/ogr_sql_dialect.rst:318
msgid ""
"The ``IN`` takes a list of values as its argument and tests the attribute"
" value for membership in the provided set."
msgstr ""

#: ../../source/user/ogr_sql_dialect.rst:330
msgid ""
"The syntax of the ``BETWEEN`` operator is \"field_name BETWEEN value1 AND"
" value2\" and it is equivalent to \"field_name >= value1 AND field_name "
"<= value2\"."
msgstr ""

#: ../../source/user/ogr_sql_dialect.rst:333
msgid ""
"In addition to the above binary operators, there are additional operators"
" for testing if a field is null or not. These are the ``IS NULL`` and "
"``IS NOT NULL`` operators."
msgstr ""

#: ../../source/user/ogr_sql_dialect.rst:337
msgid ""
"Basic field tests can be combined in more complicated predicates using "
"logical operators include ``AND``, ``OR``, and the unary logical ``NOT``."
" Subexpressions should be bracketed to make precedence clear.  Some more "
"complicated predicates are:"
msgstr ""

#: ../../source/user/ogr_sql_dialect.rst:349
msgid "WHERE Limitations"
msgstr ""

#: ../../source/user/ogr_sql_dialect.rst:351
msgid ""
"Fields must all come from the primary table (the one listed in the FROM "
"clause)."
msgstr ""

#: ../../source/user/ogr_sql_dialect.rst:353
msgid ""
"All string comparisons are case insensitive except for ``<``, ``>``, "
"``<=`` and ``>=``"
msgstr ""

#: ../../source/user/ogr_sql_dialect.rst:356
msgid "ORDER BY"
msgstr ""

#: ../../source/user/ogr_sql_dialect.rst:358
msgid ""
"The ``ORDER BY`` clause is used force the returned features to be "
"reordered into sorted order (ascending or descending) on one or multiple "
"fields. Ascending (increasing) order is the default if neither the ASC or"
" DESC keyword is provided.  For example:"
msgstr ""

#: ../../source/user/ogr_sql_dialect.rst:371
msgid ""
"Note that ORDER BY clauses cause two passes through the feature set.  One"
" to build an in-memory table of field values corresponded with feature "
"ids, and a second pass to fetch the features by feature id in the sorted "
"order. For formats which cannot efficiently randomly read features by "
"feature id this can be a very expensive operation."
msgstr ""

#: ../../source/user/ogr_sql_dialect.rst:377
msgid ""
"Sorting of string field values is case sensitive, not case insensitive "
"like in most other parts of OGR SQL."
msgstr ""

#: ../../source/user/ogr_sql_dialect.rst:381
msgid "LIMIT and OFFSET"
msgstr ""

#: ../../source/user/ogr_sql_dialect.rst:383
msgid ""
"Starting with GDAL 2.2, the ``LIMIT`` clause can be used to limit the "
"number of features returned. For example"
msgstr ""

#: ../../source/user/ogr_sql_dialect.rst:390
msgid ""
"The ``OFFSET`` clause can be used to skip the first features of the "
"result set. The value after OFFSET is the number of features skipped. For"
" example, to skip the first 3 features from the result set:"
msgstr ""

#: ../../source/user/ogr_sql_dialect.rst:398
msgid "Both clauses can be combined:"
msgstr ""

#: ../../source/user/ogr_sql_dialect.rst:405
msgid "JOINs"
msgstr ""

#: ../../source/user/ogr_sql_dialect.rst:407
msgid ""
"OGR SQL supports a limited form of one to one JOIN.  This allows records "
"from a secondary table to be looked up based on a shared key between it "
"and the primary table being queried.  For instance, a table of city "
"locations might include a **nation_id** column that can be used as a "
"reference into a secondary **nation** table to fetch a nation name.  A "
"joined query might look like:"
msgstr ""

#: ../../source/user/ogr_sql_dialect.rst:419
msgid ""
"This query would result in a table with all the fields from the city "
"table, and an additional \"nation.name\" field with the nation name "
"pulled from the nation table by looking for the record in the nation "
"table that has the \"id\" field with the same value as the city.nation_id"
" field."
msgstr ""

#: ../../source/user/ogr_sql_dialect.rst:424
msgid ""
"Joins introduce a number of additional issues.  One is the concept of "
"table qualifiers on field names.  For instance, referring to "
"city.nation_id instead of just nation_id to indicate the nation_id field "
"from the city layer.  The table name qualifiers may only be used in the "
"field list, and within the ``ON`` clause of the join."
msgstr ""

#: ../../source/user/ogr_sql_dialect.rst:430
msgid ""
"Wildcards are also somewhat more involved.  All fields from the primary "
"table (**city** in this case) and the secondary table (**nation** in this"
" case) may be selected using the usual ``*`` wildcard.  But the fields of"
" just one of the primary or secondary table may be selected by prefixing "
"the asterix with the table name."
msgstr ""

#: ../../source/user/ogr_sql_dialect.rst:436
msgid ""
"The field names in the resulting query layer will be qualified by the "
"table name, if the table name is given as a qualifier in the field list."
"  In addition field names will be qualified with a table name if they "
"would conflict with earlier fields.  For instance, the following select "
"would result might result in a results set with a **name, nation_id, "
"nation.nation_id** and ** nation.name** field if the city and nation "
"tables both have the **nation_id** and **name** fieldnames."
msgstr ""

#: ../../source/user/ogr_sql_dialect.rst:448
msgid ""
"On the other hand if the nation table had a **continent_id** field, but "
"the city table did not, then that field would not need to be qualified in"
" the result set.  However, if the selected instead looked like the "
"following statement, all result fields would be qualified by the table "
"name."
msgstr ""

#: ../../source/user/ogr_sql_dialect.rst:458
msgid ""
"In the above examples, the **nation** table was found in the same "
"datasource as the **city** table.   However, the OGR join support "
"includes the ability to join against a table in a different data source, "
"potentially of a different format.  This is indicated by qualifying the "
"secondary table name with a datasource name.  In this case the secondary "
"datasource is opened using normal OGR semantics and utilized to access "
"the secondary table until the query result is no longer needed."
msgstr ""

#: ../../source/user/ogr_sql_dialect.rst:471
msgid ""
"While not necessarily very useful, it is also possible to introduce table"
" aliases to simplify some SELECT statements.  This can also be useful to "
"disambiguate situations where tables of the same name are being used from"
" different data sources.  For instance, if the actual tables names were "
"messy we might want to do something like:"
msgstr ""

#: ../../source/user/ogr_sql_dialect.rst:483
msgid "It is possible to do multiple joins in a single query."
msgstr ""

#: ../../source/user/ogr_sql_dialect.rst:491
msgid ""
"The expression after ON is typically of the form "
"\"{primary_table}.{field_name} = {secondary_table}.{field_name}\", and in"
" that order. It is also possible to use a more complex boolean "
"expression, involving multiple comparison operators, but with the "
"restrictions mentioned in the below \"JOIN limitations\" section. In "
"particular, in case of multiple joins (3 tables or more) the fields "
"compared in a JOIN must belong to the primary table (the one after FROM) "
"and the table of the active JOIN."
msgstr ""

#: ../../source/user/ogr_sql_dialect.rst:501
msgid "JOIN Limitations"
msgstr ""

#: ../../source/user/ogr_sql_dialect.rst:503
msgid ""
"Joins can be very expensive operations if the secondary table is not "
"indexed on the key field being used."
msgstr ""

#: ../../source/user/ogr_sql_dialect.rst:504
msgid ""
"Joined fields may not be used in WHERE clauses, or ORDER BY clauses at "
"this time.  The join is essentially evaluated after all primary table "
"subsetting is complete, and after the ORDER BY pass."
msgstr ""

#: ../../source/user/ogr_sql_dialect.rst:505
msgid ""
"Joined fields may not be used as keys in later joins.  So you could not "
"use the province id in a city to lookup the province record, and then use"
" a nation id from the province id to lookup the nation record.  This is a"
" sensible thing to want and could be implemented, but is not currently "
"supported."
msgstr ""

#: ../../source/user/ogr_sql_dialect.rst:506
msgid ""
"Datasource names for joined tables are evaluated relative to the current "
"processes working directory, not the path to the primary datasource."
msgstr ""

#: ../../source/user/ogr_sql_dialect.rst:507
msgid ""
"These are not true LEFT or RIGHT joins in the RDBMS sense.  Whether or "
"not a secondary record exists for the join key or not, one and only one "
"copy of the primary record is returned in the result set.  If a secondary"
" record cannot be found, the secondary derived fields will be NULL.  If "
"more than one matching secondary field is found only the first will be "
"used."
msgstr ""

#: ../../source/user/ogr_sql_dialect.rst:510
msgid "UNION ALL"
msgstr ""

#: ../../source/user/ogr_sql_dialect.rst:512
msgid ""
"The SQL engine can deal with several SELECT combined with UNION ALL. The "
"effect of UNION ALL is to concatenate the rows returned by the right "
"SELECT statement to the rows returned by the left SELECT statement."
msgstr ""

#: ../../source/user/ogr_sql_dialect.rst:523
msgid "UNION ALL restrictions"
msgstr ""

#: ../../source/user/ogr_sql_dialect.rst:525
msgid ""
"The processing of UNION ALL in OGR differs from the SQL standard, in "
"which it accepts that the columns from the various SELECT are not "
"identical. In that case, it will return a super-set of all the fields "
"from each SELECT statement."
msgstr ""

#: ../../source/user/ogr_sql_dialect.rst:529
msgid ""
"There is also a restriction : ORDER BY can only be specified for each "
"SELECT, and not at the level of the result of the union."
msgstr ""

#: ../../source/user/ogr_sql_dialect.rst:533
msgid "SPECIAL FIELDS"
msgstr ""

#: ../../source/user/ogr_sql_dialect.rst:535
msgid ""
"The OGR SQL query processor treats some attributes of the features as "
"built-in special fields which can be used in SQL statements alongside the"
" other fields. These fields can be placed in the SELECT list, the WHERE "
"clause and the ORDER BY clause respectively. Special fields will not be "
"included in the result by default but they may be explicitly included by "
"adding them to the SELECT list. When accessing field values, the special "
"fields will take precedence over other fields in the data source with the"
" same names."
msgstr ""

#: ../../source/user/ogr_sql_dialect.rst:545
#: ../../source/user/sql_sqlite_dialect.rst:161
msgid "Feature id (FID)"
msgstr ""

#: ../../source/user/ogr_sql_dialect.rst:547
msgid ""
"Normally the feature id is a special property of a feature and not "
"treated as an attribute of the feature.  In some cases it is convenient "
"to be able to utilize the feature id in queries and result sets as a "
"regular field.  To do so use the name ``FID``. If the layer has a named "
"FID column (:cpp:func:`OGRLayer::GetFIDColumn` != \"\"), this name may "
"also be used."
msgstr ""

#: ../../source/user/ogr_sql_dialect.rst:554
#: ../../source/user/sql_sqlite_dialect.rst:171
#: ../../source/user/sql_sqlite_dialect.rst:179
msgid ""
"The field wildcard expansions will not include the feature id, but it may"
" be explicitly included using a syntax like:"
msgstr ""

#: ../../source/user/ogr_sql_dialect.rst:562
#: ../../source/user/sql_sqlite_dialect.rst:120
msgid "Geometry field"
msgstr ""

#: ../../source/user/ogr_sql_dialect.rst:564
msgid ""
"The OGR SQL dialect adds the geometry field of the datasource to the "
"result set by default. Users do not need to select the geometry "
"explicitly but it is still possible to do so. Common use case is when "
"geometry is the only field that is needed. In this case the name of the "
"geometry field to be used in the SQL statement is the name returned by "
":cpp:func:`OGRLayer::GetGeometryColumn`, and also \"Geometry Column = "
"...\" in :program:`ogrinfo` output. If the method returns an empty string"
" then a special name \"_ogr_geometry_\" must be used. The name begins "
"with an underscore and SQL syntax requires that it must appear between "
"double quotes. In addition the command line interpreter may require that "
"double quotes are escaped and the final SELECT statement could look like:"
msgstr ""

#: ../../source/user/ogr_sql_dialect.rst:580
msgid "OGR_GEOMETRY"
msgstr ""

#: ../../source/user/ogr_sql_dialect.rst:582
msgid ""
"Some of the data sources (like MapInfo tab) can handle geometries of "
"different types within the same layer. The ``OGR_GEOMETRY`` special field"
" represents the geometry type returned by "
":cpp:func:`OGRGeometry::getGeometryName` and can be used to distinguish "
"the various types. By using this field one can select particular types of"
" the geometries like:"
msgstr ""

#: ../../source/user/ogr_sql_dialect.rst:593
msgid "OGR_GEOM_WKT"
msgstr ""

#: ../../source/user/ogr_sql_dialect.rst:595
msgid ""
"The Well Known Text representation of the geometry can also be used as a "
"special field. To select the WKT of the geometry ``OGR_GEOM_WKT`` might "
"be included in the select list, like:"
msgstr ""

#: ../../source/user/ogr_sql_dialect.rst:603
msgid ""
"Using the ``OGR_GEOM_WKT`` and the ``LIKE`` operator in the WHERE clause "
"we can get similar effect as using OGR_GEOMETRY:"
msgstr ""

#: ../../source/user/ogr_sql_dialect.rst:612
msgid "OGR_GEOM_AREA"
msgstr ""

#: ../../source/user/ogr_sql_dialect.rst:614
msgid ""
"The ``OGR_GEOM_AREA`` special field returns the area of the feature's "
"geometry computed by the OGRSurface::get_Area() method. For "
"OGRGeometryCollection and OGRMultiPolygon the value is the sum of the "
"areas of its members. For non-surface geometries the returned area is "
"0.0."
msgstr ""

#: ../../source/user/ogr_sql_dialect.rst:619
msgid "For example, to select only polygon features larger than a given area:"
msgstr ""

#: ../../source/user/ogr_sql_dialect.rst:626
msgid "OGR_STYLE"
msgstr ""

#: ../../source/user/ogr_sql_dialect.rst:628
#: ../../source/user/sql_sqlite_dialect.rst:195
msgid ""
"The ``OGR_STYLE`` special field represents the style string of the "
"feature returned by OGRFeature::GetStyleString(). By using this field and"
" the ``LIKE`` operator the result of the query can be filtered by the "
"style. For example we can select the annotation features as:"
msgstr ""

#: ../../source/user/ogr_sql_dialect.rst:638
msgid ""
"It is possible to use the ``OGR_STYLE`` field name as a special field "
"name in the field selection as an alternate way of setting the "
":cpp:func:`OGRFeature::SetStyleString` value, typically by aliasing "
"another field or a string literal."
msgstr ""

#: ../../source/user/ogr_sql_dialect.rst:647
msgid ""
"By default, the OGR_STYLE field will still be visible as a regular field."
" If this is undesirable, starting with GDAL 3.10, it can be hidden by "
"adding the HIDDEN keyword at the end of the field specification."
msgstr ""

#: ../../source/user/ogr_sql_dialect.rst:657
msgid "CREATE INDEX"
msgstr ""

#: ../../source/user/ogr_sql_dialect.rst:659
msgid ""
"Some OGR SQL drivers support creating of attribute indexes.  Currently "
"this includes the Shapefile driver.  An index accelerates very simple "
"attribute queries of the form **fieldname = value**, which is what is "
"used by the ``JOIN`` capability.  To create an attribute index on the "
"nation_id field of the nation table a command like this would be used:"
msgstr ""

#: ../../source/user/ogr_sql_dialect.rst:670
msgid "Index Limitations"
msgstr ""

#: ../../source/user/ogr_sql_dialect.rst:672
msgid ""
"Indexes are not maintained dynamically when new features are added to or "
"removed from a layer."
msgstr ""

#: ../../source/user/ogr_sql_dialect.rst:673
msgid ""
"Very long strings (longer than 256 characters?) cannot currently be "
"indexed."
msgstr ""

#: ../../source/user/ogr_sql_dialect.rst:674
msgid ""
"To recreate an index it is necessary to drop all indexes on a layer and "
"then recreate all the indexes."
msgstr ""

#: ../../source/user/ogr_sql_dialect.rst:675
msgid ""
"Indexes are not used in any complex queries.   Currently the only query "
"the will accelerate is a simple \"field = value\" query."
msgstr ""

#: ../../source/user/ogr_sql_dialect.rst:678
msgid "DROP INDEX"
msgstr ""

#: ../../source/user/ogr_sql_dialect.rst:680
msgid ""
"The OGR SQL DROP INDEX command can be used to drop all indexes on a "
"particular table, or just the index for a particular column."
msgstr ""

#: ../../source/user/ogr_sql_dialect.rst:689
msgid "ALTER TABLE"
msgstr ""

#: ../../source/user/ogr_sql_dialect.rst:691
msgid "The following OGR SQL ALTER TABLE commands can be used."
msgstr ""

#: ../../source/user/ogr_sql_dialect.rst:693
msgid ""
"-\"ALTER TABLE tablename ADD [COLUMN] columnname columntype\" to add a "
"new field. Supported if the layer declares the OLCCreateField capability."
" -\"ALTER TABLE tablename RENAME [COLUMN] oldcolumnname TO "
"newcolumnname\" to rename an existing field. Supported if the layer "
"declares the OLCAlterFieldDefn capability. -\"ALTER TABLE tablename ALTER"
" [COLUMN] columnname TYPE columntype\" to change the type of an existing "
"field. Supported if the layer declares the OLCAlterFieldDefn capability. "
"-\"ALTER TABLE tablename DROP [COLUMN] columnname\" to delete an existing"
" field. Supported if the layer declares the OLCDeleteField capability."
msgstr ""

#: ../../source/user/ogr_sql_dialect.rst:698
msgid ""
"The columntype value follows the syntax of the types supported by the "
"CAST operator described above."
msgstr ""

#: ../../source/user/ogr_sql_dialect.rst:708
msgid "DROP TABLE"
msgstr ""

#: ../../source/user/ogr_sql_dialect.rst:710
msgid ""
"The OGR SQL DROP TABLE command can be used to delete a table. This is "
"only supported on datasources that declare the ODsCDeleteLayer "
"capability."
msgstr ""

#: ../../source/user/ogr_sql_sqlite_dialect.rst:5
msgid "OGR SQL dialect and SQLITE SQL dialect"
msgstr ""

#: ../../source/user/ogr_sql_sqlite_dialect.rst:7
msgid ""
"The GDALDataset supports executing commands against a datasource via the "
":cpp:func:`GDALDataset::ExecuteSQL` method. How such commands are "
"evaluated is dependent on the datasets."
msgstr ""

#: ../../source/user/ogr_sql_sqlite_dialect.rst:11
msgid ""
"For most file formats (e.g. Shapefiles, GeoJSON, MapInfo files), the "
"built-in :ref:`ogr_sql_dialect` dialect will be used by defaults. It is "
"also possible to request the :ref:`sql_sqlite_dialect` alternate dialect "
"to be used, which will use the SQLite engine to evaluate commands on GDAL"
" datasets."
msgstr ""

#: ../../source/user/ogr_sql_sqlite_dialect.rst:16
msgid ""
"All OGR drivers for database systems: :ref:`vector.mysql`, "
":ref:`vector.pg`, :ref:`vector.oci`, :ref:`vector.sqlite`, "
":ref:`vector.gpkg`, :ref:`vector.odbc`, :ref:`vector.pgeo`, "
":ref:`vector.hana` and :ref:`vector.mssqlspatial`, override the "
":cpp:func:`GDALDataset::ExecuteSQL` function with dedicated "
"implementation and, by default, pass the SQL statements directly to the "
"underlying RDBMS. In these cases the SQL syntax varies in some "
"particulars from OGR SQL. Also, anything possible in SQL can then be "
"accomplished for these particular databases. Generally, only the result "
"of SELECT statements will be returned as layers. For those drivers, it is"
" also possible to explicitly request the ``OGRSQL`` and ``SQLITE`` "
"dialects, although performance will generally be much less as the native "
"SQL engine of those database systems."
msgstr ""

#: ../../source/user/ogr_sql_sqlite_dialect.rst:29
msgid "Dialects"
msgstr ""

#: ../../source/user/ogr_sql_sqlite_dialect.rst:39
msgid "ExecuteSQL()"
msgstr ""

#: ../../source/user/ogr_sql_sqlite_dialect.rst:41
msgid ""
"SQL is executed against an GDALDataset, not against a specific layer.  "
"The call looks like this:"
msgstr ""

#: ../../source/user/ogr_sql_sqlite_dialect.rst:50
msgid ""
"The ``pszDialect`` argument is in theory intended to allow for support of"
" different command languages against a provider, but for now applications"
" should always pass an empty (not NULL) string to get the default "
"dialect."
msgstr ""

#: ../../source/user/ogr_sql_sqlite_dialect.rst:54
msgid ""
"The ``poSpatialFilter`` argument is a geometry used to select a bounding "
"rectangle for features to be returned in a manner similar to the "
":cpp:func:`OGRLayer::SetSpatialFilter` method.  It may be NULL for no "
"special spatial restriction."
msgstr ""

#: ../../source/user/ogr_sql_sqlite_dialect.rst:59
msgid ""
"The result of an ExecuteSQL() call is usually a temporary OGRLayer "
"representing the results set from the statement.  This is the case for a "
"SELECT statement for instance.  The returned temporary layer should be "
"released with :cpp:func:`GDALDataset::ReleaseResultsSet` method when no "
"longer needed.  Failure to release it before the datasource is destroyed "
"may result in a crash."
msgstr ""

#: ../../source/user/raster_data_model.rst:5
msgid "Raster Data Model"
msgstr ""

#: ../../source/user/raster_data_model.rst:7
msgid ""
"This document attempts to describe the GDAL data model. That is the types"
" of information that a GDAL data store can contain, and their semantics."
msgstr ""

#: ../../source/user/raster_data_model.rst:10
#: ../../source/user/vector_data_model.rst:123
msgid "Dataset"
msgstr ""

#: ../../source/user/raster_data_model.rst:12
msgid ""
"A dataset (represented by the :cpp:class:`GDALDataset` class) is an "
"assembly of related raster bands and some information common to them all."
" In particular the dataset has a concept of the raster size (in pixels "
"and lines) that applies to all the bands. The dataset is also responsible"
" for the georeferencing transform and coordinate system definition of all"
" bands. The dataset itself can also have associated metadata, a list of "
"name/value pairs in string form."
msgstr ""

#: ../../source/user/raster_data_model.rst:14
msgid ""
"Note that the GDAL dataset, and raster band data model is loosely based "
"on the OpenGIS Grid Coverages specification."
msgstr ""

#: ../../source/user/raster_data_model.rst:17
msgid "Coordinate System"
msgstr ""

#: ../../source/user/raster_data_model.rst:18
msgid ""
"Dataset coordinate systems are represented as OpenGIS Well Known Text "
"strings. This can contain:"
msgstr ""

#: ../../source/user/raster_data_model.rst:20
msgid "An overall coordinate system name."
msgstr ""

#: ../../source/user/raster_data_model.rst:21
msgid "A geographic coordinate system name."
msgstr ""

#: ../../source/user/raster_data_model.rst:22
msgid "A datum identifier."
msgstr ""

#: ../../source/user/raster_data_model.rst:23
msgid "An ellipsoid name, semi-major axis, and inverse flattening."
msgstr ""

#: ../../source/user/raster_data_model.rst:24
msgid "A prime meridian name and offset from Greenwich."
msgstr ""

#: ../../source/user/raster_data_model.rst:25
msgid "A projection method type (e.g., Transverse Mercator)."
msgstr ""

#: ../../source/user/raster_data_model.rst:26
msgid "A list of projection parameters (e.g., central_meridian)."
msgstr ""

#: ../../source/user/raster_data_model.rst:27
msgid "A units name, and conversion factor to meters or radians."
msgstr ""

#: ../../source/user/raster_data_model.rst:28
msgid "Names and ordering for the axes."
msgstr ""

#: ../../source/user/raster_data_model.rst:29
msgid ""
"Codes for most of the above in terms of predefined coordinate systems "
"from authorities such as EPSG."
msgstr ""

#: ../../source/user/raster_data_model.rst:31
msgid ""
"For more information on OpenGIS WKT coordinate system definitions, and "
"mechanisms to manipulate them, refer to the osr_tutorial document and/or "
"the OGRSpatialReference class documentation."
msgstr ""

#: ../../source/user/raster_data_model.rst:33
msgid ""
"The coordinate system returned by "
":cpp:func:`GDALDataset::GetProjectionRef` describes the georeferenced "
"coordinates implied by the affine georeferencing transform returned by "
":cpp:func:`GDALDataset::GetGeoTransform`. The coordinate system returned "
"by :cpp:func:`GDALDataset::GetGCPProjection` describes the georeferenced "
"coordinates of the GCPs returned by :cpp:func:`GDALDataset::GetGCPs`."
msgstr ""

#: ../../source/user/raster_data_model.rst:35
msgid ""
"Note that a returned coordinate system strings of \"\" indicates nothing "
"is known about the georeferencing coordinate system."
msgstr ""

#: ../../source/user/raster_data_model.rst:40
msgid "Affine GeoTransform"
msgstr ""

#: ../../source/user/raster_data_model.rst:42
msgid ""
"GDAL datasets have two ways of describing the relationship between raster"
" positions (in pixel/line coordinates) and georeferenced coordinates. The"
" first, and most commonly used is the affine transform (the other is "
"GCPs)."
msgstr ""

#: ../../source/user/raster_data_model.rst:44
msgid ""
"The affine transform consists of six coefficients returned by "
":cpp:func:`GDALDataset::GetGeoTransform` which map pixel/line coordinates"
" into georeferenced space using the following relationship:"
msgstr ""

#: ../../source/user/raster_data_model.rst:51
msgid ""
"In case of north up images, the GT(2) and GT(4) coefficients are zero, "
"and the GT(1) is pixel width, and GT(5) is pixel height. The "
"(GT(0),GT(3)) position is the top left corner of the top left pixel of "
"the raster."
msgstr ""

#: ../../source/user/raster_data_model.rst:53
msgid ""
"Note that the pixel/line coordinates in the above are from (0.0,0.0) at "
"the top left corner of the top left pixel to "
"(width_in_pixels,height_in_pixels) at the bottom right corner of the "
"bottom right pixel. The pixel/line location of the center of the top left"
" pixel would therefore be (0.5,0.5)."
msgstr ""

#: ../../source/user/raster_data_model.rst:56
msgid "GCPs"
msgstr ""

#: ../../source/user/raster_data_model.rst:58
msgid ""
"A dataset can have a set of control points relating one or more positions"
" on the raster to georeferenced coordinates. All GCPs share a "
"georeferencing coordinate system (returned by "
":cpp:func:`GDALDataset::GetGCPProjection`). Each GCP (represented as the "
"GDAL_GCP class) contains the following:"
msgstr ""

#: ../../source/user/raster_data_model.rst:73
msgid ""
"The pszId string is intended to be a unique (and often, but not always "
"numerical) identifier for the GCP within the set of GCPs on this dataset."
" The pszInfo is usually an empty string, but can contain any user defined"
" text associated with the GCP. Potentially this can also contain machine "
"parsable information on GCP status though that isn't done at this time."
msgstr ""

#: ../../source/user/raster_data_model.rst:75
msgid ""
"The (Pixel,Line) position is the GCP location on the raster. The (X,Y,Z) "
"position is the associated georeferenced location with the Z often being "
"zero."
msgstr ""

#: ../../source/user/raster_data_model.rst:77
msgid ""
"The GDAL data model does not imply a transformation mechanism that must "
"be generated from the GCPs ... this is left to the application. However "
"1st to 5th order polynomials are common."
msgstr ""

#: ../../source/user/raster_data_model.rst:79
msgid ""
"Normally a dataset will contain either an affine geotransform, GCPs or "
"neither. It is uncommon to have both, and it is undefined which is "
"authoritative."
msgstr ""

#: ../../source/user/raster_data_model.rst:82
msgid "Metadata"
msgstr ""

#: ../../source/user/raster_data_model.rst:84
msgid ""
"GDAL metadata is auxiliary format and application specific textual data "
"kept as a list of name/value pairs. The names are required to be well "
"behaved tokens (no spaces, or odd characters). The values can be of any "
"length, and contain anything except an embedded null (ASCII zero)."
msgstr ""

#: ../../source/user/raster_data_model.rst:86
msgid ""
"The metadata handling system is not well tuned to handling very large "
"bodies of metadata. Handling of more than 100K of metadata for a dataset "
"is likely to lead to performance degradation."
msgstr ""

#: ../../source/user/raster_data_model.rst:88
msgid ""
"Some formats will support generic (user defined) metadata, while other "
"format drivers will map specific format fields to metadata names. For "
"instance the TIFF driver returns a few information tags as metadata "
"including the date/time field which is returned as:"
msgstr ""

#: ../../source/user/raster_data_model.rst:94
msgid ""
"Metadata is split into named groups called domains, with the default "
"domain having no name (NULL or \"\"). Some specific domains exist for "
"special purposes. Note that currently there is no way to enumerate all "
"the domains available for a given object, but applications can \"test\" "
"for any domains they know how to interpret."
msgstr ""

#: ../../source/user/raster_data_model.rst:96
msgid ""
"The following metadata items have well defined semantics in the default "
"domain:"
msgstr ""

#: ../../source/user/raster_data_model.rst:98
msgid ""
"AREA_OR_POINT: May be either \"Area\" (the default) or \"Point\". "
"Indicates whether a pixel value should be assumed to represent a sampling"
" over the region of the pixel or a point sample at the center of the "
"pixel. This is not intended to influence interpretation of georeferencing"
" which remains area oriented."
msgstr ""

#: ../../source/user/raster_data_model.rst:99
msgid ""
"NODATA_VALUES: The value is a list of space separated pixel values "
"matching the number of bands in the dataset that can be collectively used"
" to identify pixels that are nodata in the dataset. With this style of "
"nodata a pixel is considered nodata in all bands if and only if all bands"
" match the corresponding value in the NODATA_VALUES tuple. This metadata "
"is not widely honoured by GDAL drivers, algorithms or utilities at this "
"time."
msgstr ""

#: ../../source/user/raster_data_model.rst:100
msgid ""
"MATRIX_REPRESENTATION: This value, used for Polarimetric SAR datasets, "
"contains the matrix representation that this data is provided in. The "
"following are acceptable values:"
msgstr ""

#: ../../source/user/raster_data_model.rst:102
msgid "SCATTERING"
msgstr ""

#: ../../source/user/raster_data_model.rst:103
msgid "SYMMETRIZED_SCATTERING"
msgstr ""

#: ../../source/user/raster_data_model.rst:104
msgid "COVARIANCE"
msgstr ""

#: ../../source/user/raster_data_model.rst:105
msgid "SYMMETRIZED_COVARIANCE"
msgstr ""

#: ../../source/user/raster_data_model.rst:106
msgid "COHERENCY"
msgstr ""

#: ../../source/user/raster_data_model.rst:107
msgid "SYMMETRIZED_COHERENCY"
msgstr ""

#: ../../source/user/raster_data_model.rst:108
msgid "KENNAUGH"
msgstr ""

#: ../../source/user/raster_data_model.rst:109
msgid "SYMMETRIZED_KENNAUGH"
msgstr ""

#: ../../source/user/raster_data_model.rst:110
msgid ""
"POLARIMETRIC_INTERP: This metadata item is defined for Raster Bands for "
"polarimetric SAR data. This indicates which entry in the specified matrix"
" representation of the data this band represents. For a dataset provided "
"as a scattering matrix, for example, acceptable values for this metadata "
"item are HH, HV, VH, VV. When the dataset is a covariance matrix, for "
"example, this metadata item will be one of Covariance_11, Covariance_22, "
"Covariance_33, Covariance_12, Covariance_13, Covariance_23 (since the "
"matrix itself is a hermitian matrix, that is all the data that is "
"required to describe the matrix)."
msgstr ""

#: ../../source/user/raster_data_model.rst:111
msgid ""
"METADATATYPE: If IMAGERY Domain present, the item consist the reader "
"which processed the metadata. Now present such readers:"
msgstr ""

#: ../../source/user/raster_data_model.rst:113
msgid "DG: DigitalGlobe imagery metadata"
msgstr ""

#: ../../source/user/raster_data_model.rst:114
msgid "GE: GeoEye (or formally SpaceImaging) imagery metadata"
msgstr ""

#: ../../source/user/raster_data_model.rst:115
msgid "OV: OrbView imagery metadata"
msgstr ""

#: ../../source/user/raster_data_model.rst:116
msgid "DIMAP: Pleiades imagery metadata"
msgstr ""

#: ../../source/user/raster_data_model.rst:117
msgid "MSP: Resurs DK-1 imagery metadata"
msgstr ""

#: ../../source/user/raster_data_model.rst:118
msgid "ODL: Landsat imagery metadata"
msgstr ""

#: ../../source/user/raster_data_model.rst:119
msgid ""
"CACHE_PATH: A cache directory path. Now this metadata item sets only by "
"WMS driver. This is useful when dataset deletes with cached data or when "
"external program need to put tiles in cache for some area of interest."
msgstr ""

#: ../../source/user/raster_data_model.rst:122
msgid "SUBDATASETS Domain"
msgstr ""

#: ../../source/user/raster_data_model.rst:124
msgid ""
"The SUBDATASETS domain holds a list of child datasets. Normally this is "
"used to provide pointers to a list of images stored within a single multi"
" image file."
msgstr ""

#: ../../source/user/raster_data_model.rst:126
msgid ""
"For example, an NITF with two images might have the following subdataset "
"list."
msgstr ""

#: ../../source/user/raster_data_model.rst:135
msgid ""
"The value of the _NAME is the string that can be passed to "
":cpp:func:`GDALOpen` to access the file. The _DESC value is intended to "
"be a more user friendly string that can be displayed to the user in a "
"selector."
msgstr ""

#: ../../source/user/raster_data_model.rst:137
msgid ""
"Drivers which support subdatasets advertise the ``DMD_SUBDATASETS`` "
"capability. This information is reported when the --format and --formats "
"options are passed to the command line utilities."
msgstr ""

#: ../../source/user/raster_data_model.rst:139
msgid ""
"Currently, drivers which support subdatasets are: ADRG, ECRGTOC, "
"GEORASTER, GTiff, HDF4, HDF5, netCDF, NITF, NTv2, OGDI, PDF, "
"PostGISRaster, Rasterlite, RPFTOC, RS2, TileDB, WCS, and WMS."
msgstr ""

#: ../../source/user/raster_data_model.rst:142
msgid "IMAGE_STRUCTURE Domain"
msgstr ""

#: ../../source/user/raster_data_model.rst:144
msgid ""
"Metadata in the default domain is intended to be related to the image, "
"and not particularly related to the way the image is stored on disk. That"
" is, it is suitable for copying with the dataset when it is copied to a "
"new format. Some information of interest is closely tied to a particular "
"file format and storage mechanism. In order to prevent this getting "
"copied along with datasets it is placed in a special domain called "
"IMAGE_STRUCTURE that should not normally be copied to new formats."
msgstr ""

#: ../../source/user/raster_data_model.rst:146
msgid ""
"Currently the following items are defined by :ref:`rfc-14` as having "
"specific semantics in the IMAGE_STRUCTURE domain."
msgstr ""

#: ../../source/user/raster_data_model.rst:148
msgid ""
"COMPRESSION: The compression type used for this dataset or band. There is"
" no fixed catalog of compression type names, but where a given format "
"includes a COMPRESSION creation option, the same list of values should be"
" used here as there."
msgstr ""

#: ../../source/user/raster_data_model.rst:149
msgid ""
"NBITS: The actual number of bits used for this band, or the bands of this"
" dataset. Normally only present when the number of bits is non-standard "
"for the datatype, such as when a 1 bit TIFF is represented through GDAL "
"as GDT_Byte."
msgstr ""

#: ../../source/user/raster_data_model.rst:150
msgid ""
"INTERLEAVE: This only applies on datasets, and the value should be one of"
" PIXEL, LINE or BAND. It can be used as a data access hint."
msgstr ""

#: ../../source/user/raster_data_model.rst:151
msgid ""
"PIXELTYPE: This may appear on a GDT_Byte band (or the corresponding "
"dataset) and have the value SIGNEDBYTE to indicate the unsigned byte "
"values between 128 and 255 should be interpreted as being values between "
"-128 and -1 for applications that recognise the SIGNEDBYTE type. Starting"
" with GDAL 3.7, this metadata item is no longer used, as the Int8 data "
"type is used for signed bytes."
msgstr ""

#: ../../source/user/raster_data_model.rst:158
msgid "RPC Domain"
msgstr ""

#: ../../source/user/raster_data_model.rst:160
msgid ""
"The RPC metadata domain holds metadata describing the Rational Polynomial"
" Coefficient geometry model for the image if present. This geometry model"
" can be used to transform between pixel/line and georeferenced locations."
" The items defining the model are:"
msgstr ""

#: ../../source/user/raster_data_model.rst:162
msgid ""
"ERR_BIAS: Error - Bias. The RMS bias error in meters per horizontal axis "
"of all points in the image (-1.0 if unknown)"
msgstr ""

#: ../../source/user/raster_data_model.rst:163
msgid ""
"ERR_RAND: Error - Random. RMS random error in meters per horizontal axis "
"of each point in the image (-1.0 if unknown)"
msgstr ""

#: ../../source/user/raster_data_model.rst:164
msgid "LINE_OFF: Line Offset"
msgstr ""

#: ../../source/user/raster_data_model.rst:165
msgid "SAMP_OFF: Sample Offset"
msgstr ""

#: ../../source/user/raster_data_model.rst:166
msgid "LAT_OFF: Geodetic Latitude Offset"
msgstr ""

#: ../../source/user/raster_data_model.rst:167
msgid "LONG_OFF: Geodetic Longitude Offset"
msgstr ""

#: ../../source/user/raster_data_model.rst:168
msgid "HEIGHT_OFF: Geodetic Height Offset"
msgstr ""

#: ../../source/user/raster_data_model.rst:169
msgid "LINE_SCALE: Line Scale"
msgstr ""

#: ../../source/user/raster_data_model.rst:170
msgid "SAMP_SCALE: Sample Scale"
msgstr ""

#: ../../source/user/raster_data_model.rst:171
msgid "LAT_SCALE: Geodetic Latitude Scale"
msgstr ""

#: ../../source/user/raster_data_model.rst:172
msgid "LONG_SCALE: Geodetic Longitude Scale"
msgstr ""

#: ../../source/user/raster_data_model.rst:173
msgid "HEIGHT_SCALE: Geodetic Height Scale"
msgstr ""

#: ../../source/user/raster_data_model.rst:174
msgid ""
"LINE_NUM_COEFF (1-20): Line Numerator Coefficients. Twenty coefficients "
"for the polynomial in the Numerator of the rn equation. (space separated)"
msgstr ""

#: ../../source/user/raster_data_model.rst:175
msgid ""
"LINE_DEN_COEFF (1-20): Line Denominator Coefficients. Twenty coefficients"
" for the polynomial in the Denominator of the rn equation. (space "
"separated)"
msgstr ""

#: ../../source/user/raster_data_model.rst:176
msgid ""
"SAMP_NUM_COEFF (1-20): Sample Numerator Coefficients. Twenty coefficients"
" for the polynomial in the Numerator of the cn equation. (space "
"separated)"
msgstr ""

#: ../../source/user/raster_data_model.rst:177
msgid ""
"SAMP_DEN_COEFF (1-20): Sample Denominator Coefficients. Twenty "
"coefficients for the polynomial in the Denominator of the cn equation. "
"(space separated)"
msgstr ""

#: ../../source/user/raster_data_model.rst:179
msgid ""
"These fields are directly derived from the document prospective GeoTIFF "
"RPC document (http://geotiff.maptools.org/rpc_prop.html) which in turn is"
" closely modeled on the NITF RPC00B definition."
msgstr ""

#: ../../source/user/raster_data_model.rst:181
msgid ""
"The line and pixel offset expressed with LINE_OFF and SAMP_OFF are with "
"respect to the center of the pixel."
msgstr ""

#: ../../source/user/raster_data_model.rst:184
msgid "IMAGERY Domain (remote sensing)"
msgstr ""

#: ../../source/user/raster_data_model.rst:186
msgid ""
"For satellite or aerial imagery the IMAGERY Domain may be present. It "
"depends on the existence of special metadata files near the image file. "
"The files at the same directory with image file tested by the set of "
"metadata readers, if files can be processed by the metadata reader, it "
"fill the IMAGERY Domain with the following items:"
msgstr ""

#: ../../source/user/raster_data_model.rst:188
msgid "SATELLITEID: A satellite or scanner name"
msgstr ""

#: ../../source/user/raster_data_model.rst:189
msgid ""
"CLOUDCOVER: Cloud coverage. The value between 0 - 100 or 999 if not "
"available"
msgstr ""

#: ../../source/user/raster_data_model.rst:190
msgid "ACQUISITIONDATETIME: The image acquisition date time in UTC"
msgstr ""

#: ../../source/user/raster_data_model.rst:193
msgid "xml: Domains"
msgstr ""

#: ../../source/user/raster_data_model.rst:195
msgid ""
"Any domain name prefixed with \"xml:\" is not normal name/value metadata."
" It is a single XML document stored in one big string."
msgstr ""

#: ../../source/user/raster_data_model.rst:198
msgid "Raster Band"
msgstr ""

#: ../../source/user/raster_data_model.rst:200
msgid ""
"A raster band is represented in GDAL with the :cpp:class:`GDALRasterBand`"
" class. It represents a single raster band/channel/layer. It does not "
"necessarily represent a whole image. For instance, a 24bit RGB image "
"would normally be represented as a dataset with three bands, one for red,"
" one for green and one for blue."
msgstr ""

#: ../../source/user/raster_data_model.rst:202
msgid "A raster band has the following properties:"
msgstr ""

#: ../../source/user/raster_data_model.rst:204
msgid ""
"A width and height in pixels and lines. This is the same as that defined "
"for the dataset, if this is a full resolution band."
msgstr ""

#: ../../source/user/raster_data_model.rst:205
msgid ""
"A datatype (GDALDataType). One of Byte, Int8, UInt16, Int16, UInt32, "
"Int32, UInt64, Int64, Float32, Float64, and the complex types CInt16, "
"CInt32, CFloat32, and CFloat64."
msgstr ""

#: ../../source/user/raster_data_model.rst:207
msgid ""
"UInt64 and Int64 data types have been added in GDAL 3.5. Beyond reading "
"and write pixel values, their support is limited.  Some algorithms might "
"use 64-bit floating-point internally (warping), as well as some methods "
"returning only double values (GetMinimum(), GetMaximum(), etc.), or even "
"32-bit floating point (overview, RasterIO resampling). Hence the range "
"where exact values are preserved can be [0, 2^53] (or less if 32-bit "
"floating-point is used)."
msgstr ""

#: ../../source/user/raster_data_model.rst:209
msgid "Int8 data type has been added in GDAL 3.7."
msgstr ""

#: ../../source/user/raster_data_model.rst:211
msgid ""
"A block size. This is a preferred (efficient) access chunk size. For "
"tiled images this will be one tile. For scanline oriented images this "
"will normally be one scanline."
msgstr ""

#: ../../source/user/raster_data_model.rst:212
msgid ""
"A list of name/value pair metadata in the same format as the dataset, but"
" of information that is potentially specific to this band."
msgstr ""

#: ../../source/user/raster_data_model.rst:213
msgid "An optional description string."
msgstr ""

#: ../../source/user/raster_data_model.rst:214
msgid ""
"An optional single nodata pixel value (see also NODATA_VALUES metadata on"
" the dataset for multi-band style nodata values)."
msgstr ""

#: ../../source/user/raster_data_model.rst:215
msgid ""
"An optional nodata mask band marking pixels as nodata or in some cases "
"transparency as discussed in RFC 15: Band Masks and documented in "
"GDALRasterBand::GetMaskBand()."
msgstr ""

#: ../../source/user/raster_data_model.rst:216
msgid ""
"An optional list of category names (effectively class names in a thematic"
" image)."
msgstr ""

#: ../../source/user/raster_data_model.rst:217
msgid "An optional minimum and maximum value."
msgstr ""

#: ../../source/user/raster_data_model.rst:218
msgid "Optional statistics stored in metadata:"
msgstr ""

#: ../../source/user/raster_data_model.rst:220
msgid "STATISTICS_MEAN: mean"
msgstr ""

#: ../../source/user/raster_data_model.rst:221
msgid "STATISTICS_MINIMUM: minimum"
msgstr ""

#: ../../source/user/raster_data_model.rst:222
msgid "STATISTICS_MAXIMUM: maximum"
msgstr ""

#: ../../source/user/raster_data_model.rst:223
msgid "STATISTICS_STDDEV: standard deviation"
msgstr ""

#: ../../source/user/raster_data_model.rst:224
msgid ""
"STATISTICS_APPROXIMATE: only present if GDAL has computed approximate "
"statistics"
msgstr ""

#: ../../source/user/raster_data_model.rst:225
msgid "STATISTICS_VALID_PERCENT: percentage of valid (not nodata) pixel"
msgstr ""

#: ../../source/user/raster_data_model.rst:227
msgid ""
"An optional offset and scale for transforming raster values into meaning "
"full values (e.g., translate height to meters)."
msgstr ""

#: ../../source/user/raster_data_model.rst:228
msgid ""
"An optional raster unit name. For instance, this might indicate linear "
"units for elevation data."
msgstr ""

#: ../../source/user/raster_data_model.rst:229
msgid "A color interpretation for the band. This is one of:"
msgstr ""

#: ../../source/user/raster_data_model.rst:231
msgid "GCI_Undefined: the default, nothing is known."
msgstr ""

#: ../../source/user/raster_data_model.rst:232
msgid "GCI_GrayIndex: this is an independent gray-scale image"
msgstr ""

#: ../../source/user/raster_data_model.rst:233
msgid "GCI_PaletteIndex: this raster acts as an index into a color table"
msgstr ""

#: ../../source/user/raster_data_model.rst:234
msgid "GCI_RedBand: this raster is the red portion of an RGB or RGBA image"
msgstr ""

#: ../../source/user/raster_data_model.rst:235
msgid "GCI_GreenBand: this raster is the green portion of an RGB or RGBA image"
msgstr ""

#: ../../source/user/raster_data_model.rst:236
msgid "GCI_BlueBand: this raster is the blue portion of an RGB or RGBA image"
msgstr ""

#: ../../source/user/raster_data_model.rst:237
msgid "GCI_AlphaBand: this raster is the alpha portion of an RGBA image"
msgstr ""

#: ../../source/user/raster_data_model.rst:238
msgid "GCI_HueBand: this raster is the hue of an HLS image"
msgstr ""

#: ../../source/user/raster_data_model.rst:239
msgid "GCI_SaturationBand: this raster is the saturation of an HLS image"
msgstr ""

#: ../../source/user/raster_data_model.rst:240
msgid "GCI_LightnessBand: this raster is the hue of an HLS image"
msgstr ""

#: ../../source/user/raster_data_model.rst:241
msgid "GCI_CyanBand: this band is the cyan portion of a CMY or CMYK image"
msgstr ""

#: ../../source/user/raster_data_model.rst:242
msgid "GCI_MagentaBand: this band is the magenta portion of a CMY or CMYK image"
msgstr ""

#: ../../source/user/raster_data_model.rst:243
msgid "GCI_YellowBand: this band is the yellow portion of a CMY or CMYK image"
msgstr ""

#: ../../source/user/raster_data_model.rst:244
msgid "GCI_BlackBand: this band is the black portion of a CMYK image."
msgstr ""

#: ../../source/user/raster_data_model.rst:246
msgid "A color table, described in more detail later."
msgstr ""

#: ../../source/user/raster_data_model.rst:247
msgid "Knowledge of reduced resolution overviews (pyramids) if available."
msgstr ""

#: ../../source/user/raster_data_model.rst:250
msgid "Color Table"
msgstr ""

#: ../../source/user/raster_data_model.rst:252
msgid ""
"A color table consists of zero or more color entries described in C by "
"the following structure:"
msgstr ""

#: ../../source/user/raster_data_model.rst:271
msgid ""
"The color table also has a palette interpretation value "
"(GDALPaletteInterp) which is one of the following values, and indicates "
"how the c1/c2/c3/c4 values of a color entry should be interpreted."
msgstr ""

#: ../../source/user/raster_data_model.rst:273
msgid "GPI_Gray: Use c1 as gray scale value."
msgstr ""

#: ../../source/user/raster_data_model.rst:274
msgid "GPI_RGB: Use c1 as red, c2 as green, c3 as blue and c4 as alpha."
msgstr ""

#: ../../source/user/raster_data_model.rst:275
msgid "GPI_CMYK: Use c1 as cyan, c2 as magenta, c3 as yellow and c4 as black."
msgstr ""

#: ../../source/user/raster_data_model.rst:276
msgid "GPI_HLS: Use c1 as hue, c2 as lightness, and c3 as saturation."
msgstr ""

#: ../../source/user/raster_data_model.rst:278
msgid ""
"To associate a color with a raster pixel, the pixel value is used as a "
"subscript into the color table. That means that the colors are always "
"applied starting at zero and ascending. There is no provision for "
"indicating a pre-scaling mechanism before looking up in the color table."
msgstr ""

#: ../../source/user/raster_data_model.rst:281
msgid "Overviews"
msgstr ""

#: ../../source/user/raster_data_model.rst:283
msgid ""
"A band may have zero or more overviews. Each overview is represented as a"
" \"free standing\" :cpp:class:`GDALRasterBand`. The size (in pixels and "
"lines) of the overview will be different than the underlying raster, but "
"the geographic region covered by overviews is the same as the full "
"resolution band."
msgstr ""

#: ../../source/user/raster_data_model.rst:285
msgid ""
"The overviews are used to display reduced resolution overviews more "
"quickly than could be done by reading all the full resolution data and "
"downsampling."
msgstr ""

#: ../../source/user/raster_data_model.rst:287
msgid ""
"Bands also have a HasArbitraryOverviews property which is TRUE if the "
"raster can be read at any resolution efficiently but with no distinct "
"overview levels. This applies to some FFT encoded images, or images "
"pulled through gateways where downsampling can be done efficiently at the"
" remote point."
msgstr ""

#: ../../source/user/raster_data_model.rst:289
msgid ""
"How overviews are selected depends on the software logic. The "
":cpp:func:`GDALRasterBand::RasterIO` or :cpp:func:`GDALDataset::RasterIO`"
" methods document their logic."
msgstr ""

#: ../../source/user/sql_sqlite_dialect.rst:5
msgid "SQL SQLite dialect"
msgstr ""

#: ../../source/user/sql_sqlite_dialect.rst:9
msgid ""
"The ``SQLite`` dialect can be used as an alternate SQL dialect to the "
":ref:`ogr_sql_dialect`. This assumes that GDAL/OGR is built with support "
"for SQLite, and preferably with `Spatialite <https://www.gaia-"
"gis.it/fossil/libspatialite/index>`_ support too to benefit from spatial "
"functions."
msgstr ""

#: ../../source/user/sql_sqlite_dialect.rst:14
msgid ""
"The SQLite dialect may be used with any OGR datasource, like the OGR SQL "
"dialect. The ``SQLite`` dialect can be requested with the ``SQLite`` "
"string passed as the dialect parameter of "
":cpp:func:`GDALDataset::ExecuteSQL`, or with the `-dialect` option of the"
" :ref:`ogrinfo` or :ref:`ogr2ogr` utilities."
msgstr ""

#: ../../source/user/sql_sqlite_dialect.rst:19
msgid ""
"This is mainly aimed to execute SELECT statements, but, for datasources "
"that support update, INSERT/UPDATE/DELETE statements can also be run. "
"GDAL is internally using `the Virtual Table Mechanism of SQLite "
"<https://sqlite.org/vtab.html>`_ and therefore operations like ALTER "
"TABLE are not supported. For executing ALTER TABLE or DROP TABLE use "
":ref:`ogr_sql_dialect`"
msgstr ""

#: ../../source/user/sql_sqlite_dialect.rst:25
msgid ""
"If the datasource is SQLite database (GeoPackage, SpatiaLite) then SQLite"
" dialect acts as native SQL dialect and Virtual Table Mechanism is not "
"used. It is possible to force GDAL to use Virtual Tables even in this "
"case by specifying \"-dialect INDIRECT_SQLITE\". This should be used only"
" when necessary, since going through the virtual table mechanism might "
"affect performance."
msgstr ""

#: ../../source/user/sql_sqlite_dialect.rst:31
msgid ""
"The syntax of the SQL statements is fully the one of the SQLite SQL "
"engine. You can refer to the following pages:"
msgstr ""

#: ../../source/user/sql_sqlite_dialect.rst:34
msgid "`SELECT <http://www.sqlite.org/lang_select.html>`_"
msgstr ""

#: ../../source/user/sql_sqlite_dialect.rst:35
msgid "`INSERT <http://www.sqlite.org/lang_insert.html>`_"
msgstr ""

#: ../../source/user/sql_sqlite_dialect.rst:36
msgid "`UPDATE <http://www.sqlite.org/lang_update.html>`_"
msgstr ""

#: ../../source/user/sql_sqlite_dialect.rst:37
msgid "`DELETE <http://www.sqlite.org/lang_delete.html>`_"
msgstr ""

#: ../../source/user/sql_sqlite_dialect.rst:40
msgid "SELECT statement"
msgstr ""

#: ../../source/user/sql_sqlite_dialect.rst:42
msgid ""
"The SELECT statement is used to fetch layer features (analogous to table "
"rows in an RDBMS) with the result of the query represented as a temporary"
" layer of features. The layers of the datasource are analogous to tables "
"in an RDBMS and feature attributes are analogous to column values. The "
"simplest form of OGR SQLITE SELECT statement looks like this:"
msgstr ""

#: ../../source/user/sql_sqlite_dialect.rst:52
msgid ""
"More complex statements can of course be used, including WHERE, JOIN, "
"USING, GROUP BY, ORDER BY, sub SELECT, ..."
msgstr ""

#: ../../source/user/sql_sqlite_dialect.rst:55
msgid ""
"The table names that can be used are the layer names available in the "
"datasource on which the ExecuteSQL() method is called."
msgstr ""

#: ../../source/user/sql_sqlite_dialect.rst:58
msgid ""
"Similarly to OGRSQL, it is also possible to refer to layers of other "
"datasources with the following syntax : "
"\"other_datasource_name\".\"layer_name\"."
msgstr ""

#: ../../source/user/sql_sqlite_dialect.rst:65
msgid ""
"If the master datasource is SQLite database (GeoPackage, SpatiaLite) it "
"is necessary to use indirect SQLite dialect. Otherwise additional "
"datasources are never opened but tables to be used in joins are searched "
"from the master database."
msgstr ""

#: ../../source/user/sql_sqlite_dialect.rst:74
msgid ""
"The column names that can be used in the result column list, in WHERE, "
"JOIN, ... clauses are the field names of the layers. Expressions, SQLite "
"functions, spatial functions, etc... can also be used."
msgstr ""

#: ../../source/user/sql_sqlite_dialect.rst:79
msgid ""
"The conditions on fields expressed in WHERE clauses, or in JOINs are "
"translated, as far as possible, as attribute filters that are applied on "
"the underlying OGR layers. Joins can be very expensive operations if the "
"secondary table is not indexed on the key field being used."
msgstr ""

#: ../../source/user/sql_sqlite_dialect.rst:85
msgid "LIKE operator"
msgstr ""

#: ../../source/user/sql_sqlite_dialect.rst:87
msgid ""
"In SQLite, the LIKE operator is case insensitive, unless ``PRAGMA "
"case_sensitive_like = 1`` has been issued."
msgstr ""

#: ../../source/user/sql_sqlite_dialect.rst:90
msgid ""
"Starting with GDAL 3.9, GDAL installs a custom LIKE comparison, such that"
" UTF-8 characters are taken into account by ``LIKE`` and ``ILIKE`` "
"operators. For ILIKE case insensitive comparisons, this is restricted to "
"the `ASCII "
"<https://en.wikipedia.org/wiki/Basic_Latin_(Unicode_block)>`__, `Latin-1 "
"Supplement <https://en.wikipedia.org/wiki/Latin-"
"1_Supplement_(Unicode_block)>`__, `Latin Extended-A "
"<https://en.wikipedia.org/wiki/Latin_Extended-A>`__, `Latin Extended-B "
"<https://en.wikipedia.org/wiki/Latin_Extended-B>`__, `Greek and Coptic "
"<https://en.wikipedia.org/wiki/Greek_and_Coptic>`__ and `Cyrillic "
"<https://en.wikipedia.org/wiki/Greek_and_Coptic>`__ Unicode categories."
msgstr ""

#: ../../source/user/sql_sqlite_dialect.rst:101
msgid "Delimited identifiers"
msgstr ""

#: ../../source/user/sql_sqlite_dialect.rst:103
msgid ""
"If names of layers or attributes are reserved keywords in SQL like 'FROM'"
" or they begin with a number or underscore they must be handled as "
"\"delimited identifiers\" and enclosed between double quotation marks in "
"queries. Double quotes can be used even when they are not strictly "
"needed."
msgstr ""

#: ../../source/user/sql_sqlite_dialect.rst:112
msgid ""
"When SQL statements are used in the command shell and the statement "
"itself is put between double quotes, the internal double quotes must be "
"escaped with \\\\"
msgstr ""

#: ../../source/user/sql_sqlite_dialect.rst:122
msgid ""
"The ``GEOMETRY`` special field represents the geometry of the feature "
"returned by OGRFeature::GetGeometryRef(). It can be explicitly specified "
"in the result column list of a SELECT, and is automatically selected if "
"the * wildcard is used."
msgstr ""

#: ../../source/user/sql_sqlite_dialect.rst:127
msgid ""
"For OGR layers that have a non-empty geometry column name (generally for "
"RDBMS datasources), as returned by OGRLayer::GetGeometryColumn(), the "
"name of the geometry special field in the SQL statement will be the name "
"of the geometry column of the underlying OGR layer. If the name of the "
"geometry column in the source layer is empty, like with shapefiles etc., "
"the name to use in the SQL statement is always \"geometry\". Here we'll "
"use it case-insensitively (as all field names are in a SELECT statement):"
msgstr ""

#: ../../source/user/sql_sqlite_dialect.rst:138
#: ../../source/user/sql_sqlite_dialect.rst:150
#: ../../source/user/sql_sqlite_dialect.rst:216
#: ../../source/user/sql_sqlite_dialect.rst:343
#: ../../source/user/sql_sqlite_dialect.rst:354
msgid "returns:"
msgstr ""

#: ../../source/user/sql_sqlite_dialect.rst:163
msgid ""
"The feature id is a special property of a feature and not treated as an "
"attribute of the feature.  In some cases it is convenient to be able to "
"utilize the feature id in queries and result sets as a regular field.  To"
" do so use the name ``rowid``."
msgstr ""

#: ../../source/user/sql_sqlite_dialect.rst:168
msgid ""
"Starting with GDAL 3.8, if the layer has a named FID column "
"(:cpp:func:`OGRLayer::GetFIDColumn` != \"\"), this name may also be used."
msgstr ""

#: ../../source/user/sql_sqlite_dialect.rst:186
msgid "It is of course possible to rename it:"
msgstr ""

#: ../../source/user/sql_sqlite_dialect.rst:193
msgid "OGR_STYLE special field"
msgstr ""

#: ../../source/user/sql_sqlite_dialect.rst:205
msgid "Spatialite SQL functions"
msgstr ""

#: ../../source/user/sql_sqlite_dialect.rst:207
msgid ""
"When GDAL/OGR is build with support for the `Spatialite <https://www"
".gaia-gis.it/fossil/libspatialite/index>`_ library, a lot of `extra SQL "
"functions <http://www.gaia-gis.it/gaia-sins/spatialite-sql-"
"latest.html>`_, in particular spatial functions, can be used in results "
"column fields, WHERE clauses, etc...."
msgstr ""

#: ../../source/user/sql_sqlite_dialect.rst:232
msgid ""
"Note that due to the loose typing mechanism of SQLite, if a geometry "
"expression returns a NULL value for the first row, this will generally "
"cause OGR not to recognize the column as a geometry column. It might be "
"then useful to sort the results by making sure that non-null geometries "
"are returned first:"
msgstr ""

#: ../../source/user/sql_sqlite_dialect.rst:242
msgid "OGR datasource SQL functions"
msgstr ""

#: ../../source/user/sql_sqlite_dialect.rst:244
msgid ""
"The ``ogr_datasource_load_layers(datasource_name[, update_mode[, "
"prefix]])`` function can be used to automatically load all the layers of "
"a datasource as :ref:`VirtualOGR tables <vector.sqlite>`."
msgstr ""

#: ../../source/user/sql_sqlite_dialect.rst:260
msgid "OGR layer SQL functions"
msgstr ""

#: ../../source/user/sql_sqlite_dialect.rst:262
msgid ""
"The following SQL functions are available and operate on a layer name : "
"``ogr_layer_Extent()``, ``ogr_layer_SRID()``, "
"``ogr_layer_GeometryType()`` and ``ogr_layer_FeatureCount()``"
msgstr ""

#: ../../source/user/sql_sqlite_dialect.rst:280
msgid "OGR compression functions"
msgstr ""

#: ../../source/user/sql_sqlite_dialect.rst:282
msgid ""
"``ogr_deflate(text_or_blob[, compression_level])`` returns a binary blob "
"compressed with the ZLib deflate algorithm. See "
":cpp:func:`CPLZLibDeflate`"
msgstr ""

#: ../../source/user/sql_sqlite_dialect.rst:285
msgid ""
"``ogr_inflate(compressed_blob)`` returns the decompressed binary blob, "
"from a blob compressed with the ZLib deflate algorithm. If the "
"decompressed binary is a string, use CAST(ogr_inflate(compressed_blob) AS"
" VARCHAR). See CPLZLibInflate()."
msgstr ""

#: ../../source/user/sql_sqlite_dialect.rst:291
msgid "Other functions"
msgstr ""

#: ../../source/user/sql_sqlite_dialect.rst:293
msgid ""
"The ``hstore_get_value()`` function can be used to extract a value "
"associate to a key from a HSTORE string, formatted like "
"\"key=>value,other_key=>other_value,...\""
msgstr ""

#: ../../source/user/sql_sqlite_dialect.rst:303
msgid "Raster related functions"
msgstr ""

#: ../../source/user/sql_sqlite_dialect.rst:305
msgid ""
"The ``gdal_get_pixel_value()`` function (added in GDAL 3.7) can be used "
"to extract the value of a pixel in a GDAL dataset. It requires the "
"configuration option OGR_SQLITE_ALLOW_EXTERNAL_ACCESS to be set to YES "
"(for security reasons)."
msgstr ""

#: ../../source/user/sql_sqlite_dialect.rst:309
msgid "It takes 5 arguments:"
msgstr ""

#: ../../source/user/sql_sqlite_dialect.rst:311
msgid "a string with the dataset name"
msgstr ""

#: ../../source/user/sql_sqlite_dialect.rst:312
msgid "a band number (numbering starting at 1)"
msgstr ""

#: ../../source/user/sql_sqlite_dialect.rst:313
msgid ""
"a string being \"georef\" to indicate that subsequent values will be "
"georeferenced coordinates, or \"pixel\" to indicate that subsequent "
"values will be in column, line pixel space"
msgstr ""

#: ../../source/user/sql_sqlite_dialect.rst:316
msgid "georeferenced X value or column number"
msgstr ""

#: ../../source/user/sql_sqlite_dialect.rst:317
msgid "georeferenced Y value or line number"
msgstr ""

#: ../../source/user/sql_sqlite_dialect.rst:326
msgid "OGR geocoding functions"
msgstr ""

#: ../../source/user/sql_sqlite_dialect.rst:328
msgid ""
"The following SQL functions are available : ``ogr_geocode(...)`` and "
"``ogr_geocode_reverse(...)``."
msgstr ""

#: ../../source/user/sql_sqlite_dialect.rst:330
msgid ""
"``ogr_geocode(name_to_geocode [, field_to_return [, option1 [, option2, "
"...]]])`` where name_to_geocode is a literal or a column name that must "
"be geocoded. field_to_return if specified can be \"geometry\" for the "
"geometry (default), or a field name of the layer returned by "
":cpp:func:`OGRGeocode`. The special field  \"raw\" can also be used to "
"return the raw response (XML string) of the geocoding service. option1, "
"option2, etc.. must be of the key=value format, and are options "
"understood by :cpp:func:`OGRGeocodeCreateSession` or OGRGeocode()."
msgstr ""

#: ../../source/user/sql_sqlite_dialect.rst:337
msgid ""
"This function internally uses the OGRGeocode() API. Refer to it for more "
"details."
msgstr ""

#: ../../source/user/sql_sqlite_dialect.rst:389
msgid ""
"``ogr_geocode_reverse(longitude, latitude, field_to_return [, option1 [, "
"option2, ...]])`` where longitude, latitude is the coordinate to query. "
"field_to_return must be a field name of the layer returned by "
"OGRGeocodeReverse() (for example 'display_name'). The special field  "
"\"raw\" can also be used to return the raw response (XML string) of the "
"geocoding service. option1, option2, etc.. must be of the key=value "
"format, and are options understood by OGRGeocodeCreateSession() or "
"OGRGeocodeReverse()."
msgstr ""

#: ../../source/user/sql_sqlite_dialect.rst:396
msgid ""
"``ogr_geocode_reverse(geometry, field_to_return [, option1 [, option2, "
"...]])`` is also accepted as an alternate syntax where geometry is a "
"(Spatialite) point geometry."
msgstr ""

#: ../../source/user/sql_sqlite_dialect.rst:399
msgid ""
"This function internally uses the :cpp:func:`OGRGeocodeReverse` API. "
"Refer to it for more details."
msgstr ""

#: ../../source/user/sql_sqlite_dialect.rst:402
msgid "Spatialite spatial index"
msgstr ""

#: ../../source/user/sql_sqlite_dialect.rst:404
msgid ""
"Spatialite spatial index mechanism can be triggered by making sure a "
"spatial index virtual table is mentioned in the SQL (of the form "
"idx_layername_geometrycolumn), or by using the more recent SpatialIndex "
"from the VirtualSpatialIndex extension. In which case, a in-memory RTree "
"will be built to be used to speed up the spatial queries."
msgstr ""

#: ../../source/user/sql_sqlite_dialect.rst:409
msgid ""
"For example, a spatial intersection between 2 layers, by using a spatial "
"index on one of the layers to limit the number of actual geometry "
"intersection computations :"
msgstr ""

#: ../../source/user/sql_sqlite_dialect.rst:421
msgid "or more elegantly :"
msgstr ""

#: ../../source/user/vector_data_model.rst:5
msgid "Vector Data Model"
msgstr ""

#: ../../source/user/vector_data_model.rst:7
msgid ""
"This page documents the classes used to handle vector data. Many data "
"types and method names are based on the OGC Simple Features data model, "
"so it may be helpful to review the `specifications published by OGC "
"<https://www.ogc.org/standard/sfa/>`__. For historical reasons, GDAL uses"
" the \"OGR\" prefix to denote types and functions that apply only to "
"vector data."
msgstr ""

#: ../../source/user/vector_data_model.rst:11
msgid "Class Overview"
msgstr ""

#: ../../source/user/vector_data_model.rst:13
msgid "The following classes form the core of the vector data model:"
msgstr ""

#: ../../source/user/vector_data_model.rst:15
msgid ""
"Geometry (:ref:`ogr_geometry.h <ogrgeometry_cpp>`): The geometry classes "
"(:cpp:class:`OGRGeometry`, etc) encapsulate the OGC vector data types. "
"They provide some geometry operations and translation to/from well known "
"binary and text format. A geometry includes a spatial reference system "
"(projection)."
msgstr ""

#: ../../source/user/vector_data_model.rst:16
msgid ""
"Spatial Reference (:ref:`ogr_spatialref.h <ogrspatialref>`): An "
":cpp:class:`OGRSpatialReference` encapsulates the definition of a "
"projection and datum."
msgstr ""

#: ../../source/user/vector_data_model.rst:17
msgid ""
"Feature (:ref:`ogr_feature.h <ogrfeature_cpp>`): The "
":cpp:class:`OGRFeature` encapsulates the definition of a whole feature, "
"that is a set of geometries and attributes relating to a single entity."
msgstr ""

#: ../../source/user/vector_data_model.rst:18
msgid ""
"Feature Class Definition (:ref:`ogr_feature.h <ogrfeature_cpp>`): The "
":cpp:class:`OGRFeatureDefn` class captures the schema (set of field "
"definitions) for a group of related features (normally a whole layer)."
msgstr ""

#: ../../source/user/vector_data_model.rst:19
msgid ""
"Layer (:ref:`ogrsf_frmts.h <ogrlayer_cpp>`): :cpp:class:`OGRLayer` is an "
"abstract class representing a layer of features in a "
":cpp:class:`GDALDataset`."
msgstr ""

#: ../../source/user/vector_data_model.rst:20
msgid ""
"Dataset (:ref:`gdal_priv.h <gdaldataset_cpp>`): A "
":cpp:class:`GDALDataset` is an abstract base class representing a file or"
" database containing one or more :cpp:class:`OGRLayer` objects."
msgstr ""

#: ../../source/user/vector_data_model.rst:21
msgid ""
"Drivers (:ref:`gdal_priv.h <gdaldriver_cpp>`): A :cpp:class:`GDALDriver` "
"represents a translator for a specific format, capable of opening and "
"possibly writing :cpp:class:`GDALDataset` objects. All available drivers "
"are managed by the :cpp:class:`GDALDriverManager`."
msgstr ""

#: ../../source/user/vector_data_model.rst:24
msgid "Geometry"
msgstr ""

#: ../../source/user/vector_data_model.rst:26
msgid ""
"Individual geometry classes are used to represent the different types of "
"vector geometry. All the geometry classes derive from "
":cpp:class:`OGRGeometry` which defines the common functionality of all "
"geometries. Geometry types include :cpp:class:`OGRPoint`, "
":cpp:class:`OGRLineString`, :cpp:class:`OGRPolygon`, "
":cpp:class:`OGRGeometryCollection`, :cpp:class:`OGRMultiPoint`, "
":cpp:class:`OGRMultiLineString`, :cpp:class:`OGRMultiPolygon`, and "
":cpp:class:`OGRPolyhedralSurface`. The special case of a triangular "
"polygon can be represented as a :cpp:class:`OGRTriangle`, a non-"
"overlapping collection of which can be represented by an "
":cpp:class:`OGRTriangulatedSurface`. An additional set of types is used "
"to store non-linear geometries: :cpp:class:`OGRCircularString`, "
":cpp:class:`OGRCompoundCurve`, :cpp:class:`OGRCurvePolygon`, "
":cpp:class:`OGRMultiCurve` and :cpp:class:`OGRMultiSurface`."
msgstr ""

#: ../../source/user/vector_data_model.rst:30
msgid ""
"Any of the above geometry classes can store coordinates in two (XY), "
"three (XYZ or XYM), or four (XYZM) dimensions."
msgstr ""

#: ../../source/user/vector_data_model.rst:32
msgid ""
"Additional intermediate classes contain functionality that is used by "
"multiple geometry types. These include :cpp:class:`OGRCurve` (base class "
"for :cpp:class:`OGRLineString`) and :cpp:class:`OGRSurface` (base class "
"for :cpp:class:`OGRPolygon`). Some intermediate interfaces modeled in the"
" simple features abstract model and SFCOM are not modeled in OGR at this "
"time. In most cases the methods are aggregated into other classes."
msgstr ""

#: ../../source/user/vector_data_model.rst:-1
msgid "Diagram of OGRGeometry and subclasses"
msgstr ""

#: ../../source/user/vector_data_model.rst:37
msgid ""
"The :cpp:class:`OGRGeometryFactory` is used to convert well known text "
"(WKT) and well known binary (WKB) format data into the appropriate "
":cpp:class:`OGRGeometry` subclass. These are predefined ASCII and binary "
"formats for representing all the types of simple features geometries."
msgstr ""

#: ../../source/user/vector_data_model.rst:39
msgid ""
"The :cpp:class:`OGRGeometry` includes a reference to an "
":cpp:class:`OGRSpatialReference` object, defining the spatial reference "
"system of that geometry. This is normally a reference to a shared spatial"
" reference object with reference counting for each of the "
":cpp:class:`OGRGeometry` objects using it."
msgstr ""

#: ../../source/user/vector_data_model.rst:41
msgid ""
"While it is theoretically possible to derive other or more specific "
"geometry classes from the existing :cpp:class:`OGRGeometry` classes, this"
" isn't an aspect that has been well thought out. In particular, it would "
"be possible to create specialized classes using the "
":cpp:class:`OGRGeometryFactory` without modifying it."
msgstr ""

#: ../../source/user/vector_data_model.rst:44
msgid "Compatibility issues with non-linear geometries"
msgstr ""

#: ../../source/user/vector_data_model.rst:46
msgid ""
"Generic mechanisms have been introduced so that creating or modifying a "
"feature with a non-linear geometry in a layer of a driver that does not "
"support it will transform that geometry in the closest matching linear "
"geometry. This linearization can be controlled using "
":ref:`configoptions_vector`."
msgstr ""

#: ../../source/user/vector_data_model.rst:48
msgid ""
"On the other side, when retrieving data from the OGR C API, the "
":cpp:func:`OGRSetNonLinearGeometriesEnabledFlag` function can be used, so"
" that geometries and layer geometry type returned are also converted to "
"their linear approximation if necessary."
msgstr ""

#: ../../source/user/vector_data_model.rst:51
msgid "Spatial Reference"
msgstr ""

#: ../../source/user/vector_data_model.rst:53
msgid ""
"The :cpp:class:`OGRSpatialReference` class is intended to store an "
"OpenGIS Spatial Reference System definition. Currently local, geographic "
"and projected coordinate systems are supported. Vertical coordinate "
"systems, geocentric coordinate systems, and compound (horizontal + "
"vertical) coordinate systems are as well supported in recent GDAL "
"versions."
msgstr ""

#: ../../source/user/vector_data_model.rst:55
msgid ""
"The spatial coordinate system data model is inherited from the OpenGIS "
"Well Known Text format. A simple form of this is defined in the Simple "
"Features specifications. A more sophisticated form is found in the "
"Coordinate Transformation specification. The "
":cpp:class:`OGRSpatialReference` is built on the features of the "
"Coordinate Transformation specification but is intended to be compatible "
"with the earlier simple features form."
msgstr ""

#: ../../source/user/vector_data_model.rst:57
msgid ""
"There is also an associated :cpp:class:`OGRCoordinateTransformation` "
"class that encapsulates use of |PROJ| for converting between different "
"coordinate systems."
msgstr ""

#: ../../source/user/vector_data_model.rst:60
msgid "Feature / Feature Definition"
msgstr ""

#: ../../source/user/vector_data_model.rst:62
msgid ""
"The :cpp:class:`OGRGeometry` captures the geometry of a vector feature. "
"The :cpp:class:`OGRFeature` contains geometry, and adds feature "
"attributes, feature id, and a feature class identifier. It may also "
"contain styling information. Several geometries can be associated with an"
" :cpp:class:`OGRFeature`."
msgstr ""

#: ../../source/user/vector_data_model.rst:64
msgid ""
"The set of attributes (:cpp:class:`OGRFieldDefn`), their types, names and"
" so forth is represented via the :cpp:class:`OGRFeatureDefn` class. One "
":cpp:class:`OGRFeatureDefn` normally exists for a layer of features. The "
"same definition is shared in a reference counted manner by the feature of"
" that type (or feature class)."
msgstr ""

#: ../../source/user/vector_data_model.rst:66
msgid ""
"The feature id (FID) of a feature is intended to be a unique identifier "
"for the feature within the layer it is a member of. Freestanding "
"features, or features not yet written to a layer may have a null "
"(OGRNullFID) feature id. The feature ids are modeled in OGR as a 64-bit "
"integer; however, this is not sufficiently expressive to model the "
"natural feature ids in some formats. For instance, the GML feature id is "
"a string."
msgstr ""

#: ../../source/user/vector_data_model.rst:68
msgid ""
"The :cpp:class:`OGRFeatureDefn` also contains an indicator of the types "
"of geometry allowed for that feature class (returned as an "
":cpp:enum:`OGRwkbGeometryType` from "
":cpp:func:`OGRFeatureDefn::GetGeomType`). If this is "
":cpp:enumerator:`OGRwkbGeometryType::wkbUnknown` then any type of "
"geometry is allowed. This implies that features in a given layer can "
"potentially be of different geometry types though they will always share "
"a common attribute schema."
msgstr ""

#: ../../source/user/vector_data_model.rst:70
msgid ""
"Several geometry fields (:cpp:class:`OGRGeomFieldDefn`) can be associated"
" with an :cpp:class:`OGRFeatureDefn`. Each geometry field has its own "
"indicator of geometry type allowed, returned by "
":cpp:func:`OGRGeomFieldDefn::GetType`, and its spatial reference system, "
"returned by :cpp:func:`OGRGeomFieldDefn::GetSpatialRef`."
msgstr ""

#: ../../source/user/vector_data_model.rst:72
msgid ""
"The :cpp:class:`OGRFeatureDefn` also contains a feature class name "
"(normally used as a layer name)."
msgstr ""

#: ../../source/user/vector_data_model.rst:75
msgid "Field Definitions"
msgstr ""

#: ../../source/user/vector_data_model.rst:77
msgid ""
"The behavior of each field in a feature class is defined by a shared "
":cpp:class:`OGRFieldDefn`. The :cpp:class:`OGRFieldDefn` specifies the "
"field type from the values of :cpp:enum:`OGRFieldType`. Values stored in "
"this field may be further restricted according to a "
":cpp:enum:`OGRFieldSubType`. For example, a field may have a type of "
":cpp:enumerator:`OGRFieldType::OFTInteger` with a subtype of "
":cpp:enumerator:`OGRFieldSubType::OFSTBoolean`."
msgstr ""

#: ../../source/user/vector_data_model.rst:82
msgid ""
"The :cpp:class:`OGRFieldDefn` can also track whether a field is allowed "
"to be null (:cpp:func:`OGRFieldDefn::IsNullable`), whether its value must"
" be unique (:cpp:func:`OGRFieldDefn::IsUnique`), and formatting "
"information such as the number of decimal digits, width, and "
"justification. It may also define a default value in case one is not "
"manually specified."
msgstr ""

#: ../../source/user/vector_data_model.rst:85
msgid "Field Domains"
msgstr ""

#: ../../source/user/vector_data_model.rst:87
msgid ""
"Some formats support the use of field domains that describe the values "
"that can be stored in a given attribute field. An "
":cpp:class:`OGRFieldDefn` may reference a single "
":cpp:class:`OGRFieldDomain` that is associated with a "
":cpp:class:`GDALDataset`. Programs using GDAL may use the "
":cpp:class:`OGRFieldDomain` to appropriately constrain user input. GDAL "
"does not perform validation itself and will allow the storage of values "
"that violate a field's associated :cpp:class:`OGRFieldDomain`."
msgstr ""

#: ../../source/user/vector_data_model.rst:90
msgid "Available types of :cpp:class:`OGRFieldDomain` include:"
msgstr ""

#: ../../source/user/vector_data_model.rst:92
msgid ""
":cpp:class:`OGRCodedFieldDomain`, which constrains values those present "
"in a specified enumeration"
msgstr ""

#: ../../source/user/vector_data_model.rst:93
msgid ""
":cpp:class:`OGRRangeFieldDomain`, which constrains values to a specified "
"range"
msgstr ""

#: ../../source/user/vector_data_model.rst:94
msgid ""
":cpp:class:`OGRGlobFieldDomain`, which constrains values to those "
"matching a specified pattern"
msgstr ""

#: ../../source/user/vector_data_model.rst:96
msgid ""
"Additionally, an :cpp:class:`OGRFieldDomain` may define policies "
"describing the values that should be assigned to domain-controlled fields"
" when features are split or merged."
msgstr ""

#: ../../source/user/vector_data_model.rst:99
msgid "Layer"
msgstr ""

#: ../../source/user/vector_data_model.rst:101
msgid ""
"An :cpp:class:`OGRLayer` represents a layer of features within a data "
"source. All features in an :cpp:class:`OGRLayer` share a common schema "
"and are of the same :cpp:class:`OGRFeatureDefn`. An :cpp:class:`OGRLayer`"
" class also contains methods for reading features from the data source. "
"The :cpp:class:`OGRLayer` can be thought of as a gateway for reading and "
"writing features from an underlying data source such as a file on disk, "
"or the result of a database query."
msgstr ""

#: ../../source/user/vector_data_model.rst:103
msgid ""
"The :cpp:class:`OGRLayer` includes methods for sequential and random "
"reading and writing. Read access (via the "
":cpp:func:`OGRLayer::GetNextFeature` method) normally reads all features,"
" one at a time sequentially; however, it can be limited to return "
"features intersecting a particular geographic region by installing a "
"spatial filter on the :cpp:class:`OGRLayer` (via the "
":cpp:func:`OGRLayer::SetSpatialFilter` method). A filter on attributes "
"can only be set with the :cpp:func:`OGRLayer::SetAttributeFilter` method."
" By default, all available attributes and geometries are read but this "
"can be controlled by flagging fields as ignored "
"(:cpp:func:`OGRLayer::SetIgnoredFields`)."
msgstr ""

#: ../../source/user/vector_data_model.rst:105
msgid ""
"Starting with GDAL 3.6, as an alternative to getting features through "
"``GetNextFeature``, it is possible to retrieve them by batches, with a "
"column-oriented memory layout, using the "
":cpp:func:`OGRLayer::GetArrowStream` method (cf "
":ref:`vector_api_tut_arrow_stream`)."
msgstr ""

#: ../../source/user/vector_data_model.rst:107
msgid ""
"An :cpp:class:`OGRLayer` may also store an :cpp:class:`OGRStyleTable` "
"that provides a set of styles that may be used by features in the layer. "
"More information on GDAL's handling of feature styles can be found in the"
" :ref:`ogr_feature_style`."
msgstr ""

#: ../../source/user/vector_data_model.rst:109
msgid ""
"One flaw in the current OGR architecture is that the spatial and "
"attribute filters are set directly on the :cpp:class:`OGRLayer` which is "
"intended to be the only representative of a given layer in a data source."
" This means it isn't possible to have multiple read operations active at "
"one time with different spatial filters on each."
msgstr ""

#: ../../source/user/vector_data_model.rst:114
msgid ""
"Another question that might arise is why the :cpp:class:`OGRLayer` and "
":cpp:class:`OGRFeatureDefn` classes are distinct. An "
":cpp:class:`OGRLayer` always has a one-to-one relationship to an "
":cpp:class:`OGRFeatureDefn`, so why not amalgamate the classes? There are"
" two reasons:"
msgstr ""

#: ../../source/user/vector_data_model.rst:116
msgid ""
"As defined now :cpp:class:`OGRFeature` and :cpp:class:`OGRFeatureDefn` "
"don't depend on :cpp:class:`OGRLayer`, so they can exist independently in"
" memory without regard to a particular layer in a data store."
msgstr ""

#: ../../source/user/vector_data_model.rst:117
msgid ""
"The SF CORBA model does not have a concept of a layer with a single fixed"
" schema the way that the SFCOM and SFSQL models do. The fact that "
"features belong to a feature collection that is potentially not directly "
"related to their current feature grouping may be important to "
"implementing SFCORBA support using OGR."
msgstr ""

#: ../../source/user/vector_data_model.rst:119
msgid ""
"The :cpp:class:`OGRLayer` class is an abstract base class. An "
"implementation is expected to be subclassed for each file format driver "
"implemented. OGRLayers are normally owned directly by their "
":cpp:class:`GDALDataset`, and aren't instantiated or destroyed directly."
msgstr ""

#: ../../source/user/vector_data_model.rst:125
msgid ""
"A :cpp:class:`GDALDataset` represents a set of :cpp:class:`OGRLayer` "
"objects. This usually represents a single file, set of files, database or"
" gateway. A :cpp:class:`GDALDataset` has a list of :cpp:class:`OGRLayer` "
"which it owns but can return references to."
msgstr ""

#: ../../source/user/vector_data_model.rst:127
msgid ""
":cpp:class:`GDALDataset` is an abstract base class. An implementation is "
"expected to be subclassed for each file format driver implemented. "
":cpp:class:`GDALDataset` objects are not normally instantiated directly "
"but rather with the assistance of an :cpp:class:`GDALDriver`. Deleting an"
" :cpp:class:`GDALDataset` closes access to the underlying persistent data"
" source, but does not normally result in deletion of that file."
msgstr ""

#: ../../source/user/vector_data_model.rst:129
msgid ""
"A :cpp:class:`GDALDataset` has a name (usually a filename or database "
"connection string) that can be used to reopen the data source with a "
":cpp:class:`GDALDriver`."
msgstr ""

#: ../../source/user/vector_data_model.rst:131
msgid ""
"The :cpp:class:`GDALDataset` also has support for executing a datasource "
"specific command, normally a form of SQL. This is accomplished via the "
":cpp:func:`GDALDataset::ExecuteSQL` method. While some datasources (such "
"as PostGIS and Oracle) pass the SQL through to an underlying database, "
"OGR also includes support for evaluating a subset of the SQL SELECT "
"statement against any datasource (see :ref:`ogr_sql_sqlite_dialect`.)"
msgstr ""

#: ../../source/user/vector_data_model.rst:133
msgid ""
"When using some drivers, the :cpp:class:`GDALDataset` also offers a "
"mechanism for to start, commit, and rollback transactions when "
"interacting with the underlying data store."
msgstr ""

#: ../../source/user/vector_data_model.rst:136
msgid ""
"A :cpp:class:`GDALDataset` may also be aware of relationships between "
"layers (e.g., a foreign key relationship between database tables). "
"Information about these relationships is stored in a "
":cpp:class:`GDALRelationshp`."
msgstr ""

#: ../../source/user/vector_data_model.rst:140
msgid ""
"Earlier versions of GDAL represented vector datasets using the "
":cpp:class:`OGRDataSource` class. This class has been maintained for "
"backwards compatibility but is functionally equivalent to a "
":cpp:class:`GDALDataset` for vector data."
msgstr ""

#: ../../source/user/vector_data_model.rst:143
msgid "Drivers"
msgstr ""

#: ../../source/user/vector_data_model.rst:145
msgid ""
"A :cpp:class:`GDALDriver` object is instantiated for each file format "
"supported. The :cpp:class:`GDALDriver` objects are registered with the "
":cpp:class:`GDALDriverManager`, a singleton class that is normally used "
"to open new datasets."
msgstr ""

#: ../../source/user/vector_data_model.rst:147
msgid ""
"It is intended that a new :cpp:class:`GDALDriver` object is instantiated "
"and define function pointers for operations like Identify(), Open() for "
"each file format to be supported (along with a file format specific "
":cpp:class:`GDALDataset`, and :cpp:class:`OGRLayer` classes)."
msgstr ""

#: ../../source/user/vector_data_model.rst:149
msgid ""
"On application startup registration functions are normally called for "
"each desired file format. These functions instantiate the appropriate "
":cpp:class:`GDALDriver` objects, and register them with the "
":cpp:class:`GDALDriverManager`. When a dataset is to be opened, the "
"driver manager will normally try each :cpp:class:`GDALDataset` in turn, "
"until one succeeds, returning a :cpp:class:`GDALDataset` object."
msgstr ""

#: ../../source/user/virtual_file_systems.rst:5
msgid ""
"GDAL Virtual File Systems (compressed, network hosted, etc...): /vsimem, "
"/vsizip, /vsitar, /vsicurl, ..."
msgstr ""

#: ../../source/user/virtual_file_systems.rst:8
msgid "Introduction"
msgstr ""

#: ../../source/user/virtual_file_systems.rst:10
msgid ""
"GDAL can access files located on \"standard\" file systems, i.e. in the /"
" hierarchy on Unix-like systems or in C:\\, D:\\, etc... drives on "
"Windows. But most GDAL raster and vector drivers use a GDAL-specific "
"abstraction to access files. This makes it possible to access less "
"standard types of files, such as in-memory files, compressed files (.zip,"
" .gz, .tar, .tar.gz archives), encrypted files, standard input and output"
" (STDIN, STDOUT), files stored on network (either publicly accessible, or"
" in private buckets of commercial cloud storage services), etc."
msgstr ""

#: ../../source/user/virtual_file_systems.rst:12
msgid ""
"Each special file system has a prefix, and the general syntax to name a "
"file is /vsiPREFIX/..."
msgstr ""

#: ../../source/user/virtual_file_systems.rst:21
msgid "Chaining"
msgstr ""

#: ../../source/user/virtual_file_systems.rst:23
msgid "It is possible to chain multiple file system handlers."
msgstr ""

#: ../../source/user/virtual_file_systems.rst:35
msgid ""
"(Note is also OK to say /vsizip/vsicurl/... with a single slash. (But "
"when writing documentation please still use two.))"
msgstr ""

#: ../../source/user/virtual_file_systems.rst:38
msgid "Drivers supporting virtual file systems"
msgstr ""

#: ../../source/user/virtual_file_systems.rst:40
msgid ""
"Virtual file systems can only be used with GDAL or OGR drivers supporting"
" the \"large file API\", which is now the vast majority of file based "
"drivers. The full list of these formats can be obtained by looking at the"
" driver marked with 'v' when running either ``gdalinfo --formats`` or "
"``ogrinfo --formats``."
msgstr ""

#: ../../source/user/virtual_file_systems.rst:42
msgid "A notable exception is the HDF4 driver."
msgstr ""

#: ../../source/user/virtual_file_systems.rst:47
msgid "/vsizip/ (.zip archives)"
msgstr ""

#: ../../source/user/virtual_file_systems.rst:50
msgid "Read capabilities"
msgstr ""

#: ../../source/user/virtual_file_systems.rst:52
msgid ""
"/vsizip/ is a file handler that allows reading ZIP archives on-the-fly "
"without decompressing them beforehand."
msgstr ""

#: ../../source/user/virtual_file_systems.rst:54
msgid ""
"To point to a file inside a zip file, the filename must be of the form "
":file:`/vsizip/path/to/the/file.zip/path/inside/the/zip/file`, where "
":file:`path/to/the/file.zip` is relative or absolute and "
":file:`path/inside/the/zip/file` is the relative path to the file inside "
"the archive."
msgstr ""

#: ../../source/user/virtual_file_systems.rst:56
msgid ""
"To use the .zip as a directory, you can use "
":file:`/vsizip/path/to/the/file.zip` or "
":file:`/vsizip/path/to/the/file.zip/subdir`. Directory listing is "
"available with :cpp:func:`VSIReadDir`. A :cpp:func:`VSIStatL` "
"(\"/vsizip/...\") call will return the uncompressed size of the file. "
"Directories inside the ZIP file can be distinguished from regular files "
"with the VSI_ISDIR(stat.st_mode) macro as for regular file systems. "
"Getting directory listing and file statistics are fast operations."
msgstr ""

#: ../../source/user/virtual_file_systems.rst:58
msgid ""
"Note: in the particular case where the .zip file contains a single file "
"located at its root, just mentioning :file:`/vsizip/path/to/the/file.zip`"
" will work."
msgstr ""

#: ../../source/user/virtual_file_systems.rst:60
msgid "The following configuration options are specific to the /zip/ handler:"
msgstr ""

#: ../../source/user/virtual_file_systems.rst:87
msgid ""
".kmz, .ods and .xlsx extensions are also detected as valid extensions for"
" zip-compatible archives."
msgstr ""

#: ../../source/user/virtual_file_systems.rst:89
msgid ""
"Starting with GDAL 2.2, an alternate syntax is available so as to enable "
"chaining and not being dependent on .zip extension, e.g.: "
"``/vsizip/{/path/to/the/archive}/path/inside/the/zip/file``. Note that "
":file:`/path/to/the/archive` may also itself use this alternate syntax."
msgstr ""

#: ../../source/user/virtual_file_systems.rst:92
msgid "Write capabilities"
msgstr ""

#: ../../source/user/virtual_file_systems.rst:94
msgid ""
"Write capabilities are also available. They allow creating a new zip file"
" and adding new files to an already existing (or just created) zip file."
msgstr ""

#: ../../source/user/virtual_file_systems.rst:96
msgid "Creation of a new zip file:"
msgstr ""

#: ../../source/user/virtual_file_systems.rst:106
msgid "Addition of a new file to an existing zip:"
msgstr ""

#: ../../source/user/virtual_file_systems.rst:114
msgid ""
"Starting with GDAL 2.4, the :config:`GDAL_NUM_THREADS` configuration "
"option can be set to an integer or ``ALL_CPUS`` to enable multi-threaded "
"compression of a single file. This is similar to the pigz utility in "
"independent mode. By default the input stream is split into 1 MB chunks "
"(the chunk size can be tuned with the "
":config:`CPL_VSIL_DEFLATE_CHUNK_SIZE` configuration option, with values "
"like \"x K\" or \"x M\"), and each chunk is independently compressed (and"
" terminated by a nine byte marker 0x00 0x00 0xFF 0xFF 0x00 0x00 0x00 0xFF"
" 0xFF, signaling a full flush of the stream and dictionary, enabling "
"potential independent decoding of each chunk). This slightly reduces the "
"compression rate, so very small chunk sizes should be avoided. Starting "
"with GDAL 3.7, this technique is reused to generate .zip files following "
":ref:`sozip_intro`."
msgstr ""

#: ../../source/user/virtual_file_systems.rst:117
msgid ""
"Read and write operations cannot be interleaved. The new zip must be "
"closed before being re-opened in read mode."
msgstr ""

#: ../../source/user/virtual_file_systems.rst:122
msgid "SOZip (Seek-Optimized ZIP)"
msgstr ""

#: ../../source/user/virtual_file_systems.rst:124
msgid ""
"GDAL (>= 3.7) has full read and write support for .zip files following "
"the `SOZip (Seek-Optimized ZIP) <https://sozip.org>`__ profile."
msgstr ""

#: ../../source/user/virtual_file_systems.rst:127
msgid ""
"The ``/vsizip/`` virtual file system uses the SOZip index to perform fast"
" random access within a compressed SOZip-enabled file."
msgstr ""

#: ../../source/user/virtual_file_systems.rst:130
msgid ""
"The :ref:`vector.shapefile` and :ref:`vector.gpkg` drivers can directly "
"generate SOZip-enabled .shz/.shp.zip or .gpkg.zip files."
msgstr ""

#: ../../source/user/virtual_file_systems.rst:133
msgid ""
"The :cpp:func:`CPLAddFileInZip` C function, which can compress a file and"
" add it to an new or existing ZIP file, enables the SOZip optimization "
"when relevant (ie when a file to be compressed is larger than 1 MB). "
"SOZip optimization can be forced by setting the "
":config:`CPL_SOZIP_ENABLED` configuration option to YES. Or totally "
"disabled by setting it to NO."
msgstr ""

#: ../../source/user/virtual_file_systems.rst:139
msgid ""
"The :cpp:func:`VSIGetFileMetadata` method can be called on a filename of "
"the form :file:`/vsizip/path/to/the/file.zip/path/inside/the/zip/file` "
"and with domain = \"ZIP\" to get information if a SOZip index is "
"available for that file."
msgstr ""

#: ../../source/user/virtual_file_systems.rst:143
msgid ""
"The :ref:`sozip` new command line utility can be used to create a seek-"
"optimized ZIP file, to append files to an existing ZIP file, list the "
"contents of a ZIP file and display the SOZip optimization status or "
"validate a SOZip file."
msgstr ""

#: ../../source/user/virtual_file_systems.rst:151
msgid "/vsigzip/ (gzipped file)"
msgstr ""

#: ../../source/user/virtual_file_systems.rst:153
msgid ""
"/vsigzip/ is a file handler that allows on-the-fly reading of GZip (.gz) "
"files without decompressing them in advance."
msgstr ""

#: ../../source/user/virtual_file_systems.rst:155
msgid ""
"To view a gzipped file as uncompressed by GDAL, you must use the "
":file:`/vsigzip/path/to/the/file.gz` syntax, where "
":file:`path/to/the/file.gz` is relative or absolute."
msgstr ""

#: ../../source/user/virtual_file_systems.rst:157
msgid "The following configuration options are specific to the /vsigzip/ handler:"
msgstr ""

#: ../../source/user/virtual_file_systems.rst:176
msgid ""
":cpp:func:`VSIStatL` will return the uncompressed file size, but this is "
"potentially a slow operation on large files, since it requires "
"uncompressing the whole file. Seeking to the end of the file, or at "
"random locations, is similarly slow. To speed up that process, "
"\"snapshots\" are internally created in memory so as to be able being "
"able to seek to part of the files already decompressed in a faster way. "
"This mechanism of snapshots also apply to /vsizip/ files."
msgstr ""

#: ../../source/user/virtual_file_systems.rst:178
msgid ""
"Write capabilities are also available, but read and write operations "
"cannot be interleaved."
msgstr ""

#: ../../source/user/virtual_file_systems.rst:180
msgid ""
"Starting with GDAL 2.4, the :config:`GDAL_NUM_THREADS` configuration "
"option can be set to an integer or ``ALL_CPUS`` to enable multi-threaded "
"compression of a single file. This is similar to the pigz utility in "
"independent mode. By default the input stream is split into 1 MB chunks "
"(the chunk size can be tuned with the "
":config:`CPL_VSIL_DEFLATE_CHUNK_SIZE` configuration option, with values "
"like \"x K\" or \"x M\"), and each chunk is independently compressed (and"
" terminated by a nine byte marker 0x00 0x00 0xFF 0xFF 0x00 0x00 0x00 0xFF"
" 0xFF, signaling a full flush of the stream and dictionary, enabling "
"potential independent decoding of each chunk). This slightly reduces the "
"compression rate, so very small chunk sizes should be avoided."
msgstr ""

#: ../../source/user/virtual_file_systems.rst:185
msgid "/vsitar/ (.tar, .tgz archives)"
msgstr ""

#: ../../source/user/virtual_file_systems.rst:187
msgid ""
"/vsitar/ is a file handler that allows on-the-fly reading in regular "
"uncompressed .tar or compressed .tgz or .tar.gz archives, without "
"decompressing them in advance."
msgstr ""

#: ../../source/user/virtual_file_systems.rst:189
msgid ""
"To point to a file inside a .tar, .tgz .tar.gz file, the filename must be"
" of the form "
":file:`/vsitar/path/to/the/file.tar/path/inside/the/tar/file`, where "
":file:`path/to/the/file.tar` is relative or absolute and "
":file:`path/inside/the/tar/file` is the relative path to the file inside "
"the archive."
msgstr ""

#: ../../source/user/virtual_file_systems.rst:191
msgid ""
"To use the .tar as a directory, you can use "
":file:`/vsizip/path/to/the/file.tar` or "
":file:`/vsitar/path/to/the/file.tar/subdir`. Directory listing is "
"available with :cpp:func:`VSIReadDir`. A :cpp:func:`VSIStatL` "
"(\"/vsitar/...\") call will return the uncompressed size of the file. "
"Directories inside the TAR file can be distinguished from regular files "
"with the VSI_ISDIR(stat.st_mode) macro as for regular file systems. "
"Getting directory listing and file statistics are fast operations."
msgstr ""

#: ../../source/user/virtual_file_systems.rst:193
msgid ""
"Note: in the particular case where the .tar file contains a single file "
"located at its root, just mentioning :file:`/vsitar/path/to/the/file.tar`"
" will work."
msgstr ""

#: ../../source/user/virtual_file_systems.rst:203
msgid ""
"Starting with GDAL 2.2, an alternate syntax is available so as to enable "
"chaining and not being dependent on .tar extension, e.g.: "
":file:`/vsitar/{/path/to/the/archive}/path/inside/the/tar/file`. Note "
"that :file:`/path/to/the/archive` may also itself use this alternate "
"syntax."
msgstr ""

#: ../../source/user/virtual_file_systems.rst:208
msgid "/vsi7z/ (.7z archives)"
msgstr ""

#: ../../source/user/virtual_file_systems.rst:212
msgid ""
"/vsi7z/ is a file handler that allows reading `7z "
"<https://en.wikipedia.org/wiki/7z>`__ archives on-the-fly without "
"decompressing them beforehand. This file system is read-only. Directory "
"listing and :cpp:func:`VSIStatL` are available, similarly to above "
"mentioned file systems."
msgstr ""

#: ../../source/user/virtual_file_systems.rst:217
#: ../../source/user/virtual_file_systems.rst:249
msgid ""
"It requires GDAL to be built against `libarchive "
"<https://libarchive.org/>`__ (and libarchive having LZMA support to be of"
" practical use)."
msgstr ""

#: ../../source/user/virtual_file_systems.rst:220
msgid ""
"To point to a file inside a 7z file, the filename must be of the form "
":file:`/vsi7z/path/to/the/file.7z/path/inside/the/7z/file`, where "
":file:`path/to/the/file.7z` is relative or absolute and "
":file:`path/inside/the/7z/file` is the relative path to the file inside "
"the archive.`"
msgstr ""

#: ../../source/user/virtual_file_systems.rst:225
msgid ""
"Default extensions recognized by this virtual file system are: ``7z``, "
"``lpk`` (Esri ArcGIS Layer Package), ``lpkx``, ``mpk`` (Esri ArcGIS Map "
"Package), ``mpkx`` and ``ppkx`` (Esri ArcGIS Pro Project Package)."
msgstr ""

#: ../../source/user/virtual_file_systems.rst:229
msgid ""
"An alternate syntax is available so as to enable chaining and not being "
"dependent on those extensions, e.g.: "
":file:`/vsi7z/{/path/to/the/archive}/path/inside/the/archive`. Note that "
":file:`/path/to/the/archive` may also itself use this alternate syntax."
msgstr ""

#: ../../source/user/virtual_file_systems.rst:233
#: ../../source/user/virtual_file_systems.rst:263
msgid ""
"Note that random seeking within a large compressed file will be "
"inefficient when backward seeking is needed (decompression will be "
"restarted from the start of the file). Performance will be the best in "
"sequential reading."
msgstr ""

#: ../../source/user/virtual_file_systems.rst:240
msgid "/vsirar/ (.rar archives)"
msgstr ""

#: ../../source/user/virtual_file_systems.rst:244
msgid ""
"/vsirar/ is a file handler that allows reading `RAR "
"<https://en.wikipedia.org/wiki/RAR_(file_format)>`__ archives on-the-fly "
"without decompressing them beforehand. This file system is read-only. "
"Directory listing and :cpp:func:`VSIStatL` are available, similarly to "
"above mentioned file systems."
msgstr ""

#: ../../source/user/virtual_file_systems.rst:252
msgid ""
"To point to a file inside a RAR file, the filename must be of the form "
":file:`/vsirar/path/to/the/file.rar/path/inside/the/rar/file`, where "
":file:`path/to/the/file.rar` is relative or absolute and "
":file:`path/inside/the/rar/file` is the relative path to the file inside "
"the archive.`"
msgstr ""

#: ../../source/user/virtual_file_systems.rst:257
msgid "The default extension recognized by this virtual file system is: ``rar``"
msgstr ""

#: ../../source/user/virtual_file_systems.rst:259
msgid ""
"An alternate syntax is available so as to enable chaining and not being "
"dependent on those extensions, e.g.: "
":file:`/vsirar/{/path/to/the/archive}/path/inside/the/archive`. Note that"
" :file:`/path/to/the/archive` may also itself use this alternate syntax."
msgstr ""

#: ../../source/user/virtual_file_systems.rst:270
msgid "Network based file systems"
msgstr ""

#: ../../source/user/virtual_file_systems.rst:272
msgid ""
"A generic :ref:`/vsicurl/ <vsicurl>` file system handler exists for "
"online resources that do not require particular signed authentication "
"schemes. It is specialized into sub-filesystems for commercial cloud "
"storage services, such as :ref:`/vsis3/ <vsis3>`,  :ref:`/vsigs/ "
"<vsigs>`, :ref:`/vsiaz/ <vsiaz>`, :ref:`/vsioss/ <vsioss>` or  "
":ref:`/vsiswift/ <vsiswift>`."
msgstr ""

#: ../../source/user/virtual_file_systems.rst:274
msgid ""
"When reading of entire files in a streaming way is possible, prefer using"
" the :ref:`/vsicurl_streaming/ <vsicurl_streaming>`, and its variants for"
" the above cloud storage services, for more efficiency."
msgstr ""

#: ../../source/user/virtual_file_systems.rst:277
msgid "How to set credentials ?"
msgstr ""

#: ../../source/user/virtual_file_systems.rst:279
msgid ""
"Cloud storage services require setting credentials. For some of them, "
"they can be provided through configuration files (~/.aws/config, ~/.boto,"
" ..) or through environment variables / configuration options."
msgstr ""

#: ../../source/user/virtual_file_systems.rst:283
msgid ""
"Starting with GDAL 3.6, :cpp:func:`VSISetPathSpecificOption` can be used "
"to set configuration options with a granularity at the level of a file "
"path, which makes it easier if using the same virtual file system but "
"with different credentials (e.g. different credentials for bucket "
"\"/vsis3/foo\" and \"/vsis3/bar\")"
msgstr ""

#: ../../source/user/virtual_file_systems.rst:288
msgid ""
"Starting with GDAL 3.5, credentials (or path specific options) can be "
"specified in a :ref:`GDAL configuration file <gdal_configuration_file>`, "
"either in a specific one explicitly loaded with "
":cpp:func:`CPLLoadConfigOptionsFromFile`, or one of the default "
"automatically loaded by "
":cpp:func:`CPLLoadConfigOptionsFromPredefinedFiles`."
msgstr ""

#: ../../source/user/virtual_file_systems.rst:293
msgid ""
"They should be put under a ``[credentials]`` section, and for each path "
"prefix, under a relative subsection whose name starts with ``[.`` (e.g. "
"``[.some_arbitrary_name]``), and whose first key is ``path``. ` .. code-"
"block::"
msgstr ""

#: ../../source/user/virtual_file_systems.rst:311
msgid "Network/cloud-friendliness and file formats"
msgstr ""

#: ../../source/user/virtual_file_systems.rst:313
msgid ""
"While most GDAL raster and vector file systems can be accessed in a "
"remote way with /vsicurl/ and other derived virtual file systems, "
"performance is highly dependent on the format, and even for a given "
"format on the special data arrangement. Performance also depends on the "
"particular access pattern made to the file."
msgstr ""

#: ../../source/user/virtual_file_systems.rst:319
msgid ""
"For interactive visualisation of raster files, the file should ideally "
"have the following characteristics:"
msgstr ""

#: ../../source/user/virtual_file_systems.rst:322
msgid "it should be tiled in generally square-shaped tiles."
msgstr ""

#: ../../source/user/virtual_file_systems.rst:323
msgid "it should have an index of the tile location within the file"
msgstr ""

#: ../../source/user/virtual_file_systems.rst:324
msgid "it should have overviews/pyramids"
msgstr ""

#: ../../source/user/virtual_file_systems.rst:327
msgid "TIFF/GeoTIFF"
msgstr ""

#: ../../source/user/virtual_file_systems.rst:329
msgid ""
"Cloud-optimized GeoTIFF files as generated by the :ref:`raster.cog` "
"driver are suitable for network access. More generally tiled GeoTIFF "
"files with overviews are."
msgstr ""

#: ../../source/user/virtual_file_systems.rst:336
msgid ""
"JPEG2000 is generally not suitable for network access, unless using a "
"layout carefully designed for that purpose, and when using a JPEG200 "
"library that is heavily optimized."
msgstr ""

#: ../../source/user/virtual_file_systems.rst:340
msgid ""
"JPEG2000 files can come in many flavors : single-tiled vs tiled, with "
"different progression order (this is of particular importance for single-"
"tiled access), and with optional markers"
msgstr ""

#: ../../source/user/virtual_file_systems.rst:344
msgid ""
"The OpenJPEG library (usable through the :ref:`raster.jp2openjpeg` "
"driver), at the time of writing, needs to ingest each tile-part that "
"participates to the area of interest of the pixel query in a whole (and "
"thus for a single-tiled file, to ingest the whole file). It also does not"
" make use of the potentially present TLM (Tile-Part length) marker, which"
" is the equivalent of a tile index, nor PLT (Packed Length, tile-part "
"header), which is an index of packets within a tile. The Kakadu library  "
"(usable through the :ref:`raster.jp2kak` driver), can use those markers "
"to limit the number of bytes to ingest (but for single-tiled raster, "
"performance might still suffer.)"
msgstr ""

#: ../../source/user/virtual_file_systems.rst:354
msgid ""
"The `dump_jp2.py "
"<https://raw.githubusercontent.com/OSGeo/gdal/master/swig/python/gdal-"
"utils/osgeo_utils/samples/dump_jp2.py>`__ Python script can be used to "
"check the characteristics of a given JPEG200 file. Fields of interest to "
"examine in the output are:"
msgstr ""

#: ../../source/user/virtual_file_systems.rst:358
msgid ""
"the tile size (given by the ``XTsiz`` and ``YTsiz`` fields in the ``SIZ``"
" marker)"
msgstr ""

#: ../../source/user/virtual_file_systems.rst:359
msgid "the presence of ``TLM`` markers"
msgstr ""

#: ../../source/user/virtual_file_systems.rst:360
msgid "the presence of ``PLT`` markers"
msgstr ""

#: ../../source/user/virtual_file_systems.rst:365
msgid "/vsicurl/ (http/https/ftp files: random access)"
msgstr ""

#: ../../source/user/virtual_file_systems.rst:367
msgid ""
"/vsicurl/ is a file system handler that allows on-the-fly random reading "
"of files available through HTTP/FTP web protocols, without prior download"
" of the entire file. It requires GDAL to be built against libcurl."
msgstr ""

#: ../../source/user/virtual_file_systems.rst:369
msgid ""
"Recognized filenames are of the form "
":file:`/vsicurl/http[s]://path/to/remote/resource` or "
":file:`/vsicurl/ftp://path/to/remote/resource`, where "
":file:`path/to/remote/resource` is the URL of a remote resource."
msgstr ""

#: ../../source/user/virtual_file_systems.rst:371
msgid "Example using :program:`ogrinfo` to read a shapefile on the internet:"
msgstr ""

#: ../../source/user/virtual_file_systems.rst:377
msgid ""
"Starting with GDAL 2.3, options can be passed in the filename with the "
"following syntax: ``/vsicurl?[option_i=val_i&]*url=http://...`` where "
"each option name and value (including the value of \"url\") is URL-"
"encoded. Currently supported options are:"
msgstr ""

#: ../../source/user/virtual_file_systems.rst:379
msgid ""
"use_head=yes/no: whether the HTTP HEAD request can be emitted. Default to"
" YES. Setting this option overrides the behavior of the "
":config:`CPL_VSIL_CURL_USE_HEAD` configuration option."
msgstr ""

#: ../../source/user/virtual_file_systems.rst:380
msgid ""
"max_retry=number: default to 0. Setting this option overrides the "
"behavior of the :config:`GDAL_HTTP_MAX_RETRY` configuration option."
msgstr ""

#: ../../source/user/virtual_file_systems.rst:381
msgid ""
"retry_delay=number_in_seconds: default to 30. Setting this option "
"overrides the behavior of the :config:`GDAL_HTTP_RETRY_DELAY` "
"configuration option."
msgstr ""

#: ../../source/user/virtual_file_systems.rst:382
msgid ""
"retry_codes=``ALL`` or comma-separated list of HTTP error codes. Setting "
"this option overrides the behavior of the :config:`GDAL_HTTP_RETRY_CODES`"
" configuration option. (GDAL >= 3.10)"
msgstr ""

#: ../../source/user/virtual_file_systems.rst:383
msgid ""
"list_dir=yes/no: whether an attempt to read the file list of the "
"directory where the file is located should be done. Default to YES."
msgstr ""

#: ../../source/user/virtual_file_systems.rst:384
msgid "useragent=value: HTTP UserAgent header"
msgstr ""

#: ../../source/user/virtual_file_systems.rst:385
msgid "referer=value: HTTP Referer header"
msgstr ""

#: ../../source/user/virtual_file_systems.rst:386
msgid "cookie=value: HTTP Cookie header"
msgstr ""

#: ../../source/user/virtual_file_systems.rst:387
msgid ""
"header_file=value: Filename that contains one or several \"Header: "
"Value\" lines"
msgstr ""

#: ../../source/user/virtual_file_systems.rst:388
msgid "unsafessl=yes/no"
msgstr ""

#: ../../source/user/virtual_file_systems.rst:389
msgid "low_speed_time=value"
msgstr ""

#: ../../source/user/virtual_file_systems.rst:390
msgid "low_speed_limit=value"
msgstr ""

#: ../../source/user/virtual_file_systems.rst:391
msgid "proxy=value"
msgstr ""

#: ../../source/user/virtual_file_systems.rst:392
msgid "proxyauth=value"
msgstr ""

#: ../../source/user/virtual_file_systems.rst:393
msgid "proxyuserpwd=value"
msgstr ""

#: ../../source/user/virtual_file_systems.rst:394
msgid ""
"pc_url_signing=yes/no: whether to use the URL signing mechanism of "
"Microsoft Planetary Computer "
"(https://planetarycomputer.microsoft.com/docs/concepts/sas/). (GDAL >= "
"3.5.2). Note that starting with GDAL 3.9, this may also be set with the "
"path-specific option ( cf :cpp:func:`VSISetPathSpecificOption`) "
"``VSICURL_PC_URL_SIGNING`` set to ``YES``."
msgstr ""

#: ../../source/user/virtual_file_systems.rst:395
msgid ""
"pc_collection=name: name of the collection of the dataset for Planetary "
"Computer URL signing. Only used when pc_url_signing=yes. (GDAL >= 3.5.2)"
msgstr ""

#: ../../source/user/virtual_file_systems.rst:397
msgid ""
"Partial downloads (requires the HTTP server to support random reading) "
"are done with a 16 KB granularity by default. Starting with GDAL 2.3, the"
" chunk size can be configured with the :config:`CPL_VSIL_CURL_CHUNK_SIZE`"
" configuration option, with a value in bytes. If the driver detects "
"sequential reading, it will progressively increase the chunk size up to "
"128 times :config:`CPL_VSIL_CURL_CHUNK_SIZE` (so 2 MB by default) to "
"improve download performance."
msgstr ""

#: ../../source/user/virtual_file_systems.rst:399
msgid ""
"In addition, a global least-recently-used cache of 16 MB shared among all"
" downloaded content is used, and content in it may be reused after a file"
" handle has been closed and reopen, during the life-time of the process "
"or until :cpp:func:`VSICurlClearCache` is called. Starting with GDAL 2.3,"
" the size of this global LRU cache can be modified by setting the "
"configuration option :config:`CPL_VSIL_CURL_CACHE_SIZE` (in bytes)."
msgstr ""

#: ../../source/user/virtual_file_systems.rst:401
msgid ""
"When increasing the value of :config:`CPL_VSIL_CURL_CHUNK_SIZE` to "
"optimize sequential reading, it is recommended to increase "
":config:`CPL_VSIL_CURL_CACHE_SIZE` as well to 128 times the value of "
":config:`CPL_VSIL_CURL_CHUNK_SIZE`."
msgstr ""

#: ../../source/user/virtual_file_systems.rst:403
msgid ""
"Starting with GDAL 2.3, the :config:`GDAL_INGESTED_BYTES_AT_OPEN` "
"configuration option can be set to impose the number of bytes read in one"
" GET call at file opening (can help performance to read Cloud optimized "
"geotiff with a large header)."
msgstr ""

#: ../../source/user/virtual_file_systems.rst:405
#: ../../source/user/virtual_file_systems.rst:455
msgid ""
"The :config:`GDAL_HTTP_PROXY` (for both HTTP and HTTPS protocols), "
":config:`GDAL_HTTPS_PROXY` (for HTTPS protocol only), "
":config:`GDAL_HTTP_PROXYUSERPWD` and :config:`GDAL_PROXY_AUTH` "
"configuration options can be used to define a proxy server. The syntax to"
" use is the one of Curl ``CURLOPT_PROXY``, ``CURLOPT_PROXYUSERPWD`` and "
"``CURLOPT_PROXYAUTH`` options."
msgstr ""

#: ../../source/user/virtual_file_systems.rst:407
#: ../../source/user/virtual_file_systems.rst:457
msgid ""
"Starting with GDAL 2.1.3, the :config:`CURL_CA_BUNDLE` or "
":config:`SSL_CERT_FILE` configuration options can be used to set the path"
" to the Certification Authority (CA) bundle file (if not specified, curl "
"will use a file in a system location)."
msgstr ""

#: ../../source/user/virtual_file_systems.rst:409
msgid ""
"Starting with GDAL 2.3, additional HTTP headers can be sent by setting "
"the :config:`GDAL_HTTP_HEADER_FILE` configuration option to point to a "
"filename of a text file with \"key: value\" HTTP headers."
msgstr ""

#: ../../source/user/virtual_file_systems.rst:411
msgid ""
"As an alternative, starting with GDAL 3.6, the "
":config:`GDAL_HTTP_HEADERS` configuration option can also be used to "
"specify headers. :config:`CPL_CURL_VERBOSE=YES` allows one to see them "
"and more, when combined with ``--debug``."
msgstr ""

#: ../../source/user/virtual_file_systems.rst:415
msgid ""
"Starting with GDAL 2.3, the :config:`GDAL_HTTP_MAX_RETRY` (number of "
"attempts) and :config:`GDAL_HTTP_RETRY_DELAY` (in seconds) configuration "
"option can be set, so that request retries are done in case of HTTP "
"errors 429, 502, 503 or 504."
msgstr ""

#: ../../source/user/virtual_file_systems.rst:417
msgid ""
"Starting with GDAL 3.6, the following configuration options control the "
"TCP keep-alive functionality (cf https://daniel.haxx.se/blog/2020/02/10"
"/curl-ootw-keepalive-time/ for a detailed explanation):"
msgstr ""

#: ../../source/user/virtual_file_systems.rst:419
msgid ""
":config:`GDAL_HTTP_TCP_KEEPALIVE` = YES/NO. whether to enable TCP keep-"
"alive. Defaults to NO"
msgstr ""

#: ../../source/user/virtual_file_systems.rst:420
msgid ""
":config:`GDAL_HTTP_TCP_KEEPIDLE` = integer, in seconds. Keep-alive idle "
"time. Defaults to 60. Only taken into account if "
"GDAL_HTTP_TCP_KEEPALIVE=YES."
msgstr ""

#: ../../source/user/virtual_file_systems.rst:421
msgid ""
":config:`GDAL_HTTP_TCP_KEEPINTVL` = integer, in seconds. Interval time "
"between keep-alive probes. Defaults to 60. Only taken into account if "
"GDAL_HTTP_TCP_KEEPALIVE=YES."
msgstr ""

#: ../../source/user/virtual_file_systems.rst:423
msgid ""
"Starting with GDAL 3.7, the following configuration options control "
"support for SSL client certificates:"
msgstr ""

#: ../../source/user/virtual_file_systems.rst:425
msgid ""
":config:`GDAL_HTTP_SSLCERT` = filename. Filename of the the SSL client "
"certificate. Cf https://curl.se/libcurl/c/CURLOPT_SSLCERT.html"
msgstr ""

#: ../../source/user/virtual_file_systems.rst:426
msgid ""
":config:`GDAL_HTTP_SSLCERTTYPE` = string. Format of the SSL certificate: "
"\"PEM\" or \"DER\". Cf https://curl.se/libcurl/c/CURLOPT_SSLCERTTYPE.html"
msgstr ""

#: ../../source/user/virtual_file_systems.rst:427
msgid ""
":config:`GDAL_HTTP_SSLKEY` = filename. Private key file for TLS and SSL "
"client certificate. Cf https://curl.se/libcurl/c/CURLOPT_SSLKEY.html"
msgstr ""

#: ../../source/user/virtual_file_systems.rst:428
msgid ""
":config:`GDAL_HTTP_KEYPASSWD` = string. Passphrase to private key. Cf "
"https://curl.se/libcurl/c/CURLOPT_KEYPASSWD.html"
msgstr ""

#: ../../source/user/virtual_file_systems.rst:430
msgid ""
"More generally options of :cpp:func:`CPLHTTPFetch` available through "
"configuration options are available. Starting with GDAL 3.7, the above "
"configuration options can also be specified as path-specific options with"
" :cpp:func:`VSISetPathSpecificOption`."
msgstr ""

#: ../../source/user/virtual_file_systems.rst:434
msgid ""
"The file can be cached in RAM by setting the configuration option "
":config:`VSI_CACHE` to ``TRUE``. The cache size defaults to 25 MB, but "
"can be modified by setting the configuration option "
":config:`VSI_CACHE_SIZE` (in bytes). Content in that cache is discarded "
"when the file handle is closed."
msgstr ""

#: ../../source/user/virtual_file_systems.rst:436
msgid ""
"Starting with GDAL 2.3, the :config:`CPL_VSIL_CURL_NON_CACHED` "
"configuration option can be set to values like "
":file:`/vsicurl/http://example.com/foo.tif:/vsicurl/http://example.com/some_directory`,"
" so that at file handle closing, all cached content related to the "
"mentioned file(s) is no longer cached. This can help when dealing with "
"resources that can be modified during execution of GDAL related code. "
"Alternatively, :cpp:func:`VSICurlClearCache` can be used."
msgstr ""

#: ../../source/user/virtual_file_systems.rst:438
msgid ""
"Starting with GDAL 2.1, ``/vsicurl/`` will try to query directly "
"redirected URLs to Amazon S3 signed URLs during their validity period, so"
" as to minimize round-trips. This behavior can be disabled by setting the"
" configuration option :config:`CPL_VSIL_CURL_USE_S3_REDIRECT` to ``NO``."
msgstr ""

#: ../../source/user/virtual_file_systems.rst:440
#: ../../source/user/virtual_file_systems.rst:461
msgid ""
":cpp:func:`VSIStatL` will return the size in st_size member and file "
"nature- file or directory - in st_mode member (the later only reliable "
"with FTP resources for now)."
msgstr ""

#: ../../source/user/virtual_file_systems.rst:442
msgid ""
":cpp:func:`VSIReadDir` should be able to parse the HTML directory listing"
" returned by the most popular web servers, such as Apache and Microsoft "
"IIS."
msgstr ""

#: ../../source/user/virtual_file_systems.rst:447
msgid "/vsicurl_streaming/ (http/https/ftp files: streaming)"
msgstr ""

#: ../../source/user/virtual_file_systems.rst:449
msgid ""
"/vsicurl_streaming/ is a file system handler that allows on-the-fly "
"sequential reading of files streamed through HTTP/FTP web protocols, "
"without prior download of the entire file. It requires GDAL to be built "
"against libcurl."
msgstr ""

#: ../../source/user/virtual_file_systems.rst:451
msgid ""
"Although this file handler is able seek to random offsets in the file, "
"this will not be efficient. If you need efficient random access and that "
"the server supports range downloading, you should use the :ref:`/vsicurl/"
" <vsicurl>` file system handler instead."
msgstr ""

#: ../../source/user/virtual_file_systems.rst:453
msgid ""
"Recognized filenames are of the form "
":file:`/vsicurl_streaming/http[s]://path/to/remote/resource` or "
":file:`/vsicurl_streaming/ftp://path/to/remote/resource`, where "
":file:`path/to/remote/resource` is the URL of a remote resource."
msgstr ""

#: ../../source/user/virtual_file_systems.rst:459
msgid ""
"The file can be cached in RAM by setting the configuration option "
":config:`VSI_CACHE` to ``TRUE``. The cache size defaults to 25 MB, but "
"can be modified by setting the configuration option "
":config:`VSI_CACHE_SIZE` (in bytes)."
msgstr ""

#: ../../source/user/virtual_file_systems.rst:466
msgid "/vsis3/ (AWS S3 files)"
msgstr ""

#: ../../source/user/virtual_file_systems.rst:468
msgid ""
"/vsis3/ is a file system handler that allows on-the-fly random reading of"
" (primarily non-public) files available in AWS S3 buckets, without prior "
"download of the entire file. It requires GDAL to be built against "
"libcurl."
msgstr ""

#: ../../source/user/virtual_file_systems.rst:470
msgid ""
"It also allows sequential writing of files. No seeks or read operations "
"are then allowed, so in particular direct writing of GeoTIFF files with "
"the GTiff driver is not supported, unless, if, starting with GDAL 3.2, "
"the :config:`CPL_VSIL_USE_TEMP_FILE_FOR_RANDOM_WRITE` configuration "
"option is set to ``YES``, in which case random-write access is possible "
"(involves the creation of a temporary local file, whose location is "
"controlled by the :config:`CPL_TMPDIR` configuration option). Deletion of"
" files with :cpp:func:`VSIUnlink` is also supported. Starting with GDAL "
"2.3, creation of directories with :cpp:func:`VSIMkdir` and deletion of "
"(empty) directories with :cpp:func:`VSIRmdir` are also possible."
msgstr ""

#: ../../source/user/virtual_file_systems.rst:474
msgid ""
"Recognized filenames are of the form :file:`/vsis3/bucket/key`, where "
"``bucket`` is the name of the S3 bucket and ``key`` is the S3 object "
"\"key\", i.e. a filename potentially containing subdirectories."
msgstr ""

#: ../../source/user/virtual_file_systems.rst:476
#: ../../source/user/virtual_file_systems.rst:690
#: ../../source/user/virtual_file_systems.rst:804
#: ../../source/user/virtual_file_systems.rst:935
#: ../../source/user/virtual_file_systems.rst:991
#: ../../source/user/virtual_file_systems.rst:1119
msgid "The generalities of :ref:`/vsicurl/ <vsicurl>` apply."
msgstr ""

#: ../../source/user/virtual_file_systems.rst:478
msgid "The following configuration options are specific to the /vsis3/ handler:"
msgstr ""

#: ../../source/user/virtual_file_systems.rst:533
msgid ""
"Path to file with identity token for use for authentication via the "
"`AssumeRoleWithWebIdentity API "
"<https://docs.aws.amazon.com/STS/latest/APIReference/API_AssumeRoleWithWebIdentity.html>`_."
msgstr ""

#: ../../source/user/virtual_file_systems.rst:609
#: ../../source/user/virtual_file_systems.rst:758
#: ../../source/user/virtual_file_systems.rst:861
msgid ""
"Several authentication methods are possible, and are attempted in the "
"following order:"
msgstr ""

#: ../../source/user/virtual_file_systems.rst:611
msgid ""
"If :config:`AWS_NO_SIGN_REQUEST=YES` configuration option is set, request"
" signing is disabled. This option might be used for buckets with public "
"access rights. Available since GDAL 2.3"
msgstr ""

#: ../../source/user/virtual_file_systems.rst:612
msgid ""
"The :config:`AWS_SECRET_ACCESS_KEY` and :config:`AWS_ACCESS_KEY_ID` "
"configuration options can be set. The :config:`AWS_SESSION_TOKEN` "
"configuration option must be set when temporary credentials are used."
msgstr ""

#: ../../source/user/virtual_file_systems.rst:613
msgid ""
"Starting with GDAL 2.3, alternate ways of providing credentials similar "
"to what the \"aws\" command line utility or Boto3 support can be used. If"
" the above mentioned environment variables are not provided, the "
"``~/.aws/credentials`` or ``%UserProfile%/.aws/credentials`` file will be"
" read (or the file pointed by :config:`CPL_AWS_CREDENTIALS_FILE`). The "
"profile may be specified with the :config:`AWS_DEFAULT_PROFILE` "
"environment variable, or starting with GDAL 3.2 with the "
":config:`AWS_PROFILE` environment variable (the default profile is "
"\"default\")."
msgstr ""

#: ../../source/user/virtual_file_systems.rst:614
msgid ""
"The ``~/.aws/config`` or ``%UserProfile%/.aws/config`` file may also be "
"used (or the file pointer by :config:`AWS_CONFIG_FILE`) to retrieve "
"credentials and the AWS region."
msgstr ""

#: ../../source/user/virtual_file_systems.rst:615
msgid ""
"Starting with GDAL 3.6, if :config:`AWS_ROLE_ARN` and "
":config:`AWS_WEB_IDENTITY_TOKEN_FILE` are defined we will rely on "
"credentials mechanism for web identity token based AWS STS action "
"AssumeRoleWithWebIdentity (See.: "
"https://docs.aws.amazon.com/eks/latest/userguide/iam-roles-for-service-"
"accounts.html)"
msgstr ""

#: ../../source/user/virtual_file_systems.rst:616
msgid ""
"If none of the above method succeeds, instance profile credentials will "
"be retrieved when GDAL is used on EC2 instances (cf :ref:`vsis3_imds`)"
msgstr ""

#: ../../source/user/virtual_file_systems.rst:618
msgid ""
"On writing, the file is uploaded using the S3 multipart upload API. The "
"size of chunks is set to 50 MB by default, allowing creating files up to "
"500 GB (10000 parts of 50 MB each). If larger files are needed, then "
"increase the value of the :config:`VSIS3_CHUNK_SIZE` config option to a "
"larger value (expressed in MB). In case the process is killed and the "
"file not properly closed, the multipart upload will remain open, causing "
"Amazon to charge you for the parts storage. You'll have to abort yourself"
" with other means such \"ghost\" uploads (e.g. with the s3cmd utility) "
"For files smaller than the chunk size, a simple PUT request is used "
"instead of the multipart upload API."
msgstr ""

#: ../../source/user/virtual_file_systems.rst:620
#: ../../source/user/virtual_file_systems.rst:877
msgid ""
"Since GDAL 3.1, the :cpp:func:`VSIRename` operation is supported (first "
"doing a copy of the original file and then deleting it)"
msgstr ""

#: ../../source/user/virtual_file_systems.rst:622
msgid ""
"Since GDAL 3.1, the :cpp:func:`VSIRmdirRecursive` operation is supported "
"(using batch deletion method). The "
":config:`CPL_VSIS3_USE_BASE_RMDIR_RECURSIVE` configuration option can be "
"set to YES if using a S3-like API that doesn't support batch deletion "
"(GDAL >= 3.2). Starting with GDAL 3.6, this can be set as a path-specific"
" option in the :ref:`GDAL configuration file <gdal_configuration_file>`"
msgstr ""

#: ../../source/user/virtual_file_systems.rst:624
msgid ""
"The :config:`CPL_VSIS3_CREATE_DIR_OBJECT` configuration option can be set"
" to NO to prevent the :cpp:func:`VSIMkdir` operation from creating an "
"empty object with the name of the directory terminated with a slash "
"directory. By default GDAL creates such object, so that empty directories"
" can be modeled, but this may cause compatibility problems with "
"applications that do not expect such empty objects."
msgstr ""

#: ../../source/user/virtual_file_systems.rst:627
msgid ""
"Starting with GDAL 3.5, profiles that use IAM role assumption (see "
"https://docs.aws.amazon.com/cli/latest/userguide/cli-configure-role.html)"
" are handled. The ``role_arn`` and ``source_profile`` keywords are "
"required in such profiles. The optional ``external_id``, ``mfa_serial`` "
"and ``role_session_name`` can be specified. ``credential_source`` is not "
"supported currently."
msgstr ""

#: ../../source/user/virtual_file_systems.rst:632
msgid "/vsis3/ and AWS Instance Metadata Service (IMDS)"
msgstr ""

#: ../../source/user/virtual_file_systems.rst:634
msgid ""
"On EC2 instances, GDAL will try to use the `IMDSv2 "
"<https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/configuring-"
"instance-metadata-service.html>`__ protocol in priority to get the "
"authentication tokens for AWS S3, and fallback to IMDSv1 in case of "
"failure. Note however that on recent Amazon Linux instances, IMDSv1 is no"
" longer accessible, and thus IMDSv2 must be correctly configured (and "
"even if IMDSv1 is available, mis-configured IMDSv2 will cause delays in "
"the authentication step)."
msgstr ""

#: ../../source/user/virtual_file_systems.rst:636
msgid ""
"There are known issues when running inside a Docker instance in a EC2 "
"instance that require extra configuration of the instance. For example, "
"you need to `increase the hop limit to 2 "
"<https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/instancedata-data-"
"retrieval.html#imds-considerations>`__"
msgstr ""

#: ../../source/user/virtual_file_systems.rst:638
msgid "There are several ways to do this. One way is to run this command: ::"
msgstr ""

#: ../../source/user/virtual_file_systems.rst:646
msgid ""
"Another is to set the HttpPutResponseHopLimit metadata on an "
"AutoScalingGroup LaunchTemplate: - "
"https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_InstanceMetadataOptionsRequest.html"
" - https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-"
"properties-ec2-launchtemplate-metadataoptions.html"
msgstr ""

#: ../../source/user/virtual_file_systems.rst:650
msgid ""
"Another possibility is to start the Docker container with host networking"
" (``--network=host``), although this breaks isolation of containers by "
"exposing all ports of the host to the container and has thus `security "
"implications <https://stackoverflow.com/a/57051970/40785>`__."
msgstr ""

#: ../../source/user/virtual_file_systems.rst:653
msgid "Configuring /vsis3/ with Minio"
msgstr ""

#: ../../source/user/virtual_file_systems.rst:655
msgid ""
"The following configuration options can be set to access a `Minio Docker "
"image <https://min.io/docs/minio/container/index.html>`__"
msgstr ""

#: ../../source/user/virtual_file_systems.rst:658
msgid "AWS_VIRTUAL_HOSTING=FALSE"
msgstr ""

#: ../../source/user/virtual_file_systems.rst:659
msgid "AWS_HTTPS=NO"
msgstr ""

#: ../../source/user/virtual_file_systems.rst:660
msgid "AWS_S3_ENDPOINT=\"localhost:9000\""
msgstr ""

#: ../../source/user/virtual_file_systems.rst:661
msgid "AWS_REGION=\"us-east-1\""
msgstr ""

#: ../../source/user/virtual_file_systems.rst:662
msgid "AWS_SECRET_ACCESS_KEY=\"your_secret_access_key\""
msgstr ""

#: ../../source/user/virtual_file_systems.rst:663
msgid "AWS_ACCESS_KEY_ID=\"your_access_key\""
msgstr ""

#: ../../source/user/virtual_file_systems.rst:668
msgid "/vsis3_streaming/ (AWS S3 files: streaming)"
msgstr ""

#: ../../source/user/virtual_file_systems.rst:670
msgid ""
"/vsis3_streaming/ is a file system handler that allows on-the-fly "
"sequential reading of (primarily non-public) files available in AWS S3 "
"buckets, without prior download of the entire file. It requires GDAL to "
"be built against libcurl."
msgstr ""

#: ../../source/user/virtual_file_systems.rst:672
msgid ""
"Recognized filenames are of the form :file:`/vsis3_streaming/bucket/key` "
"where ``bucket`` is the name of the S3 bucket and ``key`` is the S3 "
"object \"key\", i.e. a filename potentially containing subdirectories."
msgstr ""

#: ../../source/user/virtual_file_systems.rst:674
msgid ""
"Authentication options, and read-only features, are identical to "
":ref:`/vsis3/ <vsis3>`"
msgstr ""

#: ../../source/user/virtual_file_systems.rst:681
msgid "/vsigs/ (Google Cloud Storage files)"
msgstr ""

#: ../../source/user/virtual_file_systems.rst:683
msgid ""
"/vsigs/ is a file system handler that allows on-the-fly random reading of"
" (primarily non-public) files available in Google Cloud Storage buckets, "
"without prior download of the entire file. It requires GDAL to be built "
"against libcurl."
msgstr ""

#: ../../source/user/virtual_file_systems.rst:685
msgid ""
"Starting with GDAL 2.3, it also allows sequential writing of files. No "
"seeks or read operations are then allowed, so in particular direct "
"writing of GeoTIFF files with the GTiff driver is not supported, unless, "
"if, starting with GDAL 3.2, the "
":config:`CPL_VSIL_USE_TEMP_FILE_FOR_RANDOM_WRITE` configuration option is"
" set to ``YES``, in which case random-write access is possible (involves "
"the creation of a temporary local file, whose location is controlled by "
"the :config:`CPL_TMPDIR` configuration option). Deletion of files with "
":cpp:func:`VSIUnlink`, creation of directories with :cpp:func:`VSIMkdir` "
"and deletion of (empty) directories with :cpp:func:`VSIRmdir` are also "
"possible."
msgstr ""

#: ../../source/user/virtual_file_systems.rst:688
msgid ""
"Recognized filenames are of the form :file:`/vsigs/bucket/key` where "
"``bucket`` is the name of the bucket and ``key`` is the object \"key\", "
"i.e. a filename potentially containing subdirectories."
msgstr ""

#: ../../source/user/virtual_file_systems.rst:692
msgid "The following configuration options are specific to the /vsigs/ handler:"
msgstr ""

#: ../../source/user/virtual_file_systems.rst:760
msgid ""
"If :config:`GS_NO_SIGN_REQUEST=YES` configuration option is set, request "
"signing is disabled. This option might be used for buckets with public "
"access rights. Available since GDAL 3.4"
msgstr ""

#: ../../source/user/virtual_file_systems.rst:761
msgid ""
"The :config:`GS_SECRET_ACCESS_KEY` and :config:`GS_ACCESS_KEY_ID` "
"configuration options can be set for AWS-style authentication"
msgstr ""

#: ../../source/user/virtual_file_systems.rst:762
msgid ""
"The :config:`GDAL_HTTP_HEADER_FILE` configuration option to point to a "
"filename of a text file with \"key: value\" headers. Typically, it must "
"contain a \"Authorization: Bearer XXXXXXXXX\" line."
msgstr ""

#: ../../source/user/virtual_file_systems.rst:763
msgid ""
"(GDAL >= 3.7) The :config:`GDAL_HTTP_HEADERS` configuration option can "
"also be set. It must contain at least a line starting with "
"\"Authorization:\" to be used as an authentication method."
msgstr ""

#: ../../source/user/virtual_file_systems.rst:764
msgid ""
"(GDAL >= 2.3) The :config:`GS_OAUTH2_REFRESH_TOKEN` configuration option "
"can be set to use OAuth2 client authentication. See "
"http://code.google.com/apis/accounts/docs/OAuth2.html This refresh token "
"can be obtained with the ``gdal_auth.py -s storage`` or ``gdal_auth.py -s"
" storage-rw`` script Note: instead of using the default GDAL application "
"credentials, you may define the :config:`GS_OAUTH2_CLIENT_ID` and "
":config:`GS_OAUTH2_CLIENT_SECRET` configuration options (need to be "
"defined both for gdal_auth.py and later execution of /vsigs)"
msgstr ""

#: ../../source/user/virtual_file_systems.rst:765
msgid ""
"(GDAL >= 2.3) The :config:`GOOGLE_APPLICATION_CREDENTIALS` configuration "
"option can be set to point to a JSON file containing OAuth2 service "
"account credentials (``type: service_account``), in particular a private "
"key and a client email. See "
"https://developers.google.com/identity/protocols/OAuth2ServiceAccount for"
" more details on this authentication method. The bucket must grant the "
"\"Storage Legacy Bucket Owner\" or \"Storage Legacy Bucket Reader\" "
"permissions to the service account. The :config:`GS_OAUTH2_SCOPE` "
"configuration option can be set to change the default permission scope "
"from \"https://www.googleapis.com/auth/devstorage.read_write\" to "
"\"https://www.googleapis.com/auth/devstorage.read_only\" if needed."
msgstr ""

#: ../../source/user/virtual_file_systems.rst:766
msgid ""
"(GDAL >= 3.4.2) The :config:`GOOGLE_APPLICATION_CREDENTIALS` "
"configuration option can be set to point to a JSON file containing OAuth2"
" user credentials (``type: authorized_user``)."
msgstr ""

#: ../../source/user/virtual_file_systems.rst:767
msgid ""
"(GDAL >= 2.3) Variant of the previous method. The "
":config:`GS_OAUTH2_PRIVATE_KEY` (or :config:`GS_OAUTH2_PRIVATE_KEY_FILE` "
"and :config:`GS_OAUTH2_CLIENT_EMAIL` can be set to use OAuth2 service "
"account authentication. See "
"https://developers.google.com/identity/protocols/OAuth2ServiceAccount for"
" more details on this authentication method. The "
":config:`GS_OAUTH2_PRIVATE_KEY` configuration option must contain the "
"private key as a inline string, starting with ``-----BEGIN PRIVATE "
"KEY-----``. Alternatively the :config:`GS_OAUTH2_PRIVATE_KEY_FILE` "
"configuration option can be set to indicate a filename that contains such"
" a private key. The bucket must grant the \"Storage Legacy Bucket Owner\""
" or \"Storage Legacy Bucket Reader\" permissions to the service account. "
"The :config:`GS_OAUTH2_SCOPE` configuration option can be set to change "
"the default permission scope from "
"\"https://www.googleapis.com/auth/devstorage.read_write\" to "
"\"https://www.googleapis.com/auth/devstorage.read_only\" if needed."
msgstr ""

#: ../../source/user/virtual_file_systems.rst:768
msgid ""
"(GDAL >= 2.3) An alternate way of providing credentials similar to what "
"the \"gsutil\" command line utility or Boto3 support can be used. If the "
"above mentioned environment variables are not provided, the "
":file:`~/.boto` or :file:`UserProfile%/.boto` file will be read (or the "
"file pointed by :config:`CPL_GS_CREDENTIALS_FILE`) for the "
"gs_secret_access_key and gs_access_key_id entries for AWS style "
"authentication. If not found, it will look for the "
"gs_oauth2_refresh_token (and optionally client_id and client_secret) "
"entry for OAuth2 client authentication."
msgstr ""

#: ../../source/user/virtual_file_systems.rst:769
msgid ""
"(GDAL >= 2.3) Finally if none of the above method succeeds, the code will"
" check if the current machine is a Google Compute Engine instance, and if"
" so will use the permissions associated to it (using the default service "
"account associated with the VM). To force a machine to be detected as a "
"GCE instance (for example for code running in a container with no access "
"to the boot logs), you can set :config:`CPL_MACHINE_IS_GCE` to ``YES``."
msgstr ""

#: ../../source/user/virtual_file_systems.rst:771
msgid ""
"Since GDAL 3.1, the Rename() operation is supported (first doing a copy "
"of the original file and then deleting it)."
msgstr ""

#: ../../source/user/virtual_file_systems.rst:778
msgid "/vsigs_streaming/ (Google Cloud Storage files: streaming)"
msgstr ""

#: ../../source/user/virtual_file_systems.rst:780
msgid ""
"/vsigs_streaming/ is a file system handler that allows on-the-fly "
"sequential reading of files (primarily non-public) files available in "
"Google Cloud Storage buckets, without prior download of the entire file. "
"It requires GDAL to be built against libcurl."
msgstr ""

#: ../../source/user/virtual_file_systems.rst:782
msgid ""
"Recognized filenames are of the form :file:`/vsigs_streaming/bucket/key` "
"where ``bucket`` is the name of the bucket and ``key`` is the object "
"\"key\", i.e. a filename potentially containing subdirectories."
msgstr ""

#: ../../source/user/virtual_file_systems.rst:784
msgid ""
"Authentication options, and read-only features, are identical to "
":ref:`/vsigs/ <vsigs>`"
msgstr ""

#: ../../source/user/virtual_file_systems.rst:791
msgid "/vsiaz/ (Microsoft Azure Blob files)"
msgstr ""

#: ../../source/user/virtual_file_systems.rst:793
msgid ""
"/vsiaz/ is a file system handler that allows on-the-fly random reading of"
" (primarily non-public) files available in Microsoft Azure Blob "
"containers, without prior download of the entire file. It requires GDAL "
"to be built against libcurl."
msgstr ""

#: ../../source/user/virtual_file_systems.rst:795
msgid ""
"See :ref:`/vsiadls/ <vsiadls>` for a related filesystem for Azure Data "
"Lake Storage Gen2."
msgstr ""

#: ../../source/user/virtual_file_systems.rst:797
msgid ""
"It also allows sequential writing of files. No seeks or read operations "
"are then allowed, so in particular direct writing of GeoTIFF files with "
"the GTiff driver is not supported, unless, if, starting with GDAL 3.2, "
"the :config:`CPL_VSIL_USE_TEMP_FILE_FOR_RANDOM_WRITE` configuration "
"option is set to ``YES``, in which case random-write access is possible "
"(involves the creation of a temporary local file, whose location is "
"controlled by the :config:`CPL_TMPDIR` configuration option). A block "
"blob will be created if the file size is below 4 MB. Beyond, an append "
"blob will be created (with a maximum file size of 195 GB)."
msgstr ""

#: ../../source/user/virtual_file_systems.rst:800
msgid ""
"Deletion of files with :cpp:func:`VSIUnlink`, creation of directories "
"with :cpp:func:`VSIMkdir` and deletion of (empty) directories with "
":cpp:func:`VSIRmdir` are also possible. Note: when using "
":cpp:func:`VSIMkdir`, a special hidden :file:`.gdal_marker_for_dir` empty"
" file is created, since Azure Blob does not natively support empty "
"directories. If that file is the last one remaining in a directory, "
":cpp:func:`VSIRmdir` will automatically remove it. This file will not be "
"seen with :cpp:func:`VSIReadDir`. If removing files from directories not "
"created with :cpp:func:`VSIMkdir`, when the last file is deleted, its "
"directory is automatically removed by Azure, so the sequence "
"``VSIUnlink(\"/vsiaz/container/subdir/lastfile\")`` followed by "
"``VSIRmdir(\"/vsiaz/container/subdir\")`` will fail on the "
":cpp:func:`VSIRmdir` invocation."
msgstr ""

#: ../../source/user/virtual_file_systems.rst:802
msgid ""
"Recognized filenames are of the form :file:`/vsiaz/container/key`, where "
"``container`` is the name of the container and ``key`` is the object "
"\"key\", i.e. a filename potentially containing subdirectories."
msgstr ""

#: ../../source/user/virtual_file_systems.rst:806
msgid "The following configuration options are specific to the /vsiaz/ handler:"
msgstr ""

#: ../../source/user/virtual_file_systems.rst:863
msgid "The :config:`AZURE_STORAGE_CONNECTION_STRING` configuration option"
msgstr ""

#: ../../source/user/virtual_file_systems.rst:865
msgid ""
"The :config:`AZURE_STORAGE_ACCOUNT` configuration option is set to "
"specify the account name AND"
msgstr ""

#: ../../source/user/virtual_file_systems.rst:867
msgid ""
"(GDAL >= 3.5) The :config:`AZURE_STORAGE_ACCESS_TOKEN` configuration "
"option is set to specify the access token, that will be included in a "
"\"Authorization: Bearer ${AZURE_STORAGE_ACCESS_TOKEN}\" header. This "
"access token is typically obtained using Microsoft Authentication Library"
" (MSAL)."
msgstr ""

#: ../../source/user/virtual_file_systems.rst:868
msgid ""
"The :config:`AZURE_STORAGE_ACCESS_KEY` configuration option is set to "
"specify the secret key."
msgstr ""

#: ../../source/user/virtual_file_systems.rst:869
msgid ""
"The :config:`AZURE_NO_SIGN_REQUEST=YES` configuration option is set, so "
"as to disable any request signing. This option might be used for accounts"
" with public access rights. Available since GDAL 3.2"
msgstr ""

#: ../../source/user/virtual_file_systems.rst:870
msgid ""
"The :config:`AZURE_STORAGE_SAS_TOKEN` configuration option (``AZURE_SAS``"
" if GDAL < 3.5) is set to specify a Shared Access Signature. This SAS is "
"appended to URLs built by the /vsiaz/ file system handler. Its value "
"should already be URL-encoded and should not contain any leading '?' or "
"'&' character (e.g. a valid one may look like "
"\"st=2019-07-18T03%3A53%3A22Z&se=2035-07-19T03%3A53%3A00Z&sp=rl&sv=2018-03-28&sr=c&sig=2RIXmLbLbiagYnUd49rgx2kOXKyILrJOgafmkODhRAQ%3D\")."
" Available since GDAL 3.2"
msgstr ""

#: ../../source/user/virtual_file_systems.rst:871
msgid ""
"The current machine is a Azure Virtual Machine with Azure Active "
"Directory permissions assigned to it (see https://docs.microsoft.com/en-"
"us/azure/active-directory/managed-identities-azure-resources/qs-"
"configure-portal-windows-vm). Available since GDAL 3.3."
msgstr ""

#: ../../source/user/virtual_file_systems.rst:873
msgid ""
"Authentication using Azure Active Directory Workload Identity (using "
"AZURE_TENANT_ID, AZURE_CLIENT_ID, AZURE_FEDERATED_TOKEN_FILE and "
"AZURE_AUTHORITY_HOST environment variables), typically for Azure "
"Kubernetes, is available since GDAL 3.7.2"
msgstr ""

#: ../../source/user/virtual_file_systems.rst:875
msgid ""
"Starting with GDAL 3.5, the `configuration file "
"<https://github.com/MicrosoftDocs/azure-docs-cli/blob/main/docs-ref-"
"conceptual/azure-cli-configuration.md>` of the \"az\" command line "
"utility can be used. The following keys of the ``[storage]`` section will"
" be used in the following priority: ``connection_string``, ``account`` + "
"``key`` or ``account`` + ``sas_token``"
msgstr ""

#: ../../source/user/virtual_file_systems.rst:879
msgid ""
"Since GDAL 3.3, the :cpp:func:`VSIGetFileMetadata` and "
":cpp:func:`VSISetFileMetadata` operations are supported."
msgstr ""

#: ../../source/user/virtual_file_systems.rst:886
msgid "/vsiaz_streaming/ (Microsoft Azure Blob files: streaming)"
msgstr ""

#: ../../source/user/virtual_file_systems.rst:888
msgid ""
"/vsiaz_streaming/ is a file system handler that allows on-the-fly "
"sequential reading of files (primarily non-public) files available in "
"Microsoft Azure Blob containers, buckets, without prior download of the "
"entire file. It requires GDAL to be built against libcurl."
msgstr ""

#: ../../source/user/virtual_file_systems.rst:890
msgid ""
"Recognized filenames are of the form "
":file:`/vsiaz_streaming/container/key` where ``container`` is the name of"
" the container and ``key`` is the object \"key\", i.e. a filename "
"potentially containing subdirectories."
msgstr ""

#: ../../source/user/virtual_file_systems.rst:892
msgid ""
"Authentication options, and read-only features, are identical to "
":ref:`/vsiaz/ <vsiaz>`"
msgstr ""

#: ../../source/user/virtual_file_systems.rst:899
msgid "/vsiadls/ (Microsoft Azure Data Lake Storage Gen2)"
msgstr ""

#: ../../source/user/virtual_file_systems.rst:901
msgid ""
"/vsiadls/ is a file system handler that allows on-the-fly random reading "
"of (primarily non-public) files available in Microsoft Azure Data Lake "
"Storage file systems, without prior download of the entire file. It "
"requires GDAL to be built against libcurl."
msgstr ""

#: ../../source/user/virtual_file_systems.rst:906
msgid ""
"It has similar capabilities as :ref:`/vsiaz/ <vsiaz>`, and in particular "
"uses the same configuration options for authentication. Its advantages "
"over /vsiaz/ are a real management of directory and Unix-style ACL "
"support. Some features require the Azure storage to have hierarchical "
"support turned on. Consult its `documentation <https://docs.microsoft.com"
"/en-us/azure/storage/blobs/data-lake-storage-introduction>`__"
msgstr ""

#: ../../source/user/virtual_file_systems.rst:912
msgid "The main enhancements over /vsiaz/ are:"
msgstr ""

#: ../../source/user/virtual_file_systems.rst:914
msgid ""
"True directory support (no need for the artificial "
":file:`.gdal_marker_for_dir` empty file that is used for /vsiaz/ to have "
"empty directories)"
msgstr ""

#: ../../source/user/virtual_file_systems.rst:916
msgid "One-call recursive directory deletion with :cpp:func:`VSIRmdirRecursive`"
msgstr ""

#: ../../source/user/virtual_file_systems.rst:917
msgid "Atomic renaming with :cpp:func:`VSIRename`"
msgstr ""

#: ../../source/user/virtual_file_systems.rst:918
msgid ""
":cpp:func:`VSIGetFileMetadata` support for the \"STATUS\" and \"ACL\" "
"metadata domains"
msgstr ""

#: ../../source/user/virtual_file_systems.rst:919
msgid ""
":cpp:func:`VSISetFileMetadata` support for the \"PROPERTIES\" and \"ACL\""
" metadata domains"
msgstr ""

#: ../../source/user/virtual_file_systems.rst:926
msgid "/vsioss/ (Alibaba Cloud OSS files)"
msgstr ""

#: ../../source/user/virtual_file_systems.rst:928
msgid ""
"/vsioss/ is a file system handler that allows on-the-fly random reading "
"of (primarily non-public) files available in Alibaba Cloud Object Storage"
" Service (OSS) buckets, without prior download of the entire file. It "
"requires GDAL to be built against libcurl."
msgstr ""

#: ../../source/user/virtual_file_systems.rst:930
#: ../../source/user/virtual_file_systems.rst:986
#: ../../source/user/virtual_file_systems.rst:1116
msgid ""
"It also allows sequential writing of files. No seeks or read operations "
"are then allowed, so in particular direct writing of GeoTIFF files with "
"the GTiff driver is not supported, unless, if, starting with GDAL 3.2, "
"the :config:`CPL_VSIL_USE_TEMP_FILE_FOR_RANDOM_WRITE` configuration "
"option is set to ``YES``, in which case random-write access is possible "
"(involves the creation of a temporary local file, whose location is "
"controlled by the :config:`CPL_TMPDIR` configuration option). Deletion of"
" files with :cpp:func:`VSIUnlink` is also supported. Creation of "
"directories with :cpp:func:`VSIMkdir` and deletion of (empty) directories"
" with :cpp:func:`VSIRmdir` are also possible."
msgstr ""

#: ../../source/user/virtual_file_systems.rst:933
msgid ""
"Recognized filenames are of the form :file:`/vsioss/bucket/key` where "
"``bucket`` is the name of the OSS bucket and ``key`` is the OSS object "
"\"key\", i.e. a filename potentially containing subdirectories."
msgstr ""

#: ../../source/user/virtual_file_systems.rst:937
#: ../../source/user/virtual_file_systems.rst:993
msgid "The following configuration options are specific to the /vsioss/ handler:"
msgstr ""

#: ../../source/user/virtual_file_systems.rst:960
msgid ""
"The :config:`OSS_SECRET_ACCESS_KEY` and :config:`OSS_ACCESS_KEY_ID` "
"configuration options must be set. The :config:`OSS_ENDPOINT` "
"configuration option should normally be set to the appropriate value, "
"which reflects the region attached to the bucket. If the bucket is stored"
" in another region than oss-us-east-1, the code logic will redirect to "
"the appropriate endpoint."
msgstr ""

#: ../../source/user/virtual_file_systems.rst:962
msgid ""
"On writing, the file is uploaded using the OSS multipart upload API. The "
"size of chunks is set to 50 MB by default, allowing creating files up to "
"500 GB (10000 parts of 50 MB each). If larger files are needed, then "
"increase the value of the :config:`VSIOSS_CHUNK_SIZE` config option to a "
"larger value (expressed in MB). In case the process is killed and the "
"file not properly closed, the multipart upload will remain open, causing "
"Alibaba to charge you for the parts storage. You'll have to abort "
"yourself with other means. For files smaller than the chunk size, a "
"simple PUT request is used instead of the multipart upload API."
msgstr ""

#: ../../source/user/virtual_file_systems.rst:969
msgid "/vsioss_streaming/ (Alibaba Cloud OSS files: streaming)"
msgstr ""

#: ../../source/user/virtual_file_systems.rst:971
msgid ""
"/vsioss_streaming/ is a file system handler that allows on-the-fly "
"sequential reading of files (primarily non-public) files available in "
"Alibaba Cloud Object Storage Service (OSS) buckets, without prior "
"download of the entire file. It requires GDAL to be built against "
"libcurl."
msgstr ""

#: ../../source/user/virtual_file_systems.rst:973
msgid ""
"Recognized filenames are of the form :file:`/vsioss_streaming/bucket/key`"
" where ``bucket`` is the name of the bucket and ``key`` is the object "
"\"key\", i.e. a filename potentially containing subdirectories."
msgstr ""

#: ../../source/user/virtual_file_systems.rst:975
msgid ""
"Authentication options, and read-only features, are identical to "
":ref:`/vsioss/ <vsioss>`"
msgstr ""

#: ../../source/user/virtual_file_systems.rst:982
msgid "/vsiswift/ (OpenStack Swift Object Storage)"
msgstr ""

#: ../../source/user/virtual_file_systems.rst:984
msgid ""
"/vsiswift/ is a file system handler that allows on-the-fly random reading"
" of (primarily non-public) files available in OpenStack Swift Object "
"Storage (swift) buckets, without prior download of the entire file. It "
"requires GDAL to be built against libcurl."
msgstr ""

#: ../../source/user/virtual_file_systems.rst:989
msgid ""
"Recognized filenames are of the form :file:`/vsiswift/bucket/key` where "
"``bucket`` is the name of the swift bucket and ``key`` is the swift "
"object \"key\", i.e. a filename potentially containing subdirectories."
msgstr ""

#: ../../source/user/virtual_file_systems.rst:1015
msgid ""
"Three authentication methods are possible, and are attempted in the "
"following order:"
msgstr ""

#: ../../source/user/virtual_file_systems.rst:1017
msgid ""
"The :config:`SWIFT_STORAGE_URL` and :config:`SWIFT_AUTH_TOKEN` "
"configuration options are set respectively to the storage URL (e.g "
"http://127.0.0.1:12345/v1/AUTH_something) and the value of the x-auth-"
"token authorization token."
msgstr ""

#: ../../source/user/virtual_file_systems.rst:1018
msgid ""
"The :config:`SWIFT_AUTH_V1_URL`, :config:`SWIFT_USER` and "
":config:`SWIFT_KEY` configuration options are set respectively to the "
"endpoint of the Auth V1 authentication (e.g "
"http://127.0.0.1:12345/auth/v1.0), the user name and the key/password. "
"This authentication endpoint will be used to retrieve the storage URL and"
" authorization token mentioned in the first authentication method."
msgstr ""

#: ../../source/user/virtual_file_systems.rst:1019
msgid ""
"Authentication with Keystone v3 is using the same options as python-"
"swiftclient, see https://docs.openstack.org/python-"
"swiftclient/latest/cli/index.html#authentication for more details. GDAL "
"(>= 3.1) supports the following options:"
msgstr ""

#: ../../source/user/virtual_file_systems.rst:1021
#: ../../source/user/virtual_file_systems.rst:1032
msgid "`OS_IDENTITY_API_VERSION=3`"
msgstr ""

#: ../../source/user/virtual_file_systems.rst:1022
#: ../../source/user/virtual_file_systems.rst:1034
msgid "`OS_AUTH_URL`"
msgstr ""

#: ../../source/user/virtual_file_systems.rst:1023
msgid "`OS_USERNAME`"
msgstr ""

#: ../../source/user/virtual_file_systems.rst:1024
msgid "`OS_PASSWORD`"
msgstr ""

#: ../../source/user/virtual_file_systems.rst:1025
msgid "`OS_USER_DOMAIN_NAME`"
msgstr ""

#: ../../source/user/virtual_file_systems.rst:1026
msgid "`OS_PROJECT_NAME`"
msgstr ""

#: ../../source/user/virtual_file_systems.rst:1027
msgid "`OS_PROJECT_DOMAIN_NAME`"
msgstr ""

#: ../../source/user/virtual_file_systems.rst:1028
#: ../../source/user/virtual_file_systems.rst:1037
msgid "`OS_REGION_NAME`"
msgstr ""

#: ../../source/user/virtual_file_systems.rst:1030
msgid ""
"Application Credential Authentication via Keystone v3, GDAL (>= 3.3.1) "
"supports application-credential authentication with the following "
"options:"
msgstr ""

#: ../../source/user/virtual_file_systems.rst:1033
msgid "`OS_AUTH_TYPE=v3applicationcredential`"
msgstr ""

#: ../../source/user/virtual_file_systems.rst:1035
msgid "`OS_APPLICATION_CREDENTIAL_ID`"
msgstr ""

#: ../../source/user/virtual_file_systems.rst:1036
msgid "`OS_APPLICATION_CREDENTIAL_SECRET`"
msgstr ""

#: ../../source/user/virtual_file_systems.rst:1039
msgid ""
"This file system handler also allows sequential writing of files (no "
"seeks or read operations are then allowed)."
msgstr ""

#: ../../source/user/virtual_file_systems.rst:1041
msgid ""
"In some versions of OpenStack Swift, the access to large (segmented) "
"files fails unless they are explicitly marked as static large objects, "
"instead of being dynamic large objects which is the default. Using the "
"python-swiftclient this can be achieved when uploading the file by "
"passing the ``--use-slo`` flag (see https://docs.openstack.org/python-"
"swiftclient/latest/cli/index.html#swift-upload for all options). For more"
" information about large objects see "
"https://docs.openstack.org/swift/latest/api/large_objects.html."
msgstr ""

#: ../../source/user/virtual_file_systems.rst:1048
msgid "/vsiswift_streaming/ (OpenStack Swift Object Storage: streaming)"
msgstr ""

#: ../../source/user/virtual_file_systems.rst:1050
msgid ""
"/vsiswift_streaming/ is a file system handler that allows on-the-fly "
"sequential reading of files (primarily non-public) files available in "
"OpenStack Swift Object Storage (swift) buckets, without prior download of"
" the entire file. It requires GDAL to be built against libcurl."
msgstr ""

#: ../../source/user/virtual_file_systems.rst:1052
msgid ""
"Recognized filenames are of the form "
":file:`/vsiswift_streaming/bucket/key` where ``bucket`` is the name of "
"the bucket and ``key`` is the object \"key\", i.e. a filename potentially"
" containing subdirectories."
msgstr ""

#: ../../source/user/virtual_file_systems.rst:1054
msgid ""
"Authentication options, and read-only features, are identical to "
":ref:`/vsiswift/ <vsiswift>`"
msgstr ""

#: ../../source/user/virtual_file_systems.rst:1061
msgid "/vsihdfs/ (Hadoop File System)"
msgstr ""

#: ../../source/user/virtual_file_systems.rst:1063
msgid ""
"/vsihdfs/ is a file system handler that provides read access to HDFS. "
"This handler requires GDAL to have been built with Java support (CMake "
"`FindJNI <https://cmake.org/cmake/help/latest/module/FindJNI.html>`__) "
"and :ref:`HDFS <building_from_source_hdfs>` support. Support for this "
"handler is currently only available on Unix-like systems."
msgstr ""

#: ../../source/user/virtual_file_systems.rst:1069
msgid ""
"Note: support for the HTTP REST API (webHdfs) is also available with "
":ref:`vsiwebhdfs`"
msgstr ""

#: ../../source/user/virtual_file_systems.rst:1071
msgid ""
"The LD_LIBRARY_PATH and CLASSPATH environment variables must be typically"
" set up as following."
msgstr ""

#: ../../source/user/virtual_file_systems.rst:1081
msgid ""
"Failure to properly define the CLASSPATH will result in hard crashes in "
"the native libhdfs."
msgstr ""

#: ../../source/user/virtual_file_systems.rst:1084
msgid "Relevant Hadoop documentation links:"
msgstr ""

#: ../../source/user/virtual_file_systems.rst:1086
msgid ""
"`C API libhdfs <https://hadoop.apache.org/docs/stable/hadoop-project-dist"
"/hadoop-hdfs/LibHdfs.html>`__"
msgstr ""

#: ../../source/user/virtual_file_systems.rst:1087
msgid ""
"`HDFS Users Guide <https://hadoop.apache.org/docs/stable/hadoop-project-"
"dist/hadoop-hdfs/HdfsUserGuide.html>`__"
msgstr ""

#: ../../source/user/virtual_file_systems.rst:1088
msgid ""
"`Hadoop: Setting up a Single Node Cluster "
"<https://hadoop.apache.org/docs/stable/hadoop-project-dist/hadoop-"
"common/SingleCluster.html>`__"
msgstr ""

#: ../../source/user/virtual_file_systems.rst:1090
msgid ""
"Recognized filenames are of the form :file:`/vsihdfs/hdfsUri` where "
"``hdfsUri`` is a valid HDFS URI."
msgstr ""

#: ../../source/user/virtual_file_systems.rst:1104
msgid "/vsiwebhdfs/ (Web Hadoop File System REST API)"
msgstr ""

#: ../../source/user/virtual_file_systems.rst:1106
msgid ""
"/vsiwebhdfs/ is a file system handler that provides read and write access"
" to HDFS through its HTTP REST API."
msgstr ""

#: ../../source/user/virtual_file_systems.rst:1108
msgid ""
"Recognized filenames are of the form "
":file:`/vsiwebhdfs/http://hostname:port/webhdfs/v1/path/to/filename`."
msgstr ""

#: ../../source/user/virtual_file_systems.rst:1121
msgid "The following configuration options are available:"
msgstr ""

#: ../../source/user/virtual_file_systems.rst:1145
msgid ""
"This file system handler also allows sequential writing of files (no "
"seeks or read operations are then allowed)"
msgstr ""

#: ../../source/user/virtual_file_systems.rst:1152
msgid "/vsistdin/ (standard input streaming)"
msgstr ""

#: ../../source/user/virtual_file_systems.rst:1154
msgid ""
"/vsistdin/ is a file handler that allows reading from the standard input "
"stream."
msgstr ""

#: ../../source/user/virtual_file_systems.rst:1156
msgid ""
"The filename syntax must be only :file:`/vsistdin/`, (not e.g., "
"/vsistdin/path/to/f.csv , but \"/vsistdin?buffer_limit=value\" is OK.)"
msgstr ""

#: ../../source/user/virtual_file_systems.rst:1159
msgid ""
"The file operations available are of course limited to Read() and forward"
" Seek(). Full seek in the first MB of a file is possible, and it is "
"cached so that closing, re-opening :file:`/vsistdin/` and reading within "
"this first megabyte is possible multiple times in the same process."
msgstr ""

#: ../../source/user/virtual_file_systems.rst:1164
msgid ""
"The size of the in-memory cache can be controlled with the "
":config:`CPL_VSISTDIN_BUFFER_LIMIT` configuration option:"
msgstr ""

#: ../../source/user/virtual_file_systems.rst:1174
msgid "The \"/vsistdin?buffer_limit=value\" syntax can also be used."
msgstr ""

#: ../../source/user/virtual_file_systems.rst:1176
msgid ""
"/vsistdin filenames can be combined with other file system. For example, "
"to read a file within a potentially big ZIP file streamed to "
"gdal_translate:"
msgstr ""

#: ../../source/user/virtual_file_systems.rst:1187
msgid "/vsistdout/ (standard output streaming)"
msgstr ""

#: ../../source/user/virtual_file_systems.rst:1189
msgid ""
"/vsistdout/ is a file handler that allows writing into the standard "
"output stream."
msgstr ""

#: ../../source/user/virtual_file_systems.rst:1191
msgid "The filename syntax must be only :file:`/vsistdout/`."
msgstr ""

#: ../../source/user/virtual_file_systems.rst:1193
msgid "The file operations available are of course limited to Write()."
msgstr ""

#: ../../source/user/virtual_file_systems.rst:1195
msgid ""
"A variation of this file system exists as the "
":file:`/vsistdout_redirect/` file system handler, where the output "
"function can be defined with :cpp:func:`VSIStdoutSetRedirection`."
msgstr ""

#: ../../source/user/virtual_file_systems.rst:1200
msgid "/vsimem/ (in-memory files)"
msgstr ""

#: ../../source/user/virtual_file_systems.rst:1202
msgid ""
"/vsimem/ is a file handler that allows block of memory to be treated as "
"files. All portions of the file system underneath the base path "
":file:`/vsimem/` will be handled by this driver."
msgstr ""

#: ../../source/user/virtual_file_systems.rst:1204
msgid ""
"Normal VSI*L functions can be used freely to create and destroy memory "
"arrays, treating them as if they were real file system objects. Some "
"additional methods exist to efficiently create memory file system objects"
" without duplicating original copies of the data or to \"steal\" the "
"block of memory associated with a memory file. See "
":cpp:func:`VSIFileFromMemBuffer` and :cpp:func:`VSIGetMemFileBuffer`."
msgstr ""

#: ../../source/user/virtual_file_systems.rst:1206
msgid "Directory related functions are supported."
msgstr ""

#: ../../source/user/virtual_file_systems.rst:1208
msgid ""
"/vsimem/ files are visible within the same process. Multiple threads can "
"access the same underlying file in read mode, provided they used "
"different handles, but concurrent write and read operations on the same "
"underlying file are not supported (locking is left to the responsibility "
"of calling code)."
msgstr ""

#: ../../source/user/virtual_file_systems.rst:1213
msgid "/vsisubfile/ (portions of files)"
msgstr ""

#: ../../source/user/virtual_file_systems.rst:1215
msgid ""
"The /vsisubfile/ virtual file system handler allows access to subregions "
"of files, treating them as a file on their own to the virtual file system"
" functions (VSIFOpenL(), etc)."
msgstr ""

#: ../../source/user/virtual_file_systems.rst:1217
msgid ""
"A special form of the filename is used to indicate a subportion of "
"another file: :file:`/vsisubfile/<offset>[_<size>],<filename>`."
msgstr ""

#: ../../source/user/virtual_file_systems.rst:1219
msgid ""
"The size parameter is optional. Without it the remainder of the file from"
" the start offset as treated as part of the subfile. Otherwise only "
"<size> bytes from <offset> are treated as part of the subfile. The "
"<filename> portion may be a relative or absolute path using normal rules."
" The <offset> and <size> values are in bytes."
msgstr ""

#: ../../source/user/virtual_file_systems.rst:1228
msgid ""
"Unlike the /vsimem/ or conventional file system handlers, there is no "
"meaningful support for filesystem operations for creating new files, "
"traversing directories, and deleting files within the /vsisubfile/ area. "
"Only the :cpp:func:`VSIStatL`, :cpp:func:`VSIFOpenL` and operations based"
" on the file handle returned by :cpp:func:`VSIFOpenL` operate properly."
msgstr ""

#: ../../source/user/virtual_file_systems.rst:1233
msgid "/vsisparse/ (sparse files)"
msgstr ""

#: ../../source/user/virtual_file_systems.rst:1235
msgid ""
"The /vsisparse/ virtual file handler allows a virtual file to be composed"
" from chunks of data in other files, potentially with large spaces in the"
" virtual file set to a constant value. This can make it possible to test "
"some sorts of operations on what seems to be a large file with image data"
" set to a constant value. It is also helpful when wanting to add test "
"files to the test suite that are too large, but for which most of the "
"data can be ignored. It could, in theory, also be used to treat several "
"files on different file systems as one large virtual file."
msgstr ""

#: ../../source/user/virtual_file_systems.rst:1237
msgid ""
"The file referenced by /vsisparse/ should be an XML control file "
"formatted something like:"
msgstr ""

#: ../../source/user/virtual_file_systems.rst:1271
msgid "Hopefully the values and semantics are fairly obvious."
msgstr ""

#: ../../source/user/virtual_file_systems.rst:1277
msgid "/vsicached/ (File caching)"
msgstr ""

#: ../../source/user/virtual_file_systems.rst:1279
msgid ""
"The :cpp:func:`VSICreateCachedFile` function takes a virtual file handle "
"and returns a new handle that caches read-operations on the input file "
"handle. The cache is RAM based and the content of the cache is discarded "
"when the file handle is closed. The cache is a least-recently used lists "
"of blocks of 32KB each (default size)."
msgstr ""

#: ../../source/user/virtual_file_systems.rst:1281
msgid ""
"This is mostly useful for files accessible through slow local/operating-"
"system-mounted filesystems."
msgstr ""

#: ../../source/user/virtual_file_systems.rst:1283
msgid ""
"That is implicitly used by a number of the above mentioned file systems "
"(namely the default one for standard file system operations, and the "
"/vsicurl/ and other related network file systems) if the ``VSI_CACHE`` "
"configuration option is set to ``YES``."
msgstr ""

#: ../../source/user/virtual_file_systems.rst:1285
msgid ""
"The default size of caching for each file is 25 MB (25 MB for each file "
"that is cached), and can be controlled with the ``VSI_CACHE_SIZE`` "
"configuration option (value in bytes)."
msgstr ""

#: ../../source/user/virtual_file_systems.rst:1287
msgid ""
"The :cpp:class:`VSICachedFile` class only handles read operations at that"
" time, and will error out on write operations."
msgstr ""

#: ../../source/user/virtual_file_systems.rst:1289
msgid ""
"Starting with GDAL 3.8, a ``/vsicached?`` virtual file system also exists"
" to cache a particular file."
msgstr ""

#: ../../source/user/virtual_file_systems.rst:1291
msgid ""
"The syntax is the following one: "
"``/vsicached?[option_i=val_i&]*file=<filename>`` where each option name "
"and value (including the value of ``file``) is URL-encoded (actually, "
"only required for the ampersand character. It might be desirable to have "
"forward slash character uncoded). It is important that the ``file`` "
"option appears at the end, so that code that tries to look for side-car "
"files, list directory content, can work properly."
msgstr ""

#: ../../source/user/virtual_file_systems.rst:1298
msgid "Currently supported options are:"
msgstr ""

#: ../../source/user/virtual_file_systems.rst:1300
msgid ""
"``chunk_size=<value>`` where value is the` size of the chunk size in "
"bytes. ``KB`` or ``MB`` suffixes can be also appended (without space "
"after the numeric value). The maximum supported value is 1 GB."
msgstr ""

#: ../../source/user/virtual_file_systems.rst:1301
msgid ""
"``cache_size=<value>`` where value is the size of the cache size in "
"bytes, for each file. ``KB`` or ``MB`` suffixes can be also appended."
msgstr ""

#: ../../source/user/virtual_file_systems.rst:1305
msgid "``/vsicached?chunk_size=1MB&file=/home/even/byte.tif``"
msgstr ""

#: ../../source/user/virtual_file_systems.rst:1306
msgid "``/vsicached?file=./byte.tif``"
msgstr ""

#: ../../source/user/virtual_file_systems.rst:1312
msgid "/vsicrypt/ (encrypted files)"
msgstr ""

#: ../../source/user/virtual_file_systems.rst:1314
msgid ""
"/vsicrypt/ is a special file handler is installed that allows "
"reading/creating/update encrypted files on the fly, with random access "
"capabilities."
msgstr ""

#: ../../source/user/virtual_file_systems.rst:1316
msgid "Refer to :cpp:func:`VSIInstallCryptFileHandler` for more details."
msgstr ""

#~ msgid "List of configuration options and where they apply"
#~ msgstr ""

#~ msgid ""
#~ ":program:`gdalwarp` and :program:`ogr2ogr` have "
#~ "a ``-s_coord_epoch`` option to be used"
#~ " together with ``-s_srs`` (resp. "
#~ "``-t_coord_epoch`` option to be used "
#~ "together with ``-t_srs``) to override/set "
#~ "the coordinate epoch of the source "
#~ "(resp. target) CRS. ``-s_coord_epoch`` and "
#~ "``-t_coord_epoch`` are currently mutually "
#~ "exclusive, due to lack of support "
#~ "for transformations between two dynamic "
#~ "CRS."
#~ msgstr ""

#~ msgid ""
#~ "For the full list see :ref:`Programs "
#~ "<programs>` and note the ones that "
#~ "end in ``.py``."
#~ msgstr ""

#~ msgid ""
#~ "The current design of the GDAL "
#~ "raster block cache make it appropriate"
#~ " to read several datasets from "
#~ "several threads. However performance issues"
#~ " may arise when writing several "
#~ "datasets from several threads, due to"
#~ " lock contention in the global "
#~ "structures of the block cache mechanism."
#~ msgstr ""

#~ msgid ""
#~ "The OGR SQL dialect adds the "
#~ "geometry field of the datasource to "
#~ "the result set by default. Users "
#~ "do not need to select the geometry"
#~ " explicitly but it is still possible"
#~ " to do so. Common use case is"
#~ " when geometry is the only field "
#~ "that is needed. In this case the"
#~ " name of the geometry field to "
#~ "be used in the SQL statement is"
#~ " the name returned by "
#~ ":cpp:func:`OGRLayer::GetGeometryColumn`. If the "
#~ "method returns an empty string then "
#~ "a special name \"_ogr_geometry_\" must "
#~ "be used. The name begins with an"
#~ " underscore and SQL syntax requires "
#~ "that it must appear between double "
#~ "quotes. In addition the command line "
#~ "interpreter may require that double "
#~ "quotes are escaped and the final "
#~ "SELECT statement could look like:"
#~ msgstr ""

#~ msgid ""
#~ "For OGR layers that have a non-"
#~ "empty geometry column name (generally "
#~ "for RDBMS datasources), as returned by"
#~ " OGRLayer::GetGeometryColumn(), the name of "
#~ "the geometry special field in the "
#~ "SQL statement will be the name of"
#~ " the geometry column of the "
#~ "underlying OGR layer. If the name "
#~ "of the geometry column in the "
#~ "source layer is empty, like with "
#~ "shapefiles etc., the name to use "
#~ "in the SQL statement is always "
#~ "\"geometry\"."
#~ msgstr ""


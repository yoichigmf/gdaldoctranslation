# SOME DESCRIPTIVE TITLE.
# Copyright (C) 1998-2024
# This file is distributed under the same license as the GDAL package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2024.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: GDAL \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2024-06-23 04:43+0900\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language: ja\n"
"Language-Team: ja <LL@li.org>\n"
"Plural-Forms: nplurals=1; plural=0;\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.14.0\n"

#: ../../source/development/rfc/rfc61_support_for_measured_geometries.rst:5
msgid "RFC 61 : Support for measured geometries"
msgstr ""

#: ../../source/development/rfc/rfc61_support_for_measured_geometries.rst:7
msgid "Author: Ari Jolma"
msgstr ""

#: ../../source/development/rfc/rfc61_support_for_measured_geometries.rst:9
msgid "Contact: ari.jolma at gmail.com"
msgstr ""

#: ../../source/development/rfc/rfc61_support_for_measured_geometries.rst:11
msgid "Status: Adopted"
msgstr ""

#: ../../source/development/rfc/rfc61_support_for_measured_geometries.rst:13
msgid "Implementation in version: 2.1"
msgstr ""

#: ../../source/development/rfc/rfc61_support_for_measured_geometries.rst:16
msgid "Summary"
msgstr ""

#: ../../source/development/rfc/rfc61_support_for_measured_geometries.rst:18
msgid ""
"This RFC defines how to implement measured geometries (geometries, where "
"the points have M coordinate, i.e., they are XYM or XYZM)."
msgstr ""

#: ../../source/development/rfc/rfc61_support_for_measured_geometries.rst:22
msgid "Rationale"
msgstr ""

#: ../../source/development/rfc/rfc61_support_for_measured_geometries.rst:24
msgid ""
"An M coordinate, which is also known as \"measure\", is an additional "
"value that can be stored for each point of a geometry (IBM Technical "
"Note, `https://www-304.ibm.com/support/docview.wss?uid=swg21054384 "
"<https://www-304.ibm.com/support/docview.wss?uid=swg21054384>`__)."
msgstr ""

#: ../../source/development/rfc/rfc61_support_for_measured_geometries.rst:29
msgid ""
"M coordinate is in the OGC simple feature model and it is used in many "
"vector data formats."
msgstr ""

#: ../../source/development/rfc/rfc61_support_for_measured_geometries.rst:33
msgid "Changes"
msgstr ""

#: ../../source/development/rfc/rfc61_support_for_measured_geometries.rst:35
msgid ""
"Changes are required into the C++ API and the C API needs to be enhanced."
" Several drivers need to be changed to take advantage of this enhancement"
" but also due to the changes in the C++ API."
msgstr ""

#: ../../source/development/rfc/rfc61_support_for_measured_geometries.rst:40
msgid "Common API"
msgstr ""

#: ../../source/development/rfc/rfc61_support_for_measured_geometries.rst:42
msgid ""
"New OGRwkbGeometryType values are needed. SFSQL 1.2 and ISO SQL/MM Part 3"
" will be used, i.e., 2D type + 2000 for M and 2D type + 3000 for ZM. "
"(Also types such as Tin, PolyhedralSurface and Triangle types can be "
"added for completeness, even if unimplemented currently). wkbCurve and "
"wkbSurface have been moved from #define to the OGRwkbGeometryType "
"enumerations, and their Z/M/ZM variants have been added as well (per "
"#6401)"
msgstr ""

#: ../../source/development/rfc/rfc61_support_for_measured_geometries.rst:50
msgid ""
"On a more general note, there could (should?) be a path to using a clean "
"set of values and have legacy support as an exception."
msgstr ""

#: ../../source/development/rfc/rfc61_support_for_measured_geometries.rst:53
msgid "Abstract types are defined and not part of the enum."
msgstr ""

#: ../../source/development/rfc/rfc61_support_for_measured_geometries.rst:115
msgid "C++ API"
msgstr ""

#: ../../source/development/rfc/rfc61_support_for_measured_geometries.rst:117
msgid ""
"The property int nCoordinateDimension in class OGRGeometry will be "
"replaced by int flags. It may have the following flags:"
msgstr ""

#: ../../source/development/rfc/rfc61_support_for_measured_geometries.rst:127
msgid ""
"The \"ignore\" flag is needed internally for backwards compatibility. The"
" flag OGR_G_NOT_EMPTY_POINT is used only to denote the emptiness of an "
"OGRPoint object."
msgstr ""

#: ../../source/development/rfc/rfc61_support_for_measured_geometries.rst:131
msgid ""
"Currently a hack to set nCoordDimension negative is used to denote an "
"empty point."
msgstr ""

#: ../../source/development/rfc/rfc61_support_for_measured_geometries.rst:134
msgid ""
"The removal of nCoordinateDimension may imply changes to drivers etc. "
"which get or set it."
msgstr ""

#: ../../source/development/rfc/rfc61_support_for_measured_geometries.rst:137
msgid "The tests are"
msgstr ""

#: ../../source/development/rfc/rfc61_support_for_measured_geometries.rst:144
msgid "The setters and getters are implemented with \\|= and &=."
msgstr ""

#: ../../source/development/rfc/rfc61_support_for_measured_geometries.rst:146
msgid ""
"When any of these flags is set or unset, the corresponding data becomes "
"invalid and may be discarded."
msgstr ""

#: ../../source/development/rfc/rfc61_support_for_measured_geometries.rst:149
msgid ""
"Keep the following methods with original semantics, i.e., coordinate "
"dimension is 2 or 3, but deprecate. There is some discrepancy in "
"documentation. Their documentation says that they may return zero for "
"empty points while in ogrpoint.cpp it says that negative nCoordDimension "
"values are used for empty points and the getCoordinateDimension method of"
" point returns absolute value of nCoordDimension - thus not zero. A fix "
"to the doc is probably enough."
msgstr ""

#: ../../source/development/rfc/rfc61_support_for_measured_geometries.rst:163
msgid ""
"It is proposed to possibly add a new method to replace "
"getCoordinateDimension. set3D and setMeasured would replace "
"setCoordinateDimension and flattenTo2D. See below."
msgstr ""

#: ../../source/development/rfc/rfc61_support_for_measured_geometries.rst:167
msgid "class OGRGeometry:"
msgstr ""

#: ../../source/development/rfc/rfc61_support_for_measured_geometries.rst:190
msgid ""
"int CoordinateDimension() should have the new semantics. The method name "
"in simple features documents actually is without prefix get."
msgstr ""

#: ../../source/development/rfc/rfc61_support_for_measured_geometries.rst:193
msgid ""
"Whether set3D and setMeasured should affect the children geometries in a "
"collection is an issue. Currently doc for setCoordinateDimension says "
"\"Setting the dimension of a geometry collection will affect the children"
" geometries.\", thus we have already committed to maintaining dimensions "
"of children in collections. It is proposed that set3D and setMeasured "
"either add or strip Z or M values to or from the geometry (including "
"possible children). In general the strategy should be to follow the "
"existing strategy regarding Z (i.e., to strip or add)."
msgstr ""

#: ../../source/development/rfc/rfc61_support_for_measured_geometries.rst:202
msgid ""
"Add property double m to class OGRPoint. Add constructor, getters, and "
"setters for it."
msgstr ""

#: ../../source/development/rfc/rfc61_support_for_measured_geometries.rst:205
msgid ""
"Add property double \\*padfM to class OGRSimpleCurve. Add constructor, "
"getters, and setters for it. New setters with postfix M are needed for "
"XYM data since the object may be upgraded to XYZ from XY in setters. Add "
"also methods RemoveM() and AddM() with similar semantics as Make3D and "
"Make2D."
msgstr ""

#: ../../source/development/rfc/rfc61_support_for_measured_geometries.rst:211
msgid ""
"Override methods set3D and setMeasured in those classes where "
"setCoordinateDimension is overridden."
msgstr ""

#: ../../source/development/rfc/rfc61_support_for_measured_geometries.rst:214
msgid ""
"Change the semantics of methods whose name begins with \\_ and have a "
"parameter \"int b3D\". The parameter will be \"int coordinates\", i.e., a"
" flags like int, which tells about Z and M."
msgstr ""

#: ../../source/development/rfc/rfc61_support_for_measured_geometries.rst:219
msgid "C API"
msgstr ""

#: ../../source/development/rfc/rfc61_support_for_measured_geometries.rst:221
msgid "ogr_core.h:"
msgstr ""

#: ../../source/development/rfc/rfc61_support_for_measured_geometries.rst:228
msgid ""
"The current behavior is that calling SetPoint on a geometry with "
"coordinate dimension 2 upgrades the coordinate dimension 3. To keep 2D "
"points 2D SetPoint_2D must be used. Thus we need separate functions for M"
" and ZM geometries. The proposal is to use postfixes M and ZM, i.e., "
"SetPointM, SetPointZM. Similarly for AddPoint."
msgstr ""

#: ../../source/development/rfc/rfc61_support_for_measured_geometries.rst:234
msgid ""
"Currently there is no SetPoints_2D function. The doc at pabyZ param at "
"SetPoints comments that \"defaults to NULL for 2D objects\" but that does"
" not seem to be the case. See #6344. If that is fixed as written there, "
"then only SetPointsZM is needed."
msgstr ""

#: ../../source/development/rfc/rfc61_support_for_measured_geometries.rst:239
msgid ""
"GetPoint and GetPoints do not have a 2D version, so only \\*ZM version is"
" needed."
msgstr ""

#: ../../source/development/rfc/rfc61_support_for_measured_geometries.rst:242
msgid "ogr_api.h:"
msgstr ""

#: ../../source/development/rfc/rfc61_support_for_measured_geometries.rst:254
msgid "ogr_p.h (This is public header, so new functions are needed)"
msgstr ""

#: ../../source/development/rfc/rfc61_support_for_measured_geometries.rst:267
msgid "pggeometry.h is internal, so we can change the function prototype"
msgstr ""

#: ../../source/development/rfc/rfc61_support_for_measured_geometries.rst:280
msgid "Use of padfM requires changes to openfilegdb driver."
msgstr ""

#: ../../source/development/rfc/rfc61_support_for_measured_geometries.rst:283
msgid "GEOS, filters, and other issues"
msgstr ""

#: ../../source/development/rfc/rfc61_support_for_measured_geometries.rst:285
msgid ""
"When a geometry with measures is sent to GEOS or used as a filter the M "
"coordinate is ignored."
msgstr ""

#: ../../source/development/rfc/rfc61_support_for_measured_geometries.rst:288
msgid ""
"LocateAlong and LocateBetween are the only standard methods, which use M "
"but there could be others, which for example get the extent of M. Such "
"are not intended to be added now but they can be added later."
msgstr ""

#: ../../source/development/rfc/rfc61_support_for_measured_geometries.rst:293
msgid "SWIG bindings (Python / Java / C# / Perl) changes"
msgstr ""

#: ../../source/development/rfc/rfc61_support_for_measured_geometries.rst:295
msgid ""
"The new C API functions need to be exposed through swig. Further changes "
"depend on whether the language bindings are aware of coordinates. At "
"least Python and Perl are."
msgstr ""

#: ../../source/development/rfc/rfc61_support_for_measured_geometries.rst:299
msgid "The new geometry types will be included into the i files."
msgstr ""

#: ../../source/development/rfc/rfc61_support_for_measured_geometries.rst:301
msgid ""
"Some new setters and getters are needed for M. Is3D, IsMeasured, Set3D "
"and SetMeasured methods should be added. Also OGR_GT_HasM."
msgstr ""

#: ../../source/development/rfc/rfc61_support_for_measured_geometries.rst:305
msgid "Drivers"
msgstr ""

#: ../../source/development/rfc/rfc61_support_for_measured_geometries.rst:307
msgid ""
"Drivers that are probably affected by the C++ changes are at least (these"
" use the CoordinateDimension API) pg, mssqlspatial, sqlite, db2, mysql, "
"gml, pgdump, geojson, libkml, gpkg, wasp, gpx, filegdb, vfk, bna, dxf."
msgstr ""

#: ../../source/development/rfc/rfc61_support_for_measured_geometries.rst:312
msgid ""
"The now deprecated CoordinateDimension API is proposed to be replaced "
"with calls to \\*3D and \\*Measured."
msgstr ""

#: ../../source/development/rfc/rfc61_support_for_measured_geometries.rst:315
msgid ""
"Once the support for M coordinates is in place the driver will advertise "
"the support."
msgstr ""

#: ../../source/development/rfc/rfc61_support_for_measured_geometries.rst:318
msgid ""
"Within the work of this RFC the support is built into memory, shape and "
"pg drivers. Support for other drivers are left for further work."
msgstr ""

#: ../../source/development/rfc/rfc61_support_for_measured_geometries.rst:322
msgid "Utilities"
msgstr ""

#: ../../source/development/rfc/rfc61_support_for_measured_geometries.rst:324
msgid "There is a minimum requirement and new possibilities."
msgstr ""

#: ../../source/development/rfc/rfc61_support_for_measured_geometries.rst:326
msgid "ogrinfo: report measured geom type, report measures"
msgstr ""

#: ../../source/development/rfc/rfc61_support_for_measured_geometries.rst:328
msgid "ogr2ogr: support measured geom types"
msgstr ""

#: ../../source/development/rfc/rfc61_support_for_measured_geometries.rst:330
msgid "ogrlineref: seems to deal specifically with measures, needs more thought"
msgstr ""

#: ../../source/development/rfc/rfc61_support_for_measured_geometries.rst:332
msgid "gdal_rasterize: measure could be used for the burn-in value"
msgstr ""

#: ../../source/development/rfc/rfc61_support_for_measured_geometries.rst:334
msgid "gdal_contour: measure could be used as the \"elevation\" value"
msgstr ""

#: ../../source/development/rfc/rfc61_support_for_measured_geometries.rst:336
msgid "gdal_grid: measure could be used as the \"Z\" value"
msgstr ""

#: ../../source/development/rfc/rfc61_support_for_measured_geometries.rst:339
msgid "Documentation"
msgstr ""

#: ../../source/development/rfc/rfc61_support_for_measured_geometries.rst:341
msgid "All new methods/functions are documented."
msgstr ""

#: ../../source/development/rfc/rfc61_support_for_measured_geometries.rst:344
msgid "Test Suite"
msgstr ""

#: ../../source/development/rfc/rfc61_support_for_measured_geometries.rst:346
msgid ""
"At least the initial tests will be done with Perl unit tests "
"(swi/perl/t/measures-\\*.t). Later autotest suite will be extended. "
"Existing tests should not fail."
msgstr ""

#: ../../source/development/rfc/rfc61_support_for_measured_geometries.rst:351
msgid "Compatibility Issues"
msgstr ""

#: ../../source/development/rfc/rfc61_support_for_measured_geometries.rst:353
msgid ""
"Many drivers (actually datasets and layers) which support measures need "
"to have the support added. Support should be advertised using"
msgstr ""

#: ../../source/development/rfc/rfc61_support_for_measured_geometries.rst:361
msgid ""
"The entry point for a creating a layer is CreateLayer method in "
"GDALDataset. If the dataset does not support measured geometries it will "
"strip the measured flag from the geometry type it gets as a parameter. "
"This is in line with current behavior non linear geometry types and "
"datasets not supporting them."
msgstr ""

#: ../../source/development/rfc/rfc61_support_for_measured_geometries.rst:367
msgid ""
"ICreateLayer, which all drivers that have create layer capability "
"implement, have geometry type as an argument. The method should call "
"CPLError() with CPLE_NotSupported and return NULL if the driver does not "
"support measures. Similarly for ICreateFeature and ISetFeature."
msgstr ""

#: ../../source/development/rfc/rfc61_support_for_measured_geometries.rst:372
msgid ""
"The user-oriented API functions (CreateLayer, CreateFeature, and "
"SetFeature) should (silently) strip out the measures before continuing to"
" the I\\* methods in drivers that do not support measures. This (side "
"effect) may not be what is wanted in some usage scenarios but it would "
"follow the pattern of what is already done with nonlinear geometries. "
"This should be documented."
msgstr ""

#: ../../source/development/rfc/rfc61_support_for_measured_geometries.rst:379
msgid ""
"An alternative would be to store M value(s) (or WKT or WKB) as attribute "
"(scalar or vector, depending on the geometry type)."
msgstr ""

#: ../../source/development/rfc/rfc61_support_for_measured_geometries.rst:382
msgid "Needs a decision."
msgstr ""

#: ../../source/development/rfc/rfc61_support_for_measured_geometries.rst:384
msgid ""
"Some incompatibilities will necessarily be introduced. For example when "
"the current XYM-as-XYZ hack in shape will be replaced by proper XYM."
msgstr ""

#: ../../source/development/rfc/rfc61_support_for_measured_geometries.rst:388
msgid "Related tickets"
msgstr ""

#: ../../source/development/rfc/rfc61_support_for_measured_geometries.rst:390
msgid ""
"`https://trac.osgeo.org/gdal/ticket/6063 "
"<https://trac.osgeo.org/gdal/ticket/6063>`__ "
"`https://trac.osgeo.org/gdal/ticket/6331 "
"<https://trac.osgeo.org/gdal/ticket/6331>`__"
msgstr ""

#: ../../source/development/rfc/rfc61_support_for_measured_geometries.rst:394
msgid "Implementation"
msgstr ""

#: ../../source/development/rfc/rfc61_support_for_measured_geometries.rst:396
msgid "The implementation will be done by Ari Jolma."
msgstr ""

#: ../../source/development/rfc/rfc61_support_for_measured_geometries.rst:398
msgid ""
"The proposed implementation will be in `https://github.com/ajolma/GDAL-"
"XYZM <https://github.com/ajolma/GDAL-XYZM>`__"
msgstr ""

#: ../../source/development/rfc/rfc61_support_for_measured_geometries.rst:402
msgid "Voting history"
msgstr ""

#: ../../source/development/rfc/rfc61_support_for_measured_geometries.rst:404
msgid "+1 from Even, Tamas, Jukka and Daniel"
msgstr ""


# SOME DESCRIPTIVE TITLE.
# Copyright (C) 1998-2024
# This file is distributed under the same license as the GDAL package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2024.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: GDAL \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2024-06-23 04:43+0900\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language: ja\n"
"Language-Team: ja <LL@li.org>\n"
"Plural-Forms: nplurals=1; plural=0;\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.14.0\n"

#: ../../source/development/rfc/rfc93_update_feature.rst:5
msgid "RFC 93: OGRLayer::UpdateFeature() method"
msgstr ""

#: ../../source/development/rfc/rfc93_update_feature.rst:8
msgid "Author:"
msgstr ""

#: ../../source/development/rfc/rfc93_update_feature.rst:8
msgid "Even Rouault"
msgstr ""

#: ../../source/development/rfc/rfc93_update_feature.rst:9
msgid "Contact:"
msgstr ""

#: ../../source/development/rfc/rfc93_update_feature.rst:9
msgid "even.rouault @ spatialys.com"
msgstr ""

#: ../../source/development/rfc/rfc93_update_feature.rst:10
msgid "Started:"
msgstr ""

#: ../../source/development/rfc/rfc93_update_feature.rst:10
msgid "2023-Feb-15"
msgstr ""

#: ../../source/development/rfc/rfc93_update_feature.rst:11
msgid "Status:"
msgstr ""

#: ../../source/development/rfc/rfc93_update_feature.rst:11
msgid "Adopted, implemented"
msgstr ""

#: ../../source/development/rfc/rfc93_update_feature.rst:12
msgid "Target:"
msgstr ""

#: ../../source/development/rfc/rfc93_update_feature.rst:12
msgid "GDAL 3.7"
msgstr ""

#: ../../source/development/rfc/rfc93_update_feature.rst:16
msgid "Summary"
msgstr ""

#: ../../source/development/rfc/rfc93_update_feature.rst:18
msgid ""
"This RFC adds a new method in the OGRLayer class, UpdateFeature(), to be "
"able to update a subset of the attributes and geometry fields of a "
"feature."
msgstr ""

#: ../../source/development/rfc/rfc93_update_feature.rst:22
msgid "Motivation"
msgstr ""

#: ../../source/development/rfc/rfc93_update_feature.rst:24
msgid ""
"There are currently 2 ways of updating (in a broad sense) existing "
"features in drivers that support editing an existing feature:"
msgstr ""

#: ../../source/development/rfc/rfc93_update_feature.rst:27
msgid ""
"through the SetFeature() method, which has roughly a Replace semantics. "
"All the fields of the passed feature are used to update the feature"
msgstr ""

#: ../../source/development/rfc/rfc93_update_feature.rst:29
msgid ""
"through the UpsertFeature() method. UpsertFeature() semantics is: \"if "
"the passed feature doesn't exist, considering its feature id, then create"
" it, otherwise replace it with the existing feature\". So UpsertFeature()"
" is conceptually CreateFeature() or UpdateFeature()."
msgstr ""

#: ../../source/development/rfc/rfc93_update_feature.rst:34
msgid ""
"However a number of use cases only involve updating a subset of the "
"fields of a feature, and not a full replacement:"
msgstr ""

#: ../../source/development/rfc/rfc93_update_feature.rst:37
msgid ""
"Typically QGIS changeAttributeValues() and changeGeometryValues() "
"currently have to call GetFeature() on features they want to edit, modify"
" the desired fields and call SetFeature() to update the feature. This is "
"suboptimal from a performance point of view. Similarly pgsql-ogr-fdw "
"could potentially be enhanced to map its implementation of the UPDATE on "
"a OGR foreign table to use UpdateFeature() instead of a full replacement "
"with SetFeature()."
msgstr ""

#: ../../source/development/rfc/rfc93_update_feature.rst:43
msgid ""
"SQL based drivers implement SetFeature() through the SQL UPDATE "
"statement, which does not require the full set of attributes to be "
"provided. Consequently UpdateFeature() would be a better match with their"
" native capability. SetFeature() updating all fields, even those not "
"modified, may cause triggers to be unnecessarily run (for example the "
"GeoPackage triggers related to updating the RTree of the spatial index)"
msgstr ""

#: ../../source/development/rfc/rfc93_update_feature.rst:49
msgid ""
"no-SQL based drivers such as MongoDB have separate API to replace, upsert"
" or update features."
msgstr ""

#: ../../source/development/rfc/rfc93_update_feature.rst:51
msgid ""
"The transactional profile of WFS 2 also distinguishes Update and Replace "
"commands."
msgstr ""

#: ../../source/development/rfc/rfc93_update_feature.rst:55
msgid "Details"
msgstr ""

#: ../../source/development/rfc/rfc93_update_feature.rst:57
msgid ""
"Similarly to CreateFeature(), SetFeature() and UpsertFeature(), two "
"methods are added in OGRLayer:"
msgstr ""

#: ../../source/development/rfc/rfc93_update_feature.rst:60
msgid ""
"UpdateFeature(), non-virtual, and aimed at being the one called by the "
"end user. This method does a few sanity checks on the passed arguments "
"(the arrays containing the indices of the attributes to updated) and "
"convert curve geometries to linear ones if needed for layers that do not "
"support curve geometries (similarly as CreateFeature(), SetFeature() and "
"UpdateFeature())"
msgstr ""

#: ../../source/development/rfc/rfc93_update_feature.rst:67
msgid ""
"IUpdateFeature(), virtual method implemented by drivers. A default "
"implementation is provided in the base OGRLayer class for drivers that "
"expose the OLCRandomWrite capability. The default implementation calls "
"GetFeature() to retrieve the current version of the feature, updates it "
"with the feature passed as argument to IUpdateFeature() and calls "
"ISetFeature() to replace the feature."
msgstr ""

#: ../../source/development/rfc/rfc93_update_feature.rst:74
msgid "The prototype of UpdateFeature() is the following one:"
msgstr ""

#: ../../source/development/rfc/rfc93_update_feature.rst:145
msgid "The corresponding C function ``OGR_L_UpdateFeature`` is added."
msgstr ""

#: ../../source/development/rfc/rfc93_update_feature.rst:147
msgid ""
"The OGRLayerDecorator, OGRLayerPool, OGRMutexedLayer, OGRUnionLayer, "
"OGRWarpedLayer and OGREditableLayer utility classes that wrap other "
"layers are modified to take the new IUpdateFeature() virtual method into "
"account."
msgstr ""

#: ../../source/development/rfc/rfc93_update_feature.rst:152
msgid "Impacted drivers"
msgstr ""

#: ../../source/development/rfc/rfc93_update_feature.rst:154
msgid ""
"The proposed implementation adds a dedicated implementation of "
"IUpdateFeature() in the following drivers: memory driver, PostgreSQL, "
"GPKG, MongoDB."
msgstr ""

#: ../../source/development/rfc/rfc93_update_feature.rst:157
msgid ""
"Other drivers could potentially benefit from it, e.g Shapefile, where "
"separate updates of the .shp (geometries) and .dbf (attributes) files. "
"But not in scope of the initial implementation."
msgstr ""

#: ../../source/development/rfc/rfc93_update_feature.rst:162
msgid "Design choices"
msgstr ""

#: ../../source/development/rfc/rfc93_update_feature.rst:164
msgid ""
"Q: Why is it necessary to specify which fields of the feature passed to "
"UpdateFeature() should be taken into account?"
msgstr ""

#: ../../source/development/rfc/rfc93_update_feature.rst:167
msgid ""
"A: For attributes, it could have been possible to rely on the set/unset "
"status of the fields, but for drivers that distinguish unset from NULL "
"(typically all JSON based drivers, or no-SQL driver which map to "
"key/value documents with a non-fixed schema), this would have make it "
"impossible to unset a field in the stored feature. And geometry fields "
"don't have a unset status, so it would be otherwise be impossible to "
"distinguish between setting the geometry to NULL or not modifying the "
"existing geometry."
msgstr ""

#: ../../source/development/rfc/rfc93_update_feature.rst:175
msgid ""
"Q: Why having a default implementation of IUpdateFeature() in the "
"OGRLayer base class and not just returning OGRERR_UNSUPPORTED_OPERATION ?"
msgstr ""

#: ../../source/development/rfc/rfc93_update_feature.rst:178
msgid ""
"A: The rationale is to make it easier for code to use UpdateFeature(), "
"even when the underlying driver does not have a specialized "
"implementation. User code that needs to know if a specialized "
"implementation is available (in particular if atomicity of changes is a "
"requirement) can test the OLCUpdateFeature capability (UpdateFeature() is"
" available as soon as the OLCRandomWrite capability is advertized)."
msgstr ""

#: ../../source/development/rfc/rfc93_update_feature.rst:185
msgid ""
"Q: Is it appropriate that IUpdateFeature() implementations may alter the "
"feature passed to them ?"
msgstr ""

#: ../../source/development/rfc/rfc93_update_feature.rst:188
msgid ""
"A: given that the purpose of UpdateFeature() is to only require the "
"modified fields to be specified, the feature generally cannot be used to "
"reflect the full state of the corresponding stored object. Consequently "
"modifying it has no anticipated drawbacks for intended use cases."
msgstr ""

#: ../../source/development/rfc/rfc93_update_feature.rst:194
msgid "Bindings"
msgstr ""

#: ../../source/development/rfc/rfc93_update_feature.rst:196
msgid "OGR_L_UpdateFeature() is mapped to SWIG's ogr.Feature.UpdateFeature()."
msgstr ""

#: ../../source/development/rfc/rfc93_update_feature.rst:199
msgid "Benchmark"
msgstr ""

#: ../../source/development/rfc/rfc93_update_feature.rst:201
msgid ""
"A benchmark using the below Python script has been run to compare "
"updating a single field on a GeoPackage layer with 3.2 million features, "
"each with 13 attributes and small polygons, of a total size of 1.6 GB."
msgstr ""

#: ../../source/development/rfc/rfc93_update_feature.rst:205
msgid ""
"The runtime using the new UpdateFeature() method is 38.5 seconds, versus "
"168 seconds using GetFeature() + SetFeature(), hence a x4.4 speed-up. The"
" speed-up should generally increase with the number of attributes per "
"feature."
msgstr ""

#: ../../source/development/rfc/rfc93_update_feature.rst:209
msgid ""
"This is a good simulation of the benefit QGIS changeAttributeValues() "
"implementation could get by using UpdateFeature()."
msgstr ""

#: ../../source/development/rfc/rfc93_update_feature.rst:244
msgid "Backward compatibility"
msgstr ""

#: ../../source/development/rfc/rfc93_update_feature.rst:246
msgid "None, new functionality."
msgstr ""

#: ../../source/development/rfc/rfc93_update_feature.rst:248
msgid ""
"C++ ABI breakage due to a new virtual method, typical of functionality "
"introduced in GDAL minor versions."
msgstr ""

#: ../../source/development/rfc/rfc93_update_feature.rst:252
msgid "Documentation"
msgstr ""

#: ../../source/development/rfc/rfc93_update_feature.rst:254
msgid "The new functions and methods are documented."
msgstr ""

#: ../../source/development/rfc/rfc93_update_feature.rst:257
msgid "Testing"
msgstr ""

#: ../../source/development/rfc/rfc93_update_feature.rst:259
msgid ""
"The API, base implementation and dedicated UpdateFeature() are tested by "
"new autotest checks."
msgstr ""

#: ../../source/development/rfc/rfc93_update_feature.rst:263
msgid "Related issues and PRs"
msgstr ""

#: ../../source/development/rfc/rfc93_update_feature.rst:265
msgid ""
"https://github.com/OSGeo/gdal/issues/6544: Extend OGR API SetFeature to "
"control Replace vs Update behavior"
msgstr ""

#: ../../source/development/rfc/rfc93_update_feature.rst:268
msgid ""
"https://github.com/qgis/QGIS/issues/46355: Saving a large edited point "
"layer takes far too long"
msgstr ""

#: ../../source/development/rfc/rfc93_update_feature.rst:271
msgid ""
"Proposed implementation in "
"https://github.com/OSGeo/gdal/compare/master...rouault:gdal:update_feature?expand=1"
msgstr ""

#: ../../source/development/rfc/rfc93_update_feature.rst:275
msgid "Voting history"
msgstr ""

#: ../../source/development/rfc/rfc93_update_feature.rst:277
msgid "+1 from PSC members Jukka, MateuszL and EvenR"
msgstr ""


# SOME DESCRIPTIVE TITLE.
# Copyright (C) 1998-2024
# This file is distributed under the same license as the GDAL package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2024.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: GDAL \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2024-06-23 04:43+0900\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language: ja\n"
"Language-Team: ja <LL@li.org>\n"
"Plural-Forms: nplurals=1; plural=0;\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.14.0\n"

#: ../../source/development/dev_practices.rst:5
msgid "Development practices"
msgstr ""

#: ../../source/development/dev_practices.rst:10
msgid "Making changes to GDAL"
msgstr ""

#: ../../source/development/dev_practices.rst:12
msgid ""
"Minor changes to GDAL, such as bug fixes, may be made by opening a GitHub"
" pull request."
msgstr ""

#: ../../source/development/dev_practices.rst:14
msgid ""
"Major changes should be discussed on the |gdal-dev| listserv and may "
"require the drafting of a RFC (request for comment) document."
msgstr ""

#: ../../source/development/dev_practices.rst:17
msgid ""
"GDAL's policy on substantial code additions is documented at "
":ref:`rfc-85`."
msgstr ""

#: ../../source/development/dev_practices.rst:20
msgid "Portability"
msgstr ""

#: ../../source/development/dev_practices.rst:22
msgid ""
"GDAL strives to be widely portable to 32 bit and 64 bit computing "
"environments, as well as little-endian and big-endian ordered CPUs. CPL "
"functions in the port directory provide services to abstract platform "
"specific operations."
msgstr ""

#: ../../source/development/dev_practices.rst:27
msgid ""
"Generally speaking, where available CPL functions should be used in "
"preference to operating system functions for operations like memory "
"allocation, path parsing, filesystem I/O (using VSILFILE* / "
"VSIVirtualFile*), ODBC access, etc."
msgstr ""

#: ../../source/development/dev_practices.rst:33
msgid "C/C++ standards"
msgstr ""

#: ../../source/development/dev_practices.rst:35
msgid ""
"The current C and C++ standards adopted by GDAL/OGR are C99 and C++17 "
"(last updated per :ref:`rfc-98`)`"
msgstr ""

#: ../../source/development/dev_practices.rst:39
msgid "Variable naming"
msgstr ""

#: ../../source/development/dev_practices.rst:41
msgid ""
"Much of the existing GDAL/OGR code uses an adapted Hungarian naming "
"convention. Use of this convention is not mandatory, but when maintaining"
" code using this convention it is desirable to continue adhering to it "
"with changes. Most importantly, please avoiding using it improperly as "
"that can be very confusing."
msgstr ""

#: ../../source/development/dev_practices.rst:47
msgid ""
"In Hungarian prefixing the prefix tells something about about the type, "
"and potentially semantics of a variable. The following are some prefixes "
"used in GDAL/OGR."
msgstr ""

#: ../../source/development/dev_practices.rst:51
msgid "*a*: array"
msgstr ""

#: ../../source/development/dev_practices.rst:52
msgid ""
"*b*: C/C++ bool. In C code that pre-dates C99 adoption, it is also used "
"for"
msgstr ""

#: ../../source/development/dev_practices.rst:53
msgid "ints with only TRUE/FALSE values."
msgstr ""

#: ../../source/development/dev_practices.rst:54
msgid "*by*: byte (GByte / unsigned char)."
msgstr ""

#: ../../source/development/dev_practices.rst:55
msgid "*df*: floating point value (double precision)"
msgstr ""

#: ../../source/development/dev_practices.rst:56
msgid "*e*: enumeration"
msgstr ""

#: ../../source/development/dev_practices.rst:57
msgid "*i*: integer number used as a zero based array or loop index."
msgstr ""

#: ../../source/development/dev_practices.rst:58
msgid "*f*: floating point value (single precision)"
msgstr ""

#: ../../source/development/dev_practices.rst:59
msgid "*h*: an opaque handle (such as GDALDatasetH)."
msgstr ""

#: ../../source/development/dev_practices.rst:60
msgid "*n*: integer number (size unspecified)"
msgstr ""

#: ../../source/development/dev_practices.rst:61
msgid "*o*: C++ object"
msgstr ""

#: ../../source/development/dev_practices.rst:62
msgid "*os*: CPLString or std::string"
msgstr ""

#: ../../source/development/dev_practices.rst:63
msgid "*p*: pointer"
msgstr ""

#: ../../source/development/dev_practices.rst:64
msgid "*psz*: pointer to a null-terminated string. (eg. \"char \\*pszName;\")"
msgstr ""

#: ../../source/development/dev_practices.rst:65
msgid "*sz*: null-terminated string (eg.\" char szName[100];\")"
msgstr ""

#: ../../source/development/dev_practices.rst:66
msgid "*k*: compile-time constant"
msgstr ""

#: ../../source/development/dev_practices.rst:68
msgid ""
"Prefixes can be stacked. The following are some examples of meaningful "
"variables."
msgstr ""

#: ../../source/development/dev_practices.rst:71
msgid "\\*char !\\*\\ *papszTokens*: Pointer to an array of strings."
msgstr ""

#: ../../source/development/dev_practices.rst:72
msgid "\\*int *panBands*: Pointer to the first element of an array of numbers."
msgstr ""

#: ../../source/development/dev_practices.rst:74
msgid ""
"\\*double *padfScanline*: Pointer to the first element of an array of "
"doubles."
msgstr ""

#: ../../source/development/dev_practices.rst:76
msgid "\\*double *pdfMeanRet*: Pointer to a single double."
msgstr ""

#: ../../source/development/dev_practices.rst:77
msgid "\\*GDALRasterBand *poBand*: Pointer to a single object."
msgstr ""

#: ../../source/development/dev_practices.rst:78
msgid "\\*GByte *pabyHeader*: Pointer to an array of bytes."
msgstr ""

#: ../../source/development/dev_practices.rst:80
msgid ""
"It may also be noted that the standard convention for variable names is "
"to capitalize each word in a variable name."
msgstr ""

#: ../../source/development/dev_practices.rst:84
msgid "Memory allocation"
msgstr ""

#: ../../source/development/dev_practices.rst:86
msgid ""
"As per :ref:`rfc-19`, you can use VSIMalloc2(x, y) instead of doing "
"CPLMalloc(x \\* y) or VSIMalloc(x \\* y). VSIMalloc2 will detect "
"potential overflows in the multiplication and return a NULL pointer if it"
" happens. This can be useful in GDAL raster drivers where x and y are "
"related to the raster dimensions or raster block sizes. Similarly, "
"VSIMalloc3(x, y, z) can be used as a replacement for CPLMalloc(x \\* y "
"\\* z)."
msgstr ""

#: ../../source/development/dev_practices.rst:95
msgid "File naming and code formatting"
msgstr ""

#: ../../source/development/dev_practices.rst:97
msgid "Use lower case filenames."
msgstr ""

#: ../../source/development/dev_practices.rst:98
msgid "Use .cpp extension for C++ files (not .cc)."
msgstr ""

#: ../../source/development/dev_practices.rst:99
msgid ""
"Code formatting rules are defined in :source_file:`.clang-format`. The "
"pre-commit utility can be used to enforce them automatically."
msgstr ""

#: ../../source/development/dev_practices.rst:104
msgid "Git usage"
msgstr ""

#: ../../source/development/dev_practices.rst:106
msgid ""
"This section collects a few best practices for git usage for GDAL "
"development."
msgstr ""

#: ../../source/development/dev_practices.rst:109
msgid "Initiating your work repository"
msgstr ""

#: ../../source/development/dev_practices.rst:111
msgid "Fork |OSGeo/gdal| from the GitHub UI, and then run:"
msgstr ""

#: ../../source/development/dev_practices.rst:120
msgid "Working with a feature branch"
msgstr ""

#: ../../source/development/dev_practices.rst:156
msgid "From the GitHub UI, issue a pull request."
msgstr ""

#: ../../source/development/dev_practices.rst:158
msgid ""
"If the pull request discussion or automated checks require changes, "
"commit locally and push. To get a reasonable history, you may need to "
"combine commits using ``git rebase -i master``, in which case you will "
"have to force-push your branch with ``git push -f my_user_name "
"my_new_feature_branch``."
msgstr ""

#: ../../source/development/dev_practices.rst:165
msgid "Updating your local master against upstream master"
msgstr ""

#: ../../source/development/dev_practices.rst:176
msgid "Commit messages"
msgstr ""

#: ../../source/development/dev_practices.rst:178
msgid ""
"Commit messages should indicate a component name (eg a driver name), a "
"short description, and when relevant, a reference to a issue (with 'fixes"
" #' if it actually fixes it)"
msgstr ""

#: ../../source/development/dev_practices.rst:189
msgid "Commit hooks"
msgstr ""

#: ../../source/development/dev_practices.rst:191
msgid ""
"GDAL provides pre-commit hooks to run code linters before a commit is "
"made. The hooks are cloned with the repository and can be installed using"
" `pre-commit <https://pre-commit.com>`_:"
msgstr ""

#: ../../source/development/dev_practices.rst:201
msgid ""
"Once installed, the hooks can be run manually via ``pre-commit run --all-"
"files``."
msgstr ""

#: ../../source/development/dev_practices.rst:204
msgid "Blame ignore file"
msgstr ""

#: ../../source/development/dev_practices.rst:206
msgid ""
"Due to whole-tree code reformatting done during GDAL 3.7 development, "
"``git blame`` information might be misleading. To avoid that, you need to"
" modify your git configuration as following to ignore the revision of the"
" whole-tree reformatting:"
msgstr ""

#: ../../source/development/dev_practices.rst:217
msgid "Backporting bugfixes from master to a stable branch"
msgstr ""

#: ../../source/development/dev_practices.rst:229
msgid "If changes are needed, do them and ``git commit -a --amend``"
msgstr ""

#: ../../source/development/dev_practices.rst:233
msgid "Things you should NOT do"
msgstr ""

#: ../../source/development/dev_practices.rst:235
msgid ""
"(For anyone with push rights to |OSGeo/gdal|) Never modify a commit or "
"the history of anything that has been committed to "
"https://github.com/OSGeo/gdal"
msgstr ""

#: ../../source/development/dev_practices.rst:239
msgid ""
"Committing symbolic links is allowed only under the .github directory in "
"order to avoid potential problems on Windows."
msgstr ""


# SOME DESCRIPTIVE TITLE.
# Copyright (C) 1998-2024
# This file is distributed under the same license as the GDAL package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2024.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: GDAL \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2024-06-25 01:39+0900\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language: ja\n"
"Language-Team: ja <LL@li.org>\n"
"Plural-Forms: nplurals=1; plural=0;\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.14.0\n"

#: ../../source/drivers/raster/cog.rst:5
msgid "COG -- Cloud Optimized GeoTIFF generator"
msgstr ""

#: ../../source/drivers/raster/cog.rst:13
msgid "This driver supports the creation of Cloud Optimized GeoTIFF (COG)"
msgstr ""

#: ../../source/drivers/raster/cog.rst:15
msgid ""
"It essentially relies upon the :ref:`raster.gtiff` driver with the "
"``COPY_SRC_OVERVIEWS=YES`` creation option, but automatically does the "
"needed preprocessing stages (reprojection if asked and creation of "
"overviews on imagery and/or mask) if not already done, and also takes "
"care of morphing the input dataset into the expected form when using some"
" compression types (for example a RGBA dataset will be transparently "
"converted to a RGB+mask dataset when selecting JPEG compression)"
msgstr ""

#: ../../source/drivers/raster/cog.rst:24
msgid "Driver capabilities"
msgstr ""

#: ../../source/drivers/raster/cog.rst:33
msgid "Creation Options"
msgstr ""

#: ../../source/drivers/raster/cog.rst:36
msgid "General creation options"
msgstr ""

#: ../../source/drivers/raster/cog.rst:352
msgid "Reprojection related creation options"
msgstr ""

#: ../../source/drivers/raster/cog.rst:439
msgid "Update"
msgstr ""

#: ../../source/drivers/raster/cog.rst:441
msgid ""
"Updating a COG file generally breaks part of the optimizations, but still"
" produces a valid GeoTIFF file. Starting with GDAL 3.8, to avoid "
"undesired loss of the COG characteristics, opening such a file in update "
"mode will be rejected, unless the IGNORE_COG_LAYOUT_BREAK open option is "
"also explicitly set to YES."
msgstr ""

#: ../../source/drivers/raster/cog.rst:446
msgid ""
"Note that a subset of operations are possible when opening a COG file in "
"read-only mode, like metadata edition (including statistics storage), "
"that will be stored in a auxiliary .aux.xml side-car file."
msgstr ""

#: ../../source/drivers/raster/cog.rst:451
msgid "File format details"
msgstr ""

#: ../../source/drivers/raster/cog.rst:454
msgid "High level"
msgstr ""

#: ../../source/drivers/raster/cog.rst:456
msgid "A Cloud optimized GeoTIFF has the following characteristics:"
msgstr ""

#: ../../source/drivers/raster/cog.rst:458
msgid "TIFF or BigTIFF file"
msgstr ""

#: ../../source/drivers/raster/cog.rst:459
msgid "Tiled (512 pixels by default) for imagery, mask and overviews"
msgstr ""

#: ../../source/drivers/raster/cog.rst:460
msgid ""
"Overviews until the maximum dimension of the smallest overview level is "
"lower than 512 pixels."
msgstr ""

#: ../../source/drivers/raster/cog.rst:462
msgid "Compressed or not"
msgstr ""

#: ../../source/drivers/raster/cog.rst:463
msgid "Pixel interleaving for multi-band dataset"
msgstr ""

#: ../../source/drivers/raster/cog.rst:464
msgid ""
"Optimized layout of TIFF sections to minimize the number of GET requests "
"needed by a reader doing random read access."
msgstr ""

#: ../../source/drivers/raster/cog.rst:468
msgid "Low level"
msgstr ""

#: ../../source/drivers/raster/cog.rst:470
msgid ""
"A COG file is organized as the following (if using libtiff >= 4.0.11 or "
"GDAL internal libtiff. For other versions, the layout will be different "
"and some of the optimizations will not be available)."
msgstr ""

#: ../../source/drivers/raster/cog.rst:474
msgid ""
"TIFF/BigTIFF header/signature and pointer to first IFD (Image File "
"Directory)"
msgstr ""

#: ../../source/drivers/raster/cog.rst:475
msgid "\"ghost area\" with COG optimizations (see `Header ghost area`_)"
msgstr ""

#: ../../source/drivers/raster/cog.rst:476
msgid ""
"IFD of the full resolution image, followed by TIFF tags values, excluding"
" the TileOffsets and TileByteCounts arrays."
msgstr ""

#: ../../source/drivers/raster/cog.rst:478
msgid ""
"IFD of the mask of the full resolution image, if present, followed by "
"TIFF tags values, excluding the TileOffsets and TileByteCounts arrays."
msgstr ""

#: ../../source/drivers/raster/cog.rst:480
msgid "IFD of the first (largest in dimensions) overview level, if present"
msgstr ""

#: ../../source/drivers/raster/cog.rst:481
#: ../../source/drivers/raster/cog.rst:484
#: ../../source/drivers/raster/cog.rst:490
msgid "..."
msgstr ""

#: ../../source/drivers/raster/cog.rst:482
msgid "IFD of the last (smallest) overview level, if present"
msgstr ""

#: ../../source/drivers/raster/cog.rst:483
msgid ""
"IFD of the first (largest in dimensions) overview level of the mask, if "
"present"
msgstr ""

#: ../../source/drivers/raster/cog.rst:485
msgid "IFD of the last (smallest) overview level of the mask, if present"
msgstr ""

#: ../../source/drivers/raster/cog.rst:486
msgid "TileOffsets and TileByteCounts arrays of the above IFDs"
msgstr ""

#: ../../source/drivers/raster/cog.rst:487
msgid ""
"tile data of the smallest overview, if present (with each tile followed "
"by the corresponding tile of mask data, if present), with :ref:`leader "
"and trailer bytes <cog.tile_data_leader_trailer>`"
msgstr ""

#: ../../source/drivers/raster/cog.rst:491
msgid ""
"tile data of the largest overview, if present (interleaved with mask data"
" if present)"
msgstr ""

#: ../../source/drivers/raster/cog.rst:492
msgid ""
"tile data of the full resolution image, if present (interleaved with "
"corresponding  mask data if present)"
msgstr ""

#: ../../source/drivers/raster/cog.rst:495
msgid "Header ghost area"
msgstr ""

#: ../../source/drivers/raster/cog.rst:497
msgid ""
"To describe the specific layout of COG files, a description of the "
"features used is located at the beginning of the file, so that optimized "
"readers (like GDAL) can use them and take shortcuts. Those features are "
"described as ASCII strings \"hidden\" just after the 8 first bytes of a "
"ClassicTIFF (or after the 16 first ones for a BigTIFF). That is the first"
" IFD starts just after those strings. It is completely valid to have "
"*ghost* areas like this in a TIFF file, and readers will normally skip "
"over them. So for a COG file with a transparency mask, those strings will"
" be:"
msgstr ""

#: ../../source/drivers/raster/cog.rst:518
msgid "A newline character `\\\\n` is used to separate those strings."
msgstr ""

#: ../../source/drivers/raster/cog.rst:519
msgid ""
"A space character is inserted after the newline following "
"`KNOWN_INCOMPATIBLE_EDITION=NO`"
msgstr ""

#: ../../source/drivers/raster/cog.rst:520
msgid ""
"For a COG without mask, the `MASK_INTERLEAVED_WITH_IMAGERY` item will not"
" be present of course."
msgstr ""

#: ../../source/drivers/raster/cog.rst:522
msgid ""
"The ghost area starts with ``GDAL_STRUCTURAL_METADATA_SIZE=XXXXXX "
"bytes\\n`` (of a fixed size of 43 bytes) where XXXXXX is a 6-digit number"
" indicating the remaining size of the section (that is starting after the"
" linefeed character of this starting line)."
msgstr ""

#: ../../source/drivers/raster/cog.rst:527
msgid ""
"``LAYOUT=IFDS_BEFORE_DATA``: the IFDs are located at the beginning of the"
" file. GDAL will also makes sure that the tile index arrays are written "
"just after the IFDs and before the imagery, so that a first range request"
" of 16 KB will always get all the IFDs"
msgstr ""

#: ../../source/drivers/raster/cog.rst:532
msgid ""
"``BLOCK_ORDER=ROW_MAJOR``: (strile is a contraction of 'strip or tile') "
"the data for tiles is written in increasing tile id order. Future "
"enhancements could possibly implement other layouts."
msgstr ""

#: ../../source/drivers/raster/cog.rst:536
msgid ""
"``BLOCK_LEADER=SIZE_AS_UINT4``: each tile data is preceded by 4 bytes, in"
" a *ghost* area as well, indicating the real tile size (in little endian "
"order). See `Tile data leader and trailer`_ for more details."
msgstr ""

#: ../../source/drivers/raster/cog.rst:540
msgid ""
"``BLOCK_TRAILER=LAST_4_BYTES_REPEATED``: just after the tile data, the "
"last 4 bytes of the tile data are repeated. See `Tile data leader and "
"trailer`_ for more details."
msgstr ""

#: ../../source/drivers/raster/cog.rst:543
msgid ""
"``KNOWN_INCOMPATIBLE_EDITION=NO``: when a COG is generated this is always"
" written. If GDAL is then used to modify the COG file, as most of the "
"changes done on an existing COG file, will break the optimized structure,"
" GDAL will change this metadata item to KNOWN_INCOMPATIBLE_EDITION=YES, "
"and issue a warning on writing, and when reopening such file, so that "
"users know they have *broken* their COG file"
msgstr ""

#: ../../source/drivers/raster/cog.rst:550
msgid ""
"``MASK_INTERLEAVED_WITH_IMAGERY=YES``: indicates that mask data "
"immediately follows imagery data. So when reading data at "
"offset=TileOffset[i] - 4 and size=TileOffset[i+1]-TileOffset[i]+4, you'll"
" get a buffer with:"
msgstr ""

#: ../../source/drivers/raster/cog.rst:554
msgid "leader with imagery tile size (4 bytes)"
msgstr ""

#: ../../source/drivers/raster/cog.rst:555
msgid "imagery data (starting at TileOffsets[i] and of size TileByteCounts[i])"
msgstr ""

#: ../../source/drivers/raster/cog.rst:556
msgid "trailer of imagery (4 bytes)"
msgstr ""

#: ../../source/drivers/raster/cog.rst:557
msgid "leader with mask tilesize (4 bytes)"
msgstr ""

#: ../../source/drivers/raster/cog.rst:558
msgid ""
"mask data (starting at mask.TileOffsets[i] and of size "
"mask.TileByteCounts[i], but none of them actually need to be read)"
msgstr ""

#: ../../source/drivers/raster/cog.rst:560
msgid "trailer of mask data (4 bytes)"
msgstr ""

#: ../../source/drivers/raster/cog.rst:564
msgid ""
"The content of the header ghost area can be retrieved by getting the "
"``GDAL_STRUCTURAL_METADATA`` metadata item of the ``TIFF`` metadata "
"domain on the datasett object (with GetMetadataItem())"
msgstr ""

#: ../../source/drivers/raster/cog.rst:571
msgid "Tile data leader and trailer"
msgstr ""

#: ../../source/drivers/raster/cog.rst:573
msgid ""
"Each tile data is immediately preceded by a leader, consisting of a "
"unsigned 4-byte integer, in little endian order, giving the number of "
"bytes of *payload* of the tile data that follows it. This leader is "
"*ghost* in the sense that the TileOffsets[] array does not point to it, "
"but points to the real payload. Hence the offset of the leader is "
"TileOffsets[i]-4."
msgstr ""

#: ../../source/drivers/raster/cog.rst:579
msgid ""
"An optimized reader seeing the ``BLOCK_LEADER=SIZE_AS_UINT4`` metadata "
"item will thus look for TileOffset[i] and TileOffset[i+1] to deduce it "
"must fetch the data starting at offset=TileOffset[i] - 4 and of "
"size=TileOffset[i+1]-TileOffset[i]+4. It then checks the 4 first bytes to"
" see if the size in this leader marker is consistent with "
"TileOffset[i+1]-TileOffset[i]. When there is no mask, they should "
"normally be equal (modulo the size taken by BLOCK_LEADER and "
"BLOCK_TRAILER). In the case where there is a mask and "
"MASK_INTERLEAVED_WITH_IMAGERY=YES, then the tile size indicated in the "
"leader will be < TileOffset[i+1]-TileOffset[i] since the data for the "
"mask will follow the imagery data (see MASK_INTERLEAVED_WITH_IMAGERY=YES)"
msgstr ""

#: ../../source/drivers/raster/cog.rst:590
msgid ""
"Each tile data is immediately followed by a trailer, consisting of the "
"repetition of the last 4 bytes of the payload of the tile data. The size "
"of this trailer is *not* included in the TileByteCounts[] array. The "
"purpose of this trailer is forces readers to be able to check if TIFF "
"writers, not aware of those optimizations, have modified the  TIFF file "
"in a way that breaks the optimizations. If an optimized reader detects an"
" inconsistency, it can then fallbacks to the regular/slower method of "
"using TileOffsets[i] + TileByteCounts[i]."
msgstr ""

#: ../../source/drivers/raster/cog.rst:599
msgid "Examples"
msgstr ""

#: ../../source/drivers/raster/cog.rst:610
msgid "See Also"
msgstr ""

#: ../../source/drivers/raster/cog.rst:612
msgid ":ref:`raster.gtiff` driver"
msgstr ""

#: ../../source/drivers/raster/cog.rst:613
msgid ""
"`How to generate and read cloud optimized GeoTIFF files "
"<https://trac.osgeo.org/gdal/wiki/CloudOptimizedGeoTIFF>`__ (before GDAL "
"3.1)"
msgstr ""

#: ../../source/drivers/raster/cog.rst:615
msgid ""
"If your source dataset is an internally tiled geotiff with the desired "
"georeferencing and compression, using `cogger "
"<https://github.com/airbusgeo/cogger>`__ (possibly along with gdaladdo to"
" create overviews) will be much faster than the COG driver."
msgstr ""

#~ msgid "Driver short name"
#~ msgstr ""

#~ msgid "COG"
#~ msgstr ""

#~ msgid ""
#~ "``JPEG`` should generally only be used"
#~ " with Byte data (8 bit per "
#~ "channel). But if GDAL is built "
#~ "with internal libtiff and libjpeg, it"
#~ " is    possible to read and write "
#~ "TIFF files with 12bit JPEG compressed"
#~ " TIFF files (seen as UInt16 bands "
#~ "with NBITS=12). See the `\"8 and "
#~ "12 bit JPEG in TIFF\" "
#~ "<http://trac.osgeo.org/gdal/wiki/TIFF12BitJPEG>`__ wiki "
#~ "page for more details. For the COG"
#~ " driver, JPEG compression for 3 or"
#~ " 4-band images automatically selects the"
#~ " PHOTOMETRIC=YCBCR colorspace with a 4:2:2"
#~ " subsampling of the Y,Cb,Cr components. "
#~ "For a input dataset (single-band "
#~ "or 3-band), plus an alpha band, "
#~ "the alpha band will be converted "
#~ "as a 1-bit DEFLATE compressed mask."
#~ msgstr ""

#~ msgid ""
#~ "``LZW``, ``DEFLATE`` and ``ZSTD`` compressions"
#~ " can be used with the PREDICTOR "
#~ "creation option."
#~ msgstr ""

#~ msgid ""
#~ "``ZSTD`` is available when using "
#~ "internal libtiff and if GDAL built "
#~ "against libzstd >=1.0, or if built "
#~ "against external libtiff with zstd "
#~ "support."
#~ msgstr ""

#~ msgid "``LERC`` is available when using internal libtiff."
#~ msgstr ""

#~ msgid "``LERC_ZSTD`` is available when ``LERC`` and ``ZSTD`` are available."
#~ msgstr ""

#~ msgid ""
#~ "``JXL`` is for JPEG-XL, and is "
#~ "only available when using internal "
#~ "libtiff and building GDAL against "
#~ "https://github.com/libjxl/libjxl . JXL compression"
#~ " may only be used on datasets "
#~ "with 4 bands or less. Option added"
#~ " in GDAL 3.4"
#~ msgstr ""

#~ msgid ""
#~ "For DEFLATE/LZMA, 9 is the "
#~ "slowest/higher compression rate (or 12 "
#~ "when using a libtiff with libdeflate "
#~ "support). The default is 6."
#~ msgstr ""

#~ msgid "For ZSTD, 22 is the slowest/higher compression rate. The default is 9."
#~ msgstr ""

#~ msgid "``YES`` forces BigTIFF."
#~ msgstr ""

#~ msgid "``NO`` forces classic TIFF."
#~ msgstr ""

#~ msgid ""
#~ "``IF_NEEDED`` will only create a BigTIFF"
#~ " if it is clearly needed (in "
#~ "the uncompressed case, and image larger"
#~ " than 4GB. So no effect when "
#~ "using a compression)."
#~ msgstr ""

#~ msgid ""
#~ "``IF_SAFER`` will create BigTIFF if the"
#~ " resulting file \\*might\\* exceed 4GB. "
#~ "Note: this is only a heuristics "
#~ "that might not always work depending "
#~ "on compression ratios."
#~ msgstr ""

#~ msgid ""
#~ "BigTIFF is a TIFF variant which "
#~ "can contain more than 4GiB of data"
#~ " (size of classic TIFF is limited "
#~ "by that value). This option is "
#~ "available if GDAL is built with "
#~ "libtiff library version 4.0 or higher."
#~ " The default is IF_NEEDED."
#~ msgstr ""

#~ msgid ""
#~ "When creating a new GeoTIFF with "
#~ "no compression, GDAL computes in advance"
#~ " the size of the resulting file. "
#~ "If that computed file size is over"
#~ " 4GiB, GDAL will automatically decide "
#~ "to create a BigTIFF file. However, "
#~ "when compression is used, it is "
#~ "not possible in advance to known "
#~ "the final size of the file, so "
#~ "classical TIFF will be chosen. In "
#~ "that case, the user must explicitly "
#~ "require the creation of a BigTIFF "
#~ "with BIGTIFF=YES if the final file "
#~ "is anticipated to be too big for"
#~ " classical TIFF format. If BigTIFF "
#~ "creation is not explicitly asked or "
#~ "guessed and the resulting file is "
#~ "too big for classical TIFF, libtiff "
#~ "will fail with an error message "
#~ "like \"TIFFAppendToStrip:Maximum TIFF file "
#~ "size exceeded\"."
#~ msgstr ""

#~ msgid ""
#~ "``AUTO`` (default): source overviews will "
#~ "be used if present. If not "
#~ "present, overviews will be automatically "
#~ "generated in the output file."
#~ msgstr ""

#~ msgid ""
#~ "``IGNORE_EXISTING``: potential existing overviews"
#~ " on the source dataset will be "
#~ "ignored and new overviews will be "
#~ "automatically generated."
#~ msgstr ""

#~ msgid ""
#~ "``FORCE_USE_EXISTING``: potential existing overviews"
#~ " on the source will be used. If"
#~ " there is no source overview, this"
#~ " is equivalent to specifying ``NONE``."
#~ msgstr ""

#~ msgid ""
#~ "``NONE``: potential source overviews will "
#~ "be ignored, and no overview will "
#~ "be generated."
#~ msgstr ""

#~ msgid ""
#~ "When using the gdal_translate utility, "
#~ "source overviews will not be available"
#~ " if general options (i.e. options "
#~ "which are not creation options, like "
#~ "subsetting, etc.) are used."
#~ msgstr ""

#~ msgid ""
#~ "If not specified, the driver will "
#~ "use all the overviews available in "
#~ "the source raster, in :co:`OVERVIEWS=AUTO` "
#~ "or ``FORCE_USE_EXISTING`` modes. In situations"
#~ " where GDAL generates overviews, the "
#~ "default number of overview levels is "
#~ "such that the dimensions of the "
#~ "smallest overview are smaller or equal"
#~ " to the :co:`BLOCKSIZE` value."
#~ msgstr ""

#~ msgid ""
#~ "By default (``AUTO``) the overviews will"
#~ " be created with the same compression"
#~ " method as the COG."
#~ msgstr ""

#~ msgid "Write support for GeoTIFF 1.1 requires libgeotiff 1.6.0 or later."
#~ msgstr ""

#~ msgid ""
#~ "The tile size indicated in the "
#~ "tiling scheme definition (generally 256 "
#~ "pixels) will be used, unless the "
#~ "user has specified a value with "
#~ "the :co:`BLOCKSIZE` creation option, in "
#~ "which case the user specified one "
#~ "will be taken into account (that "
#~ "is if setting a higher value than"
#~ " 256, the original tiling scheme is"
#~ " modified to take into account the"
#~ " size of the HiDPi tiles)."
#~ msgstr ""

#~ msgid ""
#~ "In non-CUSTOM mode, TARGET_SRS, RES "
#~ "and EXTENT options are ignored. Starting"
#~ " with GDAL 3.2, the value of "
#~ ":co:`TILING_SCHEME` can also be the "
#~ "filename of a JSON file according "
#~ "to the `OGC Two Dimensional Tile "
#~ "Matrix Set standard`_, a URL to "
#~ "such file, the radical of a "
#~ "definition file in the GDAL data "
#~ "directory (e.g. ``FOO`` for a file "
#~ "named ``tms_FOO.json``) or the inline "
#~ "JSON definition. The list of available"
#~ " tiling schemes can be obtained by"
#~ " looking at values of the "
#~ "TILING_SCHEME option reported by ``gdalinfo"
#~ " --format COG``."
#~ msgstr ""


# SOME DESCRIPTIVE TITLE.
# Copyright (C) 1998-2024
# This file is distributed under the same license as the GDAL package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2024.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: GDAL \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2024-06-25 01:39+0900\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language: en\n"
"Language-Team: en <LL@li.org>\n"
"Plural-Forms: nplurals=2; plural=(n != 1);\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.14.0\n"

#: ../../source/drivers/vector/csv.rst:4
msgid "Comma Separated Value (.csv)"
msgstr ""

#: ../../source/drivers/vector/csv.rst:10
msgid ""
"OGR supports reading and writing primarily non-spatial tabular data "
"stored in text CSV files. CSV files are a common interchange format "
"between software packages supporting tabular data and are also easily "
"produced manually with a text editor or with end-user written scripts or "
"programs."
msgstr ""

#: ../../source/drivers/vector/csv.rst:16
msgid ""
"The datasource name may be either a single CSV file or point to a "
"directory. For a directory to be recognised as a .csv datasource at least"
" half the files in the directory need to have the extension .csv. One "
"layer (table) is produced from each .csv file accessed. Starting with "
"GDAL 3.7, pipe separated values files with a \".psv\" extension are also "
"recognized."
msgstr ""

#: ../../source/drivers/vector/csv.rst:24
msgid ""
"For files structured as CSV, but not ending with the \".csv\" extension, "
"the 'CSV:' prefix can be added before the filename to force loading by "
"the CSV driver."
msgstr ""

#: ../../source/drivers/vector/csv.rst:28
msgid ""
"The OGR CSV driver supports reading and writing. Because the CSV format "
"has variable length text lines, reading is done sequentially. Reading "
"features in random order will generally be very slow. OGR CSV layer might"
" have a coordinate system stored in a .prj file (see GeoCSV "
"specification). When reading a field named \"WKT\" is assumed to contain "
"WKT geometry, but also is treated as a regular field. The OGR CSV driver "
"returns all attribute columns as string data types if no field type "
"information file (with .csvt extension) is available."
msgstr ""

#: ../../source/drivers/vector/csv.rst:37
msgid ""
"Limited type recognition can be done for Integer, Real, String, Date "
"(YYYY-MM-DD), Time (HH:MM:SS+nn), DateTime (YYYY-MM-DD HH:MM:SS+nn) "
"columns through a descriptive file with the same name as the CSV file, "
"but a .csvt extension. In a single line the types for each column have to"
" be listed with double quotes and be comma separated (e.g., "
"\"Integer\",\"String\"). It is also possible to specify explicitly the "
"width and precision of each column, e.g. "
"\"Integer(5)\",\"Real(10.7)\",\"String(15)\". The driver will then use "
"these types as specified for the csv columns. Subtypes can be passed "
"between parenthesis, such as \"Integer(Boolean)\", \"Integer(Int16)\" and"
" \"Real(Float32)\". Starting with GDAL 2.1, accordingly with the `GeoCSV "
"specification <http://giswiki.hsr.ch/GeoCSV>`__, the \"CoordX\" or "
"\"Point(X)\" type can be used to specify a column with longitude/easting "
"values, \"CoordY\" or \"Point(Y)\" for latitude/northing values and "
"\"WKT\" for geometries encoded in WKT"
msgstr ""

#: ../../source/drivers/vector/csv.rst:54
msgid ""
"Starting with GDAL 2.2, the \"JSonStringList\", \"JSonIntegerList\", "
"\"JSonInteger64List\" and \"JSonRealList\" types can be used in .csvt to "
"map to the corresponding OGR StringList, IntegerList, Integer64List and "
"RealList types. The field values are then encoded as JSon arrays, with "
"proper CSV escaping."
msgstr ""

#: ../../source/drivers/vector/csv.rst:60
msgid ""
"Automatic field type guessing can also be done if specifying the open "
"options described in the below \"Open options\" section."
msgstr ""

#: ../../source/drivers/vector/csv.rst:65
msgid "Driver capabilities"
msgstr ""

#: ../../source/drivers/vector/csv.rst:74
msgid "Format"
msgstr ""

#: ../../source/drivers/vector/csv.rst:76
msgid ""
"CSV files have one line for each feature (record) in the layer (table). "
"The attribute field values are separated by commas. At least two fields "
"per line must be present. Lines may be terminated by a DOS (CR/LF) or "
"Unix (LF) style line terminators. Each record should have the same number"
" of fields. The driver will also accept a semicolon, a tabulation, a "
"pipe, or a space character as field separator. Starting with GDAL 3.8, "
"the autodection will select the separator with the most occurrences if "
"there are several candidates  on the first line of the CSV file (and warn"
" about that). The :oo:`SEPARATOR` open option may also be set to define "
"the desired separator. Previous versions select comma by default when "
"there are several potential separators."
msgstr ""

#: ../../source/drivers/vector/csv.rst:89
msgid ""
"Complex attribute values (such as those containing commas, quotes or "
"newlines) may be placed in double quotes. Any occurrences of double "
"quotes within the quoted string should be doubled up to \"escape\" them."
msgstr ""

#: ../../source/drivers/vector/csv.rst:93
msgid ""
"By default, the driver attempts to treat the first line of the file as a "
"list of field names for all the fields. However, if one or more of the "
"names is all numeric it is assumed that the first line is actually data "
"values and dummy field names are generated internally (field_1 through "
"field_n) and the first record is treated as a feature. Numeric values are"
" treated as field names if they are enclosed in double quotes. Starting "
"with GDAL 2.1, this behavior can be modified via the HEADERS open option."
msgstr ""

#: ../../source/drivers/vector/csv.rst:102
msgid ""
"All CSV files are treated as UTF-8 encoded. A Byte Order Mark (BOM) at "
"the beginning of the file will be parsed correctly. The layer creation "
"option :lco:`WRITE_BOM` can be used to create a file with a Byte Order "
"Mark, which can improve compatibility with some software (particularly "
"Excel)."
msgstr ""

#: ../../source/drivers/vector/csv.rst:108
msgid "Example (employee.csv):"
msgstr ""

#: ../../source/drivers/vector/csv.rst:116
msgid ""
"Note that the Comments value for the first data record is placed in "
"double quotes because the value contains quotes, and those quotes have to"
" be doubled up so we know we haven't reached the end of the quoted string"
" yet."
msgstr ""

#: ../../source/drivers/vector/csv.rst:121
msgid ""
"Many variations of textual input are sometimes called Comma Separated "
"Value files, including files without commas, but fixed column widths, "
"those using tabs as separators or those with other auxiliary data "
"defining field types or structure. This driver does not attempt to "
"support all such files, but instead to support simple .csv files that can"
" be auto-recognised. Scripts or other mechanisms can generally be used to"
" convert other variations into a form that is compatible with the OGR CSV"
" driver."
msgstr ""

#: ../../source/drivers/vector/csv.rst:131
msgid "Reading CSV containing spatial information"
msgstr ""

#: ../../source/drivers/vector/csv.rst:134
msgid "Building point geometries"
msgstr ""

#: ../../source/drivers/vector/csv.rst:136
#: ../../source/drivers/vector/csv.rst:222
msgid "Consider the following CSV file (test.csv):"
msgstr ""

#: ../../source/drivers/vector/csv.rst:145
msgid ""
"Starting with GDAL 2.1, it is possible to directly specify the potential "
"names of the columns that can contain X/longitude and Y/latitude with the"
" :oo:`X_POSSIBLE_NAMES` and :oo:`Y_POSSIBLE_NAMES` open option."
msgstr ""

#: ../../source/drivers/vector/csv.rst:149
msgid ""
"*ogrinfo -ro -al test.csv -oo X_POSSIBLE_NAMES=Lon\\* -oo "
"Y_POSSIBLE_NAMES=Lat\\* -oo KEEP_GEOM_COLUMNS=NO* will return :"
msgstr ""

#: ../../source/drivers/vector/csv.rst:166
msgid ""
"If CSV file does not have a header line, the dummy \"field_n\" names can "
"be used as possible names for coordinate fields. For example plain XYZ "
"point data can be opened as"
msgstr ""

#: ../../source/drivers/vector/csv.rst:170
msgid ""
"*ogrinfo -ro -al elevation.xyz -oo X_POSSIBLE_NAMES=field_1 -oo "
"Y_POSSIBLE_NAMES=field_2 -oo Z_POSSIBLE_NAMES=field_3*"
msgstr ""

#: ../../source/drivers/vector/csv.rst:173
msgid ""
"Otherwise, if one or several columns contain a geometry definition "
"encoded as WKT, WKB (encoded in hexadecimal) or GeoJSON (in which case "
"the GeoJSON content must be formatted to follow CSV rules, that is to say"
" it must be surrounded by double-quotes, and double-quotes inside the "
"string must be repeated for proper escaping), the name of such column(s) "
"can be derived from the :oo:`GEOM_POSSIBLE_NAMES` open option."
msgstr ""

#: ../../source/drivers/vector/csv.rst:180
msgid ""
"For older versions, it is possible to extract spatial information "
"(points) from a CSV file which has columns for the X and Y coordinates, "
"through the use of the :ref:`VRT <vector.vrt>` driver."
msgstr ""

#: ../../source/drivers/vector/csv.rst:184
msgid "You can write the associated VRT file (test.vrt):"
msgstr ""

#: ../../source/drivers/vector/csv.rst:197
msgid "and *ogrinfo -ro -al test.vrt* will return :"
msgstr ""

#: ../../source/drivers/vector/csv.rst:220
msgid "Building line geometries"
msgstr ""

#: ../../source/drivers/vector/csv.rst:232
msgid ""
"With a GDAL build with Spatialite enabled, *ogrinfo test.csv -dialect "
"SQLite -sql \"SELECT way_id, MakeLine(MakePoint(CAST(x AS float),CAST(y "
"AS float))) FROM test GROUP BY way_id\"* will return :"
msgstr ""

#: ../../source/drivers/vector/csv.rst:247
msgid "VSI Virtual File System API support"
msgstr ""

#: ../../source/drivers/vector/csv.rst:249
msgid ""
"The driver supports reading and writing to files managed by VSI Virtual "
"File System API, which include \"regular\" files, as well as files in the"
" /vsizip/ (read-write) , /vsigzip/ (read-only) , /vsicurl/ (read-only) "
"domains."
msgstr ""

#: ../../source/drivers/vector/csv.rst:254
msgid "Writing to /dev/stdout or /vsistdout/ is also supported."
msgstr ""

#: ../../source/drivers/vector/csv.rst:256
msgid ""
"Reading from /vsistdin/ is supported using the ``CSV:/vsistdin/`` "
"connection string and provided that none of the open options whose name "
"starts with ``AUTODETECT_`` is used."
msgstr ""

#: ../../source/drivers/vector/csv.rst:261
msgid "Open options"
msgstr ""

#: ../../source/drivers/vector/csv.rst:263
msgid ""
"The following open options can be specified (typically with the -oo "
"name=value parameters of ogrinfo or ogr2ogr):"
msgstr ""

#: ../../source/drivers/vector/csv.rst:412
msgid "Creation Issues"
msgstr ""

#: ../../source/drivers/vector/csv.rst:414
msgid ""
"The driver supports creating new databases (as a directory of .csv "
"files), adding new .csv files to an existing directory or .csv files or "
"appending features to an existing .csv table. Starting with GDAL 2.1, "
"deleting or replacing existing features, or adding/modifying/deleting "
"fields is supported, provided the modifications done are small enough to "
"be stored in RAM temporarily before flushing to disk."
msgstr ""

#: ../../source/drivers/vector/csv.rst:422
msgid "Layer Creation options"
msgstr ""

#: ../../source/drivers/vector/csv.rst:485
msgid "Configuration options"
msgstr ""

#: ../../source/drivers/vector/csv.rst:487
msgid "The following :ref:`configuration options <configoptions>` are available:"
msgstr ""

#: ../../source/drivers/vector/csv.rst:509
msgid "Examples"
msgstr ""

#: ../../source/drivers/vector/csv.rst:511
msgid ""
"This example shows using ogr2ogr to transform a shapefile with point "
"geometry into a .csv file with the X,Y,Z coordinates of the points as "
"first columns in the .csv file"
msgstr ""

#: ../../source/drivers/vector/csv.rst:519
msgid ""
"This example shows using ogr2ogr to transform a shapefile into a .csv "
"file with geography field formatted using GeoJSON format."
msgstr ""

#: ../../source/drivers/vector/csv.rst:526
msgid ""
"Convert a CSV into a GeoPackage. Specify the names of the coordinate "
"columns and assign a coordinate reference system."
msgstr ""

#: ../../source/drivers/vector/csv.rst:539
msgid "Particular datasources"
msgstr ""

#: ../../source/drivers/vector/csv.rst:541
msgid "The CSV driver can also read files whose structure is close to CSV files :"
msgstr ""

#: ../../source/drivers/vector/csv.rst:544
msgid ""
"Airport data files NfdcFacilities.xls, NfdcRunways.xls, NfdcRemarks.xls "
"and NfdcSchedules.xls found on that `FAA website "
"<http://www.faa.gov/airports/airport_safety/airportdata_5010/menu/index.cfm>`__"
msgstr ""

#: ../../source/drivers/vector/csv.rst:548
msgid ""
"Files from the `USGS GNIS "
"<http://geonames.usgs.gov/domestic/download_data.htm>`__ (Geographic "
"Names Information System)"
msgstr ""

#: ../../source/drivers/vector/csv.rst:552
msgid "The allCountries file from `GeoNames <http://www.geonames.org>`__"
msgstr ""

#: ../../source/drivers/vector/csv.rst:554
msgid ""
"`Eurostat .TSV files "
"<http://epp.eurostat.ec.europa.eu/NavTree_prod/everybody/BulkDownloadListing?file=read_me.pdf>`__"
msgstr ""

#: ../../source/drivers/vector/csv.rst:558
msgid "Other Notes"
msgstr ""

#: ../../source/drivers/vector/csv.rst:560
msgid ""
"`GeoCSV specification <http://giswiki.hsr.ch/GeoCSV>`__ (supported by "
"GDAL >= 2.1)"
msgstr ""

#: ../../source/drivers/vector/csv.rst:562
msgid ""
"Initial development of the OGR CSV driver was supported by `DM Solutions "
"Group <http://www.dmsolutions.ca/>`__ and `GoMOOS "
"<http://www.gomoos.org/>`__."
msgstr ""

#: ../../source/drivers/vector/csv.rst:565
msgid ""
"`Carto <https://carto.com/>`__ funded field type auto-detection and open "
"options related to geometry columns."
msgstr ""

#~ msgid "Driver short name"
#~ msgstr ""

#~ msgid "CSV"
#~ msgstr ""

